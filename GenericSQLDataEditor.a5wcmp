{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "onDialogInitialize": "function onDialogInitialize as v (e as p)\n'Request - The Request object. Includes Request.Variables, which should be used instead of the older e.rv construct\n'Session - The Session object. Should be used instead of the older e.session construct\n'Inside e:\n'e.tmpl = Component definition\n'e.rtc = Runtime calculations - you can use this to store data to be passed to other server side events (Note: the 'rtc' object cannot be used to persist state information - i.e. you can't set a value in rtc and then read that value in a subsequent callback. To persist state info see e._state).\n'e.arguments = SQL::Arguments object with values for each of the arguments defined in this component.  To read a value from arguments: e.arguments.find(\"argumentName\").data\n'TIP: You can also set the value of an argument. For example: e.arguments.set(\"country\",\"portugal\")\n'TIP: If you need to write code that performs actions on a SQL database you can use the 'Xbasic SQL Actions Code Generator' by right clicking and selecting the 'Genies...' menu option\n\ndim js as c = \"\"\ndim ix as n = e.tmpl.page_fields.findi(\"connectionstring\",\"v.variablename\")\nif ix = 0 then \n\tdim msgTxt as c = \"Component does not include a Drop Down box control called 'connectionstring'.\"\n\tmsgTxt = js_escape(msgTxt)\n\tdim msg as c = \"<span style=\\\"color:red;\\\">\"+msgTxt+\"</span>\"\n\tdim js as c = \"var obj = $('div1'); if(obj) {obj.innerHTML = '\"+msg+\"';} else {alert('\"+msgTxt+\"')};\"\nelse\n\tif eval_valid(\"e.tmpl.page_fields[ix].v.dropdownbox.choices\") = .f. then \n\t\tdim msgTxt as c = \"The 'connectionstring' control is not configured as a Drop Down Box control.\"\n\t\tmsgTxt = js_escape(msgTxt)\n\t\tdim msg as c = \"<span style=\\\"color:red;\\\">\"+msgTxt+\"</span>\"\n\t\tdim js as c = \"var obj = $('div1'); if(obj) {obj.innerHTML = '\"+msg+\"';} else {alert('\"+msgTxt+\"')};\"\n\n\telse\n\t\tdim choices as c = e.tmpl.page_fields[ix].v.dropdownbox.choices\n\t\tif choices = \"\" then \n\t\t\tdim msgTxt as c = \"You have not specified the connection string choices for the 'connectionstring' Drop Down Box control.\"\n\t\t\tmsgTxt = js_escape(msgTxt)\n\t\t\tdim msg as c = \"<span style=\\\"color:red;\\\">\"+msgTxt+\"</span>\"\n\t\t\tdim js as c = \"var obj = $('div1'); if(obj) {obj.innerHTML = '\"+msg+\"';} else {alert('\"+msgTxt+\"')};\"\n\n\t\tend if \n\tend if \nend if \n\nif js <> \"\" then \n\te.javascript = js \nend if \n'-------------------Calling Python code ----------------------------------------------------------------------------------------\n'If you prefer to write server-side code using Python, here is how you can call a Python function:\n'\tdim returnValue as c =  helper::Python::Call(\"Python module name - without .py extension\",\"Python function\",e,session,request)\n'To force a reload of your Python module after you have edited your Python code:\n'\thelper::Python::ReloadModule(\"Python module name - without .py extension\")\n\n'Python functions must be defined in a Python module (file with a .py extension) that is stored in the Python folder in your Web Project\n'For more information on calling Python function, see \"https://documentation.alphasoftware.com/documentation/index?search=python%20guide\"\n'---------------------------------------------------------------------------------------------------------------------------------\n\n\n\n\n'You can set the initial value of any field by setting the property (see comment at end for Javascript technique to use when setting values for a large number of controls)\n'e.control.<fieldname>\n'For example:\n'e.control.firstname = \"Fred\"\n'e.control.lastname = \"Jones\"\n\n'For multi-valued controls (such as checkbox, List control configured as multi-select, etc.) you can set the value to a cr-lf list of values or use the special array() syntax.\n'Either of the following two methods will work\n'e.control.colors = \"array(red,green)\"\n'e.control.colors = comma_to_crlf(\"red,green\")\n\n'To set the value of a field in a repeating section, you must use \"_A5INSTANCE\" and the instance number as a suffix on the fieldname.\n'For example:\n'e.control.firstname_A5INSTANCE2 = \"Bob\"  'sets the value in the 2nd row of the repeating section.\n\n'To specify any javascript that you want to execute set the  e.javascript property. For example:\n'e.javascript = \"alert('hello');\"\n\n'You can set 'state' variables in this event. The value of any state variables will be available in all subsequent ajax callbacks.\n'To set a state variable:\n'e._state.myvar1 = \"value1\"\n'e._state.myvar2 = \"value2\"\n\n\n'Using Javascript to Set Control Values and the Row Count in a Repeating Section -- Recommended For Maximum Efficiency (Advanced users)\n'---------------------------------------------------------------------------------------------------------------------------\n'When setting the value of a large number of controls, you will improve performance if you generate the Javascript directly,\n'rather than setting properties in the e.control object (as described above) and then having Alpha Five generate the Javascript from this object.\n'The following example shows Javascript code that sets the number of rows in a Repeating Section and sets the value of various control\n'in the top section and Repeating Section of the Dialog:\n\n'Generate the Javascript to emit\n'dim js as c\n'js = <<%txt%\n'var rows = 7;\n'var setFocusToFirst = true;\n'var nullOutExistingData = true;\n'var repeatingSectionId = 'CONTAINER_1';\n'{dialog.object}._setRepeatingSectionRowCount(repeatingSectionId,rows,setFocusToFirst,nullOutExistingData);\n'var _d = {};\n\n'//Next command is optional. It is ONLY needed if the ._setRepeatingSectionRowCount() method has been called.\n'//The command copies default values into the _d object. Without this command, default values defined in the component will not be set.\n'//$u.o.assign(_d,DLG1_DlgObj.originalValues[0]);\n\n'_d['B'] = 'alpha'; //set the value of a control called 'B'\n'_d['E:2'] = 'beta'; //set the value of a control called 'E' in the 2nd Repeating Section row\n'_d['G:6'] = ['Red','Green']; //set the value of a checkbox called 'G' in the 6th Repeating Section row to 'Red' and 'Green'\n'{dialog.object}.prepare();\n'{dialog.object}.populate(_d);\n'{dialog.object}.refreshClientSideComputations();\n\n'%txt%\n\n'Now, emit the Javascript...\n'e.javascript = js\n\n'NOTE: In the above example, if the ._setRepeating() method is called in the 'onDialogInitialize' event, you are responsible for setting\n'values in ALL of the controls in the component. For example, if you have defined default values for some controls, and then set the values\n'of other controls using the .populate() method, only the values set in the _d object will be set. (The default values will NOT be set).\n'You can, however, put the default values into the _d object using this code:\n'$u.o.assign(_d,{dialog.object}.originalValues[0]);\n\n\n\n\n'Tip: You can use the xbasic varToJSON() function to help generate the Javascript object passed to the .populate() method.\n'For example:\n'dim j as p\n'j.firstname = \"John\"\n'j.lastname = \"Smith\"\n'j.quantity_a5instance1 = \"2\"\n'dim j.colorchoices_a5instance2[3] as c\n'j.colorchoices_a5instance2[1] = \"Red\"\n'j.colorchoices_a5instance2[2] = \"Blue\"\n'dim jsTxt as c\n'jsTxt = varToJSON(j)\n'js = \"{dialog.object}.populate(\" + jsTxt + \"); {dialog.object}.prepare();\"\n\n\n'TIP: To simulate session variables when running in Working Preview you can use this code:\n'if a5_isWorkingPreview() then\n'\t'running in working preview\n'\tsession.var1 = \"simulated value for var1\"\n'end if\n\nend function\n",
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "XbasicFunctionDeclarations": "function xb_selectFields as c (e as p)\n\tdim fieldsJSON as c = e.__fields\n\tdim p as p \n\t\n\tp = json_parse(fieldsJSON)\n\tdim fields as c = p.dump()\n\tfields = crlf_to_comma(fields)\n\te.flagPopulateFieldsList = .f.\n\te.__table = e.dataSubmitted.table\n\te.__fields = fields \n\tdim json_pagination as c \n\t\n\tif eval_valid(\"request.variables.__sspagination\") then \n\t\tjson_pagination = request.variables.__sspagination\n\t\tdim ps as p \n\t\tps = json_parse(json_pagination)\n\t\te.__userFilter = ps.__userFilter\n\t\te.__argumentsXML = ps.__argumentsXML\n\tend if \n\t\n\tdim js as c = xb_populatess(e)\n\txb_selectFields = js \nend function \n\nfunction xb_populatess as c (e as p)\n\ndim cs as c = e.dataSubmitted.connectionstring\ndim table as c = e.__table\n\n\t\ndim args as sql::arguments \nargs = e.rtc.args\ntin.spreadsheetName = \"ss\"\ntin.connectionstring = e.dataSubmitted.connectionstring\ntin.table = table\nif eval_valid(\"e.__fields\") then \n\ttin.fields = e.__fields\n\t'debug(1)\nend if \n\nif eval_valid(\"e.__userFilter\") then \n\ttin.userFilter = e.__userFilter\n\t'debug(1)\nend if \n\nif eval_valid(\"e.__argumentsXML\") then \n\ttin.argumentsXML = e.__argumentsXML\n\t'debug(1)\nend if \n\ntin.hasbeenRendered = .t.\ndim e.flagPopulateFieldsList as l = default .t.\nif e.flagPopulateFieldsList  then \n\tdim allfields as c =  a5_getSQLTableFields(table,cs)\n\tdim pf as p\n\tpf = json_parse(allfields)\n\tdim fields[0] as p\n\tdim i as n \n\tdim count as n \n\tcount = pf.size()\n\tfor i = 1 to count \n\t\tdim ix2 as n = fields.append()\n\t\tfields[ix2].FieldName = pf[i].name \n\tnext i \n\tdim jsonFields as c = json_generate(fields)\n\tdim js_fields as c = \"var lObj = {dialog.object}.getControl('fields');\" + crlf()\n\tjs_fields = js_fields + \"var data = \" + jsonFields + crlf()\n\tjs_fields = js_fields + \"lObj.populate(data);  var ele = {dialog.object}.getPointer('FIELDLIST'); ele.style.display = '';lObj.refresh();\"\nelse\n\t'ensure that the field list passed in includes primary key\n\tdim js_fields as c = \"\"\n\tdim allfields as c =  a5_getSQLTableFields(table,cs)\n\tdim pf as p\n\tpf = json_parse(allfields)\n\tdim pkfields as c = pf.dump_properties(\"name\",\"primarykey\")\n\ttin.fields = alltrim(pkfields) + crlf() + tin.fields \n\ttin.fields = word_unique(tin.fields,crlf())\n\ttin.fields = remove_blank_lines(tIn.fields)\nend if \ndim js as c =  a5dialogHelper_getJSForPrePopulatedSpreadsheet(e.tmpl,args, tin)\nxb_populatess = js + js_fields\n\nend function \n\nfunction xb_refreshSS as c (e as p)\ntmpl = e.tmpl\ndim tin as p\ntin.flagExplicitRefresh = .t.\ntin.spreadsheetName = \"ss\"\ntin.connectionstring = e.dataSubmitted.connectionstring\ntin.table = e.dataSubmitted.table\ndim args as sql::arguments \nargs = e.arguments \n\ndim js as c =  a5dialogHelper_getJSForPrePopulatedSpreadsheet(tmpl,args, tin)\nxb_refreshSS = js \nend function \n\n\nfunction xb_getTables as c (e as p)\n\t\ndim cs as c = e.__cs\nif atc(\"::name::\",cs) = 0 then \n\tcs = \"::name::\" + cs\nend if\ndim cn as sql::Connection\ndim flag as l \nflag = cn.open(cs)\nif flag = .f. then \n\texit function \nend if \ndim tables as c = cn.listTables()\ntables = crlf() + tables\n\ndim js as c \njs = \"\"\njs = js + \"var data = \" + js_list_to_array(tables) + \";\" + crlf()\njs = js + \"{dialog.Object}.populateDropdownBox('table',data,true); {dialog.object}.setControlDisplay('table',true)\"\nxb_getTables = js \t\nend function \n\nfunction xb_search as c (e as p)\n\t'_debug(1)\n'e.__searchFor := \"5\"\n'e.__searchField := \"Quantity\"\n'e.__pagination\n'e.__searchFor := \"5\"\n'e.__searchField := \"Quantity\"\n'+e.__pagination := \"{\"__primaryKeyField\":\"OrderID,ProductID\",\"__page\":1,\"__pageSize\":-1,\"__count\":2155,\"__spreadsheetname\":\"ss\"}\"\n\tdim countClause as n\n\t\n\te.__searchFor = comma_to_crlf(e.__searchFor)\n\tcountClause = line_count( e.__searchFor)\n\t\n\tdim paginationJSON as c = e.__pagination\n\tdim pp as p = json_parse(paginationJSON)\n\tdim ssname as c = pp.__spreadsheetname\n\tdim ix as n \n\tix = e.tmpl.page_fields.findi(ssname,\"v.variablename\")\n\tif ix = 0 then \n\t\texit function \n\tend if \n\tdim definitionJSON as c   = e.tmpl.page_fields[ix].v.customControl.definitionJSON\n\tdim pd as p \n\tpd = json_parse(definitionJSON)\n\tdim cs as c \n\tdim table as c \n\tcs = pd.pre.connectionstring\n\ttable = pd.pre.table\n\tdim pageSize as c\n\tpageSize = pd.pre.pageSize\n\tdim fields as c = pd.pre.fields\n\tfields = comma_to_crlf(fields)\n\tfields = remove_blank_lines(fields)\n\tfields = *for_each(x,a5_qualify_field(x),fields)\n\tdim sql as c = \"select \" + crlf_to_comma(fields) + \" FROM \" + a5_qualify_field(table)\n\tif pageSize <> \"-1\" then \n\t\tsql = \"select First \" + pageSize + \" \" + crlf_to_comma(fields) + \" FROM \" + a5_qualify_field(table)\n\tend if \n\t\n\tdim allfields as c\n\tallfields = a5_getSQLTableFields(table,cs)\n\tdim pff as p = json_parse(allfields)\n\tdim args as sql::Arguments\n\tdim ix as n \n\tix = pff.findi(e.__searchField,\"Name\")\n\tif ix > 0 then \n\t\tdim _type as c = pff[ix].type \n\tend if \n\tif _type = \"e\" then \n\t\t_type = \"N\"\n\tend if \n\tif countClause = 1 then\n\t\tdim _for as c = e.__searchFor\n\t\t_for = stritran(_for,\"{comma}\",\",\")\n\t\tdim searchType as c = \" = \"\n\t\tif atc(\"%\",_for) > 0 then \n\t\t\tsearchType = \" LIKE \"\n\t\tend if \n\t\tdim filter as c = e.__searchField + searchType + \" :\" + e.__searchField\n\t\targs.add(e.__searchfield,convert_type(e.__searchFor,_type))\n\t\n\telse\n\t\tdim filter as c = \"\"\n\t\tdim i as n \n\t\tfor i = 1 to countClause\n\t\t\tdim _for as c = word(e.__searchfor,i,crlf())\n\t\t\t_for = stritran(_for,\"{comma}\",\",\")\n\t\t\tdim searchType as c = \" = \"\n\t\t\tif atc(\"%\",_for) > 0 then \n\t\t\t\tsearchType = \" LIKE \"\n\t\t\tend if \n\t\t\t\n\t\t\tfilter = filter + e.__searchField + searchType +\" :\" + e.__searchfield + \"_\" + i + crlf()\n\t\t\targs.add(e.__searchfield + \"_\" + i ,convert_type(_for,_type))\n\t\tnext i \n\t\tfilter = *for_each(x,\"(\" + x + \")\",filter)\n\t\tfilter = alltrim(filter)\n\t\tfilter = stritran(filter,crlf(),\" OR \")\n\tend if\n\tsql = a5_SQL_AddFilterOrder(sql,filter,\"\",\"\")\n\t\n\t\n\t\n\tdim flag as l \n\tdim cn as sql::Connection\n\tflag = cn.open(cs)\n\tflag = cn.Execute(sql,args)\n\tdim json as c \n\tjson = cn.ResultSet.tojson()\n\t\n\tdim js as c = \"\"\n\tjs = js + \"var data = \" + json + \";\" + crlf()\n\tjs = js + \"var obj = {dialog.object}.getControl('\"+ssname+\"');\" + crlf()\n\tjs = js + \"obj.valueObj = data; obj.refresh();\"\n\t\n\txb_search = js\n\t\n\n\t\n\t\n\n\nend function \n",
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "beforePrepare": "{Dialog.object}.setControlDisplay('table',false)\nvar ele = {dialog.object}.getPointer('FIELDLIST')\nele.style.display = 'none';",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "\n",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onFirestoreLoaded": "",
            "onFirestoreAuthStateChanged": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "MM/dd/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "info": {
            "createdBy": "selwyn",
            "dateCreated": "2023-10-8",
            "dateLastEdited": "2023-10-8",
            "revisionnumber": 370
        },
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": ""
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "layout_directive_statictext",
                "display": "{B=White,Light Blue} 1{T=.3}{C=Black,White}{B=White,Light Blue} 1{T=.3}{C=Black,White}{B=White,Light Blue}{Data=1e3c0b09-25fe-4be2-a34c-14760a7d56e6}{I:'$$format.text'} [Static Text:<div id=\"div1\">This component allows you...]<<break>>",
                "idInternal": "1e3c0b09-25fe-4be2-a34c-14760a7d56e6",
                "crc": "4294961127",
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.STATICTEXT_1\" title=\"\"  class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"   ><div id=\"div1\">This component allows you to maintain the data in a SQL table.<br>\nSelect the connection string and the table you want to edit. <br>\nYou can optionally select the fields from the table to display.<br>\nOnce you have selected a connection string and a table, you can filter the records by clicking on the <b>Add new search field</b> button.\n</div></div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "StaticText": "<div id=\"div1\">This component allows you to maintain the data in a SQL table.<br>\nSelect the connection string and the table you want to edit. <br>\nYou can optionally select the fields from the table to display.<br>\nOnce you have selected a connection string and a table, you can filter the records by clicking on the <b>Add new search field</b> button.\n</div>",
                    "localxbasic": "",
                    "localjavascript": "",
                    "Class": "<Default>",
                    "BreakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "cssGridItemPropertiesJSON": "",
                    "id": "STATICTEXT_1",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "",
                        "icon": "$$format.text",
                        "displayText": "[Static Text:<div id=\"div1\">This component allows you...]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 1{T=.3}{C=Black,White}{B=White,Light Blue} 1{T=.3}{C=Black,White}{B=White,Light Blue}{Data=1e3c0b09-25fe-4be2-a34c-14760a7d56e6}{I:'$$format.text'} [Static Text:<div id=\"div1\">This component allows you...]<<break>>"
                    },
                    "controlContainerStyle": "",
                    "listview": {
                        "allchildren": ""
                    }
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue} 2{T=.3}{C=Black,White}{B=White,Light Blue} 2{T=.3}{C=Black,White}{B=White,Light Blue}{Data=153885ff_403d_429e_ab13_62fca6b719bd}{I:'$$control.editCombo'} [connectionstring]",
                "displayODFlat": "{Data=153885ff_403d_429e_ab13_62fca6b719bd}",
                "idInternal": "153885ff_403d_429e_ab13_62fca6b719bd",
                "displayOD": "{Data=153885ff_403d_429e_ab13_62fca6b719bd}",
                "displayODtree": "{Data=153885ff_403d_429e_ab13_62fca6b719bd}",
                "crc": "4294952919",
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DropDownBox",
                    "variableName": "connectionstring",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Connectionstring",
                    "class": "<Default>",
                    "breakType": "None",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "Above",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "javascript": {
                        "onChange": "//alert(this.value)\ndata = '__cs=' + this.value\n{Dialog.object}.ajaxCallback('','','xb_getTables','',data)"
                    },
                    "dropdownbox": {
                        "size": 1,
                        "type": "Static",
                        "selectStyle": "Single",
                        "choices": "",
                        "errorinlinestyle": "",
                        "datasource": "AlphaDAO",
                        "additionalChoicesPre": "",
                        "additionalChoicesPost": "",
                        "choicesVariableName": "",
                        "dbf": {
                            "table": "",
                            "displayValueField": "",
                            "storedValueField": "",
                            "filter": "",
                            "parameter_string": ""
                        },
                        "cs": {
                            "connectionString": "",
                            "sql": "",
                            "parameter_string": ""
                        },
                        "maxchoices": 0,
                        "stylefieldiferror": true,
                        "notInListRule": "Add to List",
                        "hasCascadingChoices": false,
                        "hasDynamicFilter": false,
                        "dynamicfilter": "",
                        "methodForComputingCascadingFilter": "<Auto>",
                        "explicitCasacadingFilter": "",
                        "parentControl": "",
                        "noSelectionDisplayValue": "",
                        "fieldNameOfFieldLinkedToParentControl": "<Auto>",
                        "fieldTypeOfFieldLinkedToParentControl": "",
                        "noChoicesDisplayValue": "",
                        "noChoicesFound": "",
                        "autoSubmitSearch": false,
                        "flagIsDefined": true,
                        "javascriptcontroljsonsettings": "",
                        "javascriptcontrol": false
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "",
                        "icon": "$$control.editCombo",
                        "displayText": "[connectionstring]",
                        "parentPanelCardId": "",
                        "break": false,
                        "display": "{B=White,Light Blue} 2{T=.3}{C=Black,White}{B=White,Light Blue} 2{T=.3}{C=Black,White}{B=White,Light Blue}{Data=153885ff_403d_429e_ab13_62fca6b719bd}{I:'$$control.editCombo'} [connectionstring]"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "_jsOnChangeFunction": "function onChange_connectionstring_153885ff403d429eab1362fca6b719bd(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('CONNECTIONSTRING'); data = '__cs=' + this.value; _dlgObj.ajaxCallback('','','xb_getTables','',data);};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'CONNECTIONSTRING': {info: {controlType: 'DropDownBox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.CONNECTIONSTRING\" for=\"{grid.componentname}.V.R{grid.rownumber}.CONNECTIONSTRING\" title=\"\" class=\"[class.dialogFieldLabel]\" style=\"display:block;\">Connectionstring</label>\n<!--LblE-->\n\t<!--FldS--><select \t\n\t\tsize=\"1\" \n\t\tclass=\"[theme:edit.base.className|class.dialogSelect] \"  \n\t\tname=\"V.R{grid.rownumber}.CONNECTIONSTRING\" \n\t\ttitle=\"\"\n\t\tstyle=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"\n\t\tid=\"{grid.componentname}.V.R{grid.rownumber}.CONNECTIONSTRING\"  \n\t\t onChange=\"var tfunc = function() {onChange_connectionstring_153885ff403d429eab1362fca6b719bd.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"  \n\t\t\n\t\t\n\t\t >\n{dialog.dropdownboxchoices.CONNECTIONSTRING}\n</select>\n<!--FldE-->\n</div>",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue} 3{T=.3}{C=Black,White}{B=White,Light Blue} 3{T=.3}{C=Black,White}{B=White,Light Blue}{Data=533b60ef_71c4_4e74_aab4_1d88887d15dd}{I:'$$control.editCombo'} [table]<<break>>",
                "displayODFlat": "{Data=533b60ef_71c4_4e74_aab4_1d88887d15dd}",
                "idInternal": "533b60ef_71c4_4e74_aab4_1d88887d15dd",
                "displayOD": "{Data=533b60ef_71c4_4e74_aab4_1d88887d15dd}",
                "displayODtree": "{Data=533b60ef_71c4_4e74_aab4_1d88887d15dd}",
                "crc": "4294916432",
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "dropdownbox",
                    "variableName": "table",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Table",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "Above",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "javascript": {
                        "onChange": "var data = '__table=' + this.value;\n{dialog.object}.ajaxCallback('','','xb_populatess','',data)"
                    },
                    "dropdownbox": {
                        "size": 1,
                        "type": "Static",
                        "selectStyle": "Single",
                        "choices": "",
                        "errorinlinestyle": "",
                        "datasource": "AlphaDAO",
                        "additionalChoicesPre": "",
                        "additionalChoicesPost": "",
                        "choicesVariableName": "",
                        "dbf": {
                            "table": "",
                            "displayValueField": "",
                            "storedValueField": "",
                            "filter": "",
                            "parameter_string": ""
                        },
                        "cs": {
                            "connectionString": "",
                            "sql": "",
                            "parameter_string": ""
                        },
                        "maxchoices": 0,
                        "stylefieldiferror": true,
                        "notInListRule": "Add to List",
                        "hasCascadingChoices": false,
                        "hasDynamicFilter": false,
                        "dynamicfilter": "",
                        "methodForComputingCascadingFilter": "<Auto>",
                        "explicitCasacadingFilter": "",
                        "parentControl": "",
                        "noSelectionDisplayValue": "",
                        "fieldNameOfFieldLinkedToParentControl": "<Auto>",
                        "fieldTypeOfFieldLinkedToParentControl": "",
                        "noChoicesDisplayValue": "",
                        "noChoicesFound": "",
                        "autoSubmitSearch": false,
                        "flagIsDefined": false,
                        "javascriptcontroljsonsettings": "",
                        "javascriptcontrol": false
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "color": "",
                        "icon": "$$control.editCombo",
                        "displayText": "[table]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 3{T=.3}{C=Black,White}{B=White,Light Blue} 3{T=.3}{C=Black,White}{B=White,Light Blue}{Data=533b60ef_71c4_4e74_aab4_1d88887d15dd}{I:'$$control.editCombo'} [table]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "_jsOnChangeFunction": "function onChange_table_533b60ef71c44e74aab41d88887d15dd(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('TABLE'); var data = '__table=' + this.value; _dlgObj.ajaxCallback('','','xb_populatess','',data);};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'TABLE': {info: {controlType: 'dropdownbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.TABLE\" for=\"{grid.componentname}.V.R{grid.rownumber}.TABLE\" title=\"\" class=\"[class.dialogFieldLabel]\" style=\"display:block;\">Table</label>\n<!--LblE-->\n\t<!--FldS--><select \t\n\t\tsize=\"1\" \n\t\tclass=\"[theme:edit.base.className|class.dialogSelect] \"  \n\t\tname=\"V.R{grid.rownumber}.TABLE\" \n\t\ttitle=\"\"\n\t\tstyle=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"\n\t\tid=\"{grid.componentname}.V.R{grid.rownumber}.TABLE\"  \n\t\t onChange=\"var tfunc = function() {onChange_table_533b60ef71c44e74aab41d88887d15dd.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"  \n\t\t\n\t\t\n\t\t >\n{dialog.dropdownboxchoices.TABLE}\n</select>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "layout_directive_ContainerBegin",
                "display": "{B=White,Light Blue} 4{T=.3}{C=Black,White}{B=White,Light Blue} 4{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2}{I:'$$format.border.style.dash'} [Container: FIELDLIST]",
                "idInternal": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                "lastIndex": 12,
                "crc": "4294964953",
                "precalc": {
                    "ControlHTML": "<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.FIELDLIST\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"A5CWLayout \"  style=\"width: 100%; \"  ><!--DIV for Container control-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "localxbasic": "",
                    "localjavascript": "",
                    "container": {
                        "ID": "FIELDLIST",
                        "contentAlignment": "Left",
                        "contentVerticalAlign": "Top",
                        "CSSGridJSON": "",
                        "useFlex": true,
                        "useFlexLeft": false,
                        "alignItems": "",
                        "containersettype": "",
                        "width": "100%",
                        "edgeOffset": "",
                        "buttonGroup": {
                            "orientation": "Horizontal"
                        },
                        "subType": "None",
                        "allowScrolling": false,
                        "scrolling": {
                            "axis": "Both",
                            "stopPropogation": false,
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "pull": {
                            "isDefined": false,
                            "javascript": {
                                "onPullRelease": "",
                                "onPullEnd": "",
                                "onPull": ""
                            },
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "constrainTabKey": "No",
                        "constrainJavascriptFunction": ""
                    },
                    "cssGridItemPropertiesJSON": "",
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 4,
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "$$format.border.style.dash",
                        "displayText": "[Container: FIELDLIST]",
                        "parentPanelCardId": "",
                        "lastID": "496b84b9-ee27-4191-9fcd-7fefe9d3f1be",
                        "break": false,
                        "display": "{B=White,Light Blue} 4{T=.3}{C=Black,White}{B=White,Light Blue} 4{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2}{I:'$$format.border.style.dash'} [Container: FIELDLIST]"
                    }
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue} 5{T=.3}{C=Black,White}{B=White,Light Blue} 5{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{Data=91a503b4-9338-43c8-8db0-ac64a9c03cbc}{I:'$$table.query'} [search]<<break>>",
                "idInternal": "91a503b4-9338-43c8-8db0-ac64a9c03cbc",
                "parentContainer": 4,
                "crc": "4294905972",
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "search",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Search",
                    "class": "<Default>",
                    "width": "100%",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "Above",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "customControl": {
                        "height": "",
                        "width": "100%",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\tfields: {\n\t\tFieldName: {\n\t\t\tlabel: 'FieldName',\n\t\t\tdefaults: {\n\t\t\t\top: '='\n\t\t\t}\n\t\t}\n\t},\n\tbuttons: {\n\t\tadd: 'Add new search field...',\n\t\tremove: '<img src=\"svgIcon=#alpha-icon-trash:icon\" />',\n\t\tfilter: '<img src=\"svgIcon=#alpha-icon-filter:icon\" />',\n\t\tdate: '<img src=\"svgIcon=#alpha-icon-calendar:icon\" />',\n\t\tlist: '<img src=\"svgIcon=#alpha-icon-chevronDown:icon\" />',\n\t\tnumber: {\n\t\t\tplus: '<img src=\"svgIcon=#alpha-icon-add:icon\" />',\n\t\t\tminus: '<img src=\"svgIcon=#alpha-icon-remove:icon\" />'\n\t\t},\n\t\tsave: '<img src=\"svgIcon=#alpha-icon-save:icon\" />Save query',\n\t\tload: '<img src=\"svgIcon=#alpha-icon-load:icon\" /> Load query',\n\t\trun: '<img src=\"svgIcon=#alpha-icon-filter:icon\" /> Run query',\n\t\tmenu: '<img src=\"svgIcon=#alpha-icon-ellipsisVertical:icon\" />',\n\t\tdaterangepicker: {\n\t\t\tok: '&nbsp;OK&nbsp;',\n\t\t\tcancel: 'Cancel'\n\t\t},\n\t\tcancel: '<img src=\"svgIcon=#alpha-icon-x:icon\" /> Cancel',\n\t\tclearsearch: '<img src=\"svgIcon=#alpha-icon-filterOff:icon\" /> Clear search',\n\t\tstringloadquery: 'Specify saved query to load',\n\t\tstringsavequery: 'Specify name for query',\n\t\tstringquerynamewatermark: 'Query name'\n\t},\n\tsearchOptions: {\n\t\tdisplayDebuggingInfo: false,\n\t\tplaceHolder: '',\n\t\tloadQuery: false,\n\t\tsaveQuery: false,\n\t\tlistName: 'ss'\n\t},\n\tsearchMode: 2,\n\tlistName: 'ss',\n\tsubtype: 'AdvancedListSearch',\n\tvariableName: '',\n\tsettingsJSON: '{\\r\\n\\t\"listName\": \"ss\",\\r\\n\\t\"searchMode\": 2,\\r\\n\\t\"inputId\": \"{variablename}\",\\r\\n\\t\"variableName\": \"{VARIABLENAME}\",\\r\\n\\t\"theme\": \"{dialog.style}\",\\r\\n\\t\"autoRefreshOnResize\": false,\\r\\n\\t\"datasource\": {\\r\\n\\t\\t\"lowLevel\": \"Data\",\\r\\n\\t\\t\"type\": \"Static JSON\"\\r\\n\\t},\\r\\n\\t\"multiple\": true,\\r\\n\\t\"selectionMode\": \"default\",\\r\\n\\t\"loopNavigate\": false,\\r\\n\\t\"loopNavigateNullSelection\": true,\\r\\n\\t\"allowNullSelection\": false,\\r\\n\\t\"allowTextSelection\": false,\\r\\n\\t\"allowNullDeselection\": false,\\r\\n\\t\"autoRefresh\": false,\\r\\n\\t\"allowAnyValue\": true,\\r\\n\\t\"captureFocus\": false,\\r\\n\\t\"scroll\": false,\\r\\n\\t\"parseValue\": function() {this.data._parsed = [];\\r\\nvar val = this.value[0];\\r\\nif(val){\\r\\n if(val != \\'\\') {\\r\\n  try {\\r\\n   var obj = JSON.parse(val);\\r\\n   this.data._parsed = obj;\\r\\n  } catch(err){\\r\\n   console.log(\\'ERROR: query builder \"\\'+this.variableName+\\'\" could not parse value.\\');\\r\\n  }\\r\\n }\\r\\n}\\r\\nthis.refresh();},\\r\\n\\t\"addItem\": function(v) {var f = this.data.fields[v];\\r\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\r\\nif(typeof f.defaults != \\'undefined\\'){\\r\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\r\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\r\\n}\\r\\nthis.data._parsed.push(d);\\r\\nthis.setValue(JSON.stringify(this.data._parsed));},\\r\\n\\t\"showPicker\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'\\';\\r\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\r\\n this._pickerVBEle.style.display = \\'\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n}\\r\\nif(type == \\'add\\' || type == \\'filter\\') {\\r\\n this._pickerEle.style.width = \\'300px\\';\\r\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\r\\n this._pickerEle.style.width = \\'\\';\\r\\n} else {\\r\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\r\\n}\\r\\nthis._pickerEle.style.display = \\'\\';\\r\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\r\\nsetTimeout(function(){\\r\\n this._pickerShown = true;\\r\\n}.bind(this),0);\\r\\nthis._pickerType = type;\\r\\nthis._pickerIndex = index;},\\r\\n\\t\"hidePicker\": function() {this._pickerEle.style.display = \\'none\\';\\r\\nthis._pickerShown = false;},\\r\\n\\t\"pick\": function(v) {if(this._pickerType == \\'add\\'){\\r\\n this.addItem(v);\\r\\n} else if(this._pickerType == \\'filter\\'){\\r\\n this.data._parsed[this._pickerIndex].op = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n} else{\\r\\n this.data._parsed[this._pickerIndex].value = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n}},\\r\\n\\t\"suggest\": function(index,data) {if(this._pickerIndex != index){\\r\\n this.hidePicker();\\r\\n}\\r\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\r\\nif(!ele) return false;\\r\\nif(data){\\r\\n if(data.length == 0){\\r\\n  this.hidePicker();\\r\\n } else{\\r\\n  this._picker.layout = \\'list\\';\\r\\n  this._picker.populate(data);\\r\\n  this._picker.setValue(ele.value);\\r\\n  try{\\r\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\r\\n   if(f.data.cacheData) f.data = data;\\r\\n  }catch(e) { };\\r\\n }\\r\\n} else{\\r\\n this._picker.layout = \\'loading\\';\\r\\n this._picker.refresh();\\r\\n}\\r\\nif(!this._pickerShown){\\r\\n this.showPicker(ele,\\'suggest\\',index);\\r\\n}},\\r\\n\\t\"_suggestGet\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\r\\nif(ci._pickerShown){\\r\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\r\\n if(ele){\\r\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\r\\n  if(f){\\r\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\r\\n    if(f.control.data.constructor == Array) {\\r\\n     var _d = f.control.data;\\r\\n     var val = ele.value.toLowerCase();\\r\\n     var data = [];\\r\\n     for(var i = 0; i < _d.length; i++) {\\r\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\r\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\r\\n      }\\r\\n     }\\r\\n     ci._picker.layout = \\'list\\';\\r\\n     ci._picker.populate(data);\\r\\n     return\\r\\n    } else {\\r\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\r\\n      var val = ele.value;\\r\\n      var o = {};\\r\\n      var data = [];\\r\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\n      o.searchType = f.control.data.searchType;\\r\\n      o.staticData = f.control.data.staticchoices ;\\r\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n      data = data.join(\\'&\\');\\r\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n      return;\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n   var val = ele.value;\\r\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\r\\n   var data = [];\\r\\n   var o = {};\\r\\n   o.type = f.control.data.type;\\r\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\no.searchType = f.control.data.searchType;\\r\\n   o.connectionString = f.control.data.connectionString;\\r\\n   o.searchField = f.control.data.field;\\r\\n   o.searchTable = f.control.data.table;\\r\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\r\\n    o.searchFieldStored = \\'\\';\\r\\n   } else {\\r\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\r\\n   }\\r\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n   data = data.join(\\'&\\');\\r\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n  }\\r\\n }\\r\\n}},\\r\\n\\t\"getQueryNames\": function(mode) {var data = this.__savedQueries;\\r\\nvar html = [\\'<div class=\"[theme:listBox.base.className]\" style=\"max-height: 300px; overflow:auto;\">\\'];\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n html.push(\\'<div a5-item=\"\\'+mode+\\'NamedQuery\"  a5-value=\"\\'+i+\\'\" class=\"[theme:listBox.base.item.className]\" onmouseover=\"$acn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  onmouseout=\"$rcn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  >\\' + data[i] + \\'</div>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\');\\r\\nvar _html = \\'\\';\\r\\nif(data.length > 0) {\\r\\n _html = html.join(\\'\\');\\r\\n} else {\\r\\n if(mode.toLowerCase() == \\'load\\') {\\r\\n  _html = \\'There are no Saved Queries\\';\\r\\n } else {\\r\\n  _html = \\'\\';\\r\\n }\\r\\n}\\r\\nreturn _html;},\\r\\n\\t\"_fixButtons\": function(data) {var res = [];\\r\\nvar addHTML = \\'<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\';\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\r\\n}\\r\\nreturn res;},\\r\\n\\t\"layout\": \"Default\",\\r\\n\\t\"layouts\": {\\r\\n\\t\\t\\'Default\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'<div class=\"queryBuilder\">\\',\\r\\n\\t\\t\\t\\'\\t<div class=\"queryBuilderList\">\\',\\r\\n\\t\\t\\t\\'\\t{_parsed}\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div><label class=\"[theme:ux.base.labelClassName]\">{[root].fields[field].label}</label></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type == \\\\\\'switch\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0; width: 100px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\'{dialog.style}\\\\\\'}>>,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\'+[count]+\\\\\\'\" a5-item=\"switch\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'list\\\\\\' || [root].fields[field].control.type == \\\\\\'combolist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" {*if [root].fields[field].control.type == \\\\\\'list\\\\\\'}readonly=\"readonly\" a5-item=\"list\" a5-value=\"{[count]}\"{*endif} class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.list},\\\\\\' a5-item=\"list\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"daterange\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendly\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'datepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"date\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendlysingle\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'step\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" style=\"text-align: center;\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.minus},\\\\\\' a5-item=\"step:-\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.plus},\\\\\\' a5-item=\"step:+\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'buttonlist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*if [root].fields[field].control.multiple}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\',\\\\\\'),\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'suggest\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type != \\\\\\'switch\\\\\\' && [root].fields[field].control.type != \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', style: \\\\\\'white-space:nowrap;\\\\\\', html: [root].buttons.filter + \\\\\\' \\\\\\' + op},\\\\\\' a5-item=\"filter\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.remove},\\\\\\' a5-item=\"remove\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"white-space:nowrap;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [count] < [root]._parsed.length-1}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\',button: {style: \\\\\\'width: 60px;\\\\\\'}},[{html: \\\\\\'AND<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.and.\\\\\\'},{html: \\\\\\'OR<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.or.\\\\\\'}],andor,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"andor:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t{/_parsed}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.add},\\\\\\' a5-item=\"add\"\\\\\\')>>}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if [root].searchOptions.loadQuery}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.load},\\\\\\' a5-item=\"loadQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"saveQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.run},\\\\\\' a5-item=\"runQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.clearsearch},\\\\\\' a5-item=\"clearSearch\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Wait\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'Wait....\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Load\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.LOADSAVEDQUERIES\">{[root].buttons.stringloadquery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t{@[scope].getQueryNames(\\\\\\'load\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Save\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY\" >{[root].buttons.stringsavequery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY2\" style=\"margin-top:10px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t<div><input id=\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\" style=\"width:100%\" placeholder=\"{[root].buttons.stringquerynamewatermark}\" class=\"[theme:edit.primary.className|{dialog.style}Edit]\" /></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t{@[scope].getQueryNames(\\\\\\'set\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"save\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t}\\r\\n\\t\\r\\n\\t},\\r\\n\\t\"onBeforeDraw\": function(html) { \\r\\nif(typeof this.data._parsed == \\'undefined\\') { \\r\\n\\tthis.data._parsed = [];\\r\\n}},\\r\\n\\t\"onBeforePopulate\": function(data) { \\r\\nvar ld = [];\\r\\nif(data.fields){\\r\\n\\tfor(var f in data.fields){\\r\\n\\t\\tld.push({value: f, html: data.fields[f].label});\\r\\n\\t\\tif(typeof data.fields[f].control == \\'undefined\\'){\\r\\n\\t\\t\\tdata.fields[f].control = {type: \\'default\\'};\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nthis._fieldMenu = ld;},\\r\\n\\t\"onChange\": function(v) { \\r\\nif(!this._stopRepaint){\\r\\n\\tthis.parseValue();\\r\\n}},\\r\\n\\t\"_onInitialize\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\r\\nthis.parseValue();\\r\\nvar cEle = $(this.contId);\\r\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\r\\n  if(watch){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\r\\n   if(f){\\r\\n    if(f.control.type == \\'suggest\\' ){\\r\\n     var len = ele.value.length;\\r\\n     var min = 3;\\r\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\r\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\r\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\r\\n    }\\r\\n    var keyCode = e.charCode || e.keyCode;\\r\\n    if(ci._pickerShown){\\r\\n     if(keyCode == 13){\\r\\n      if(ci._picker.value.length > 0){\\r\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\r\\n      }\\r\\n     } else if(keyCode == 38){\\r\\n      ci._picker.navigate(\\'prev\\');\\r\\n     } else if(keyCode == 40){\\r\\n      ci._picker.navigate(\\'next\\');\\r\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\r\\n      if(f.control.data.constructor != Array ) {\\r\\n       clearTimeout(ci._suggestTO);\\r\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\r\\n      } else {\\r\\n       ci._suggestGet();\\r\\n      }\\r\\n     }\\r\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\r\\n     if(keyCode == 40 && e.ctrlKey){\\r\\n      ci.items.list.onClick.call(ci,indx)\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var tag = ele.tagName || \\'\\';\\r\\n  tag = tag.toLowerCase();\\r\\n  if(tag == \\'input\\'){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   if(typeof indx == \\'number\\'){\\r\\n    ci._stopRepaint = true;\\r\\n    ci.data._parsed[indx].value = ele.value;\\r\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\r\\n    ci._stopRepaint = false;\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\nvar pEle = document.createElement(\\'div\\');\\r\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\r\\npEle.className = \\'[theme:menu.base.className]\\';\\r\\npEle.id = this.contId+\\'.picker\\';\\r\\nvar html = [];\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickervb\" class=\"[theme:menu.base.innerClassName]\" style=\"max-height: 300px; overflow: auto;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdate\" class=\"[theme:menu.base.innerClassName]\" style=\"display: none;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterange\" class=\"[theme:menu.base.innerClassName]\" style=\"white-space:nowrap; padding: 2px; display: none;\">\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangestart\" style=\"display:inline-block;margin-right:2px;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangeend\" style=\"display:inline-block;\"></div>\\');\\r\\nhtml.push(\\'<div style=\"text-align:center; margin-top:2px;\">\\');\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\r\\nhtml.push(\\'</div>\\');\\r\\nhtml.push(\\'</div>\\');\\r\\npEle.innerHTML = html.join(\\'\\');\\r\\ncEle.parentNode.appendChild(pEle);\\r\\nthis._pickerEle = pEle;\\r\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\r\\n parentControl: this.variableName,\\r\\n captureFocus: false,\\r\\n loopNavigate: true,\\r\\n loopNavigateNullSelection: true,\\r\\n allowNullSelection: true,\\r\\n allowAnyValue: false,\\r\\n layout: \\'list\\',\\r\\n layouts: {\\r\\n  loading: {\\r\\n   type: \\'static\\',\\r\\n   html: \\'<div class=\"[theme:menu.base.item.className]\">Loading...</div>\\'\\r\\n  },\\r\\n  list: {\\r\\n   type: \\'template\\',\\r\\n   template: [\\r\\n    \\'{*if typeof [value] == \\\\\\'string\\\\\\'}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{[value]}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{[value]}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*else}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{value}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{html}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*endif}\\'\\r\\n   ].join(\\'\\')\\r\\n  }\\r\\n },\\r\\n items: {\\r\\n  listItem: {\\r\\n   selectable: true,\\r\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\r\\n   onClick: function(v){\\r\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n    pvb.pick(v)\\r\\n    pvb.hidePicker();\\r\\n   }\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\r\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onClick: function(v){\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  pvb.pick(v)\\r\\n  pvb.hidePicker();\\r\\n }\\r\\n});\\r\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\r\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onSelect: function() {\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  var _drobj = pvb._pickerDateRangeEnd;\\r\\n  if(this.date > _drobj.date) {\\r\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\r\\n  } else {\\r\\n   _drobj.refresh();\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n disabledDates: {\\r\\n  low: function() {\\r\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n   if(pvb._pickerDateRangeStart) {\\r\\n    return pvb._pickerDateRangeStart.date;\\r\\n   }\\r\\n   return false;\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\r\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\r\\n  this.pick(v);\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\r\\n if(this._pickerShown){\\r\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\r\\n }\\r\\n},this,true); },\\r\\n\\t\"items\": {\\r\\n\\t\\t\\'remove\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed.splice(Number(v),1);\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\tif(this.data._parsed.length == 0 ) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar listName = this.data.searchOptions.listName;\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryData = [];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'add\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(this._fieldMenu);\\r\\n\\t\\t\\tthis.showPicker($(tid),\\'add\\',-1);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'filter\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tvar _filterMenu = [\\r\\n\\t\\t\\t\\t{html: \\'Equals\\', value: \\'=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than\\', value: \\'<\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than\\', value: \\'>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\r\\n\\t\\t\\t];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar type = this.data.fields[f].control.type;\\r\\n\\t\\t\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\r\\n\\t\\t\\tif(exclude.indexOf(type) == -1 ) {\\r\\n\\t\\t\\t\\t _filterMenu = _filterMenu.concat(\\r\\n\\t\\t\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Contains\\', value: \\'..x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Starts with\\', value: \\'x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Ends with\\', value: \\'..x\\'}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(_filterMenu);\\r\\n\\t\\t\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\r\\n\\t\\t\\tthis.showPicker(ele,\\'filter\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'switch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = this.data._parsed[Number(v)];\\r\\n\\t\\tvar f = this.data.fields[d.field];\\r\\n\\t\\tif(f){\\r\\n\\t\\t\\tvar vals = f.control.data;\\r\\n\\t\\t\\tif(vals){\\r\\n\\t\\t\\t\\tif(d.value == vals[0]) d.value = vals[1];\\r\\n\\t\\t\\t\\telse d.value = vals[0];\\r\\n\\t\\t\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'list\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\t\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\r\\n\\t\\t\\tif(d.constructor == Array) { \\r\\n\\t\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\t\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\t\\tthis.showPicker(iEle,\\'list\\',v);\\r\\n\\t\\t\\t\\tiEle.focus();\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\t\\tif(this._pickerIndex != v){\\r\\n\\t\\t\\t\\t\\tthis.hidePicker();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\r\\n\\t\\t\\t\\tif(!ele) return false;\\r\\n\\t\\t\\t\\tthis._picker.layout = \\'loading\\';\\r\\n\\t\\t\\t\\tthis._picker.refresh();\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif(!this._pickerShown){\\r\\n\\t\\t\\t\\t\\tthis.showPicker(ele,\\'list\\',v);\\r\\n\\t\\t\\t\\t\\tthis._pickerShown = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis._suggestGet();\\r\\n\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'date\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDate.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDate.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'date\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'step\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\tvar val = this.data._parsed[v].value;\\r\\n\\t\\tval = $u.s.toNum(val);\\r\\n\\t\\tif(ia == \\'-\\') val -= d.step || 1;\\r\\n\\t\\telse val += d.step || 1;\\r\\n\\t\\t\\r\\n\\t\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\r\\n\\t\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed[v].value = val;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'buttonlist\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[ia].field;\\r\\n\\t\\tvar obj = this.data.fields[f];\\r\\n\\t\\tif(obj.control.multiple) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar v2 = this.data._parsed[ia].value;\\r\\n\\t\\t\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\r\\n\\t\\t\\tif(v2 == \\'\\') v2 = [];\\r\\n\\t\\t\\telse v2 = v2.split(\\',\\');\\r\\n\\t\\t\\tvar vi = v2.indexOf(v)\\r\\n\\t\\t\\tif(vi == -1) { \\r\\n\\t\\t\\t\\tv2.push(v);\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\t\\tv2.splice(vi,1)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tv = v2.join(\\',\\');\\r\\n\\t\\t} \\r\\n\\t\\tthis.data._parsed[ia].value = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t}catch(err){ }\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'saveQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'runQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tlistName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') { \\r\\n\\t\\t\\talert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tvar query = this.value\\r\\n\\t\\t\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.queryData = this.value[0];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar m = []; \\r\\n\\t\\t\\tfor(var n in this.data.fields) { \\r\\n\\t\\t\\t\\tvar flag = this.data.fields[n].control.multiple; \\r\\n\\t\\t\\t\\tif(flag) { m.push(n);}\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.allowMultiple = m ;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar searchMode = 1;\\r\\n\\t\\t\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _d = [];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\r\\n\\t\\t\\tif(searchMode == 2) { \\r\\n\\t\\t\\t\\tvar ss = {dialog.object}.getControl(this.listName);\\r\\n\\t\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t_data = _d.join(\\'&\\')\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'cancel\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tthis.setLayout(\\'Default\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t try{\\r\\n\\t\\t  uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t }catch(err){ }\\r\\n\\t\\t var queryName = this.__savedQueries[v]\\r\\n\\t\\t var data = [];\\r\\n\\t\\t data.push( \\'_mode=loadQueryFromRepo\\');\\r\\n\\t\\t data.push(\\'_queryToLoad=\\' + queryName);\\r\\n\\t\\t data.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t data = data.join(\\'&\\')\\r\\n\\t\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'setNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\r\\n\\t\\tif(ele) ele.value = this.__savedQueries[v];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'clearSearch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t mode = this.data.searchOptions.mode;\\r\\n\\t\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t listName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') {\\r\\n\\t\\t alert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else {\\r\\n\\t\\t var query = this.value\\r\\n\\t\\t var obj = {};\\r\\n\\t\\t this.setValue(\\'\\');\\r\\n\\t\\t obj.queryData = [];\\r\\n\\t\\t obj.listName = listName;\\r\\n\\t\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t obj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'save\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar queryDef = this.value[0];\\r\\n\\t\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\r\\n\\t\\t\\r\\n\\t\\tif(queryName == \\'\\') { \\r\\n\\t\\t\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\"color:red;\">You have not specified the query name</span>\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryName = queryName \\r\\n\\t\\t\\tobj.queryDefinition = queryDef \\r\\n\\t\\t\\tdebugger;\\r\\n\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar data = [];\\r\\n\\t\\t\\tdata.push(\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\r\\n\\t\\t\\tdata.push( \\'_mode=saveQueryToRepo\\');\\r\\n\\t\\t\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t\\tdata = data.join(\\'&\\')\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'andor\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tthis.data._parsed[ia].andor = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendly\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar d = [];\\r\\n\\t\\td.push(\\'This Week\\');\\r\\n\\t\\td.push(\\'This Week-to-date\\');\\r\\n\\t\\td.push(\\'Next Week\\');\\r\\n\\t\\td.push(\\'Next 7 days\\');\\r\\n\\t\\td.push(\\'This Month\\');\\r\\n\\t\\td.push(\\'This Month-to-date\\');\\r\\n\\t\\td.push(\\'Last Week\\');\\r\\n\\t\\td.push(\\'Last 7 days\\');\\r\\n\\t\\td.push(\\'Last Month\\');\\r\\n\\t\\td.push(\\'Last 30 days\\');\\r\\n\\t\\td.push(\\'Next Month\\');\\r\\n\\t\\td.push(\\'Next 30 days\\');\\r\\n\\t\\td.push(\\'This Year\\');\\r\\n\\t\\td.push(\\'Last Year\\');\\r\\n\\t\\td.push(\\'Next Year\\');\\r\\n\\t\\td.push(\\'This Year-to-date\\');\\r\\n\\t\\td.push(\\'This Quarter\\');\\r\\n\\t\\td.push(\\'This Quarter-to-date\\');\\r\\n\\t\\td.push(\\'Last Quarter\\');\\r\\n\\t\\td.push(\\'Next Quarter\\');\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t var f = this.data._parsed[v].field;\\r\\n\\t\\t this._picker.layout = \\'list\\';\\r\\n\\t\\t this._picker.populate(d);\\r\\n\\t\\t this._picker.setValue(\\'\\');\\r\\n\\t\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t this.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t iEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'daterange\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDateRangeStart.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart.format = frm;\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvar range = this.data._parsed[v].value || \\'\\';\\r\\n\\t\\t\\trange = range.split(\\'..\\');\\r\\n\\t\\t\\tif(range.length == 1) { \\r\\n\\t\\t\\t\\trange.push(\\'\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDateRangeStart.setValue(range[0]);\\r\\n\\t\\t\\tthis._pickerDateRangeEnd.setValue(range[1]);\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'daterange\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendlysingle\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = [];\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\td.push(\\'Today\\');\\r\\n\\t\\td.push(\\'Yesterday\\');\\r\\n\\t\\td.push(\\'Tomorrow\\');\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\tthis._picker.setValue(\\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t\\tiEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t},\\r\\n\\t\"wrapper\": {\\r\\n\\t\\t\"allow\": false\\r\\n\\t}\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"fields\": {\\r\\n\\t\\t\"FieldName\": {\\r\\n\\t\\t\\t\"label\": \"FieldName\",\\r\\n\\t\\t\\t\"defaults\": {\\r\\n\\t\\t\\t\\t\"op\": \"=\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"buttons\": {\\r\\n\\t\\t\"add\": \"Add new search field...\",\\r\\n\\t\\t\"remove\": \"<img src=\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\" />\",\\r\\n\\t\\t\"filter\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" />\",\\r\\n\\t\\t\"date\": \"<img src=\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\" />\",\\r\\n\\t\\t\"list\": \"<img src=\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\" />\",\\r\\n\\t\\t\"number\": {\\r\\n\\t\\t\\t\"plus\": \"<img src=\\\\\"svgIcon=#alpha-icon-add:icon\\\\\" />\",\\r\\n\\t\\t\\t\"minus\": \"<img src=\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\" />\"\\r\\n\\t\\t},\\r\\n\\t\\t\"save\": \"<img src=\\\\\"svgIcon=#alpha-icon-save:icon\\\\\" />Save query\",\\r\\n\\t\\t\"load\": \"<img src=\\\\\"svgIcon=#alpha-icon-load:icon\\\\\" /> Load query\",\\r\\n\\t\\t\"run\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" /> Run query\",\\r\\n\\t\\t\"menu\": \"<img src=\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\" />\",\\r\\n\\t\\t\"daterangepicker\": {\\r\\n\\t\\t\\t\"ok\": \"&nbsp;OK&nbsp;\",\\r\\n\\t\\t\\t\"cancel\": \"Cancel\"\\r\\n\\t\\t},\\r\\n\\t\\t\"cancel\": \"<img src=\\\\\"svgIcon=#alpha-icon-x:icon\\\\\" /> Cancel\",\\r\\n\\t\\t\"clearsearch\": \"<img src=\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\" /> Clear search\",\\r\\n\\t\\t\"stringloadquery\": \"Specify saved query to load\",\\r\\n\\t\\t\"stringsavequery\": \"Specify name for query\",\\r\\n\\t\\t\"stringquerynamewatermark\": \"Query name\"\\r\\n\\t},\\r\\n\\t\"searchOptions\": {\\r\\n\\t\\t\"displayDebuggingInfo\": false,\\r\\n\\t\\t\"placeHolder\": \"\",\\r\\n\\t\\t\"loadQuery\": false,\\r\\n\\t\\t\"saveQuery\": false,\\r\\n\\t\\t\"listName\": \"ss\"\\r\\n\\t},\\r\\n\\t\"searchMode\": 2,\\r\\n\\t\"listName\": \"ss\",\\r\\n\\t\"subtype\": \"AdvancedListSearch\"\\r\\n}',\n\tcss: '.queryBuilder > div {padding: 2px;}\\r\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\r\\n.queryBuilderList > div {display: table-row;}\\r\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\r\\n.queryBuilderList > div > div:first-child {width:100%;}\\r\\n.queryBuilderList > div > div > div {display: flex;}\\r\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now'\n}",
                        "subtype": "AdvancedListSearch",
                        "class": "",
                        "style": ""
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 5,
                        "color": "",
                        "icon": "$$table.query",
                        "displayText": "[search]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 5{T=.3}{C=Black,White}{B=White,Light Blue} 5{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{Data=91a503b4-9338-43c8-8db0-ac64a9c03cbc}{I:'$$table.query'} [search]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['SEARCH'] = [[dialog.dataBoundCustomControlData.search]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['SEARCH'] = [[dialog.dataBoundCustomControlSettings.search]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['SEARCH'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['SEARCH'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['SEARCH'] }",
                        "_jsOnChangeFunction": "function onChange_search_91a503b4933843c88db0ac64a9c03cbc(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SEARCH');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'SEARCH': {info: {controlType: 'AdvancedListSearch'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.SEARCH\" for=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH\" title=\"\" class=\"[class.dialogFieldLabel]\" style=\"display:block;\">Search</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH\" name=\"V.R{grid.rownumber}.SEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH.CONTROL\"  class=\"{grid.componentName}_SEARCH\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "layout_directive_hyperlink",
                "display": "{B=White,Light Blue} 6{T=.3}{C=Black,White}{B=White,Light Blue} 6{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{Data=bfcfc6b0-075a-4e22-a26d-d4ee182ba804}{I:'$$generic.link'} [Hyperlink: (Optional) Select fields....]<<break>>",
                "idInternal": "bfcfc6b0-075a-4e22-a26d-d4ee182ba804",
                "parentContainer": 4,
                "crc": "4294958737",
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<a id=\"{dialog.componentName}.V.R{dialog.rownumber}.HYPERLINK_1\" title=\"\" href=\"#\"  class=\"[class.gridHyperlinkButton]\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  onClick=\"$e.stopEvent(event);\"  >(Optional) Select fields....</a>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "localxbasic": "",
                    "localjavascript": "",
                    "hyperlinkText": "(Optional) Select fields....",
                    "Class": "<Default>",
                    "BreakType": "After",
                    "hyperlinkTextClass": "<Default>",
                    "id": "HYPERLINK_1",
                    "cssGridItemPropertiesJSON": "",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "abstractJavascript": {
                        "click": "var ele = $('{dialog.componentname}.V.R1.CONTAINER_FIELDSLIST');\nA5.u.element.toggle(ele,{show: {type: 'slide',duration: 'slow',onComplete: function() { var lObj = {Dialog.object}.getControl('fields');\nlObj.refresh();; }},hide: {type: 'slide',duration: 'slow'}} );"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "$e.add('{dialog.componentName}.V.R{dialog.rownumber}.HYPERLINK_1',A5.d.evnts.click,function(e) {\nvar _disabled = this.disabled; if(typeof _disabled == 'undefined') _disabled = false; if(!_disabled) {;var flagLocked = false; if (typeof this._locked != 'undefined') flagLocked = this._locked;  if(!flagLocked) {if (!this.disabled) {var ele = $('{dialog.componentname}.V.R1.CONTAINER_FIELDSLIST');\nA5.u.element.toggle(ele,{show: {type: 'slide',duration: 'slow',onComplete: function() { var lObj = {Dialog.object}.getControl('fields');\nlObj.refresh();; }},hide: {type: 'slide',duration: 'slow'}} );} } ; this._locked = true; flagLocked = true; var that = this; setTimeout(function() { that._locked = false; },300);}\n},this,false,'{dialog.componentName}.V.R{dialog.rownumber}.HYPERLINK_1');\n"
                    },
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 6,
                        "color": "",
                        "icon": "$$generic.link",
                        "displayText": "[Hyperlink: (Optional) Select fields....]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 6{T=.3}{C=Black,White}{B=White,Light Blue} 6{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{Data=bfcfc6b0-075a-4e22-a26d-d4ee182ba804}{I:'$$generic.link'} [Hyperlink: (Optional) Select fields....]<<break>>"
                    },
                    "controlContainerStyle": ""
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "layout_directive_ContainerBegin",
                "display": "{B=White,Light Blue} 7{T=.3}{C=Black,White}{B=White,Light Blue} 7{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{I:'vertline'}{Data=f67b00c4-cffc-4c58-8188-8aa77c3240df}{I:'$$format.border.style.dash'} [Container: CONTAINER_FIELDSLIST]",
                "idInternal": "f67b00c4-cffc-4c58-8188-8aa77c3240df",
                "lastIndex": 11,
                "parentContainer": 4,
                "crc": "4294952696",
                "precalc": {
                    "ControlHTML": "<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.CONTAINER_FIELDSLIST\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"A5CWLayout \"  style=\"display: none; width: 100%; \"  ><!--DIV for Container control-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "localxbasic": "",
                    "localjavascript": "",
                    "container": {
                        "ID": "CONTAINER_FIELDSLIST",
                        "style": "display:none;",
                        "contentAlignment": "Left",
                        "contentVerticalAlign": "Top",
                        "CSSGridJSON": "",
                        "useFlex": true,
                        "useFlexLeft": false,
                        "alignItems": "",
                        "containersettype": "",
                        "width": "100%",
                        "edgeOffset": "",
                        "buttonGroup": {
                            "orientation": "Horizontal"
                        },
                        "subType": "None",
                        "allowScrolling": false,
                        "scrolling": {
                            "axis": "Both",
                            "stopPropogation": false,
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "pull": {
                            "isDefined": false,
                            "javascript": {
                                "onPullRelease": "",
                                "onPullEnd": "",
                                "onPull": ""
                            },
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "constrainTabKey": "No",
                        "constrainJavascriptFunction": ""
                    },
                    "cssGridItemPropertiesJSON": "",
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 1,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 7,
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "$$format.border.style.dash",
                        "displayText": "[Container: CONTAINER_FIELDSLIST]",
                        "parentPanelCardId": "",
                        "lastID": "073d79e9-dc41-4812-b59b-88a708e3677d",
                        "break": false,
                        "display": "{B=White,Light Blue} 7{T=.3}{C=Black,White}{B=White,Light Blue} 7{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{I:'vertline'}{Data=f67b00c4-cffc-4c58-8188-8aa77c3240df}{I:'$$format.border.style.dash'} [Container: CONTAINER_FIELDSLIST]"
                    }
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "layout_directive_statictext",
                "display": "{B=White,Light Blue} 8{T=.3}{C=Black,White}{B=White,Light Blue} 8{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=e53c2f5c-3d4a-43a4-9bd3-e1daf9632fbe}{I:'$$format.text'} [Static Text:Select the fields you wish to view, then...]<<break>>",
                "idInternal": "e53c2f5c-3d4a-43a4-9bd3-e1daf9632fbe",
                "parentContainer": 7,
                "crc": "4294944003",
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.STATICTEXT_2\" title=\"\"  class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"   >Select the fields you wish to view, then click the <b>Refresh</b> button.</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "StaticText": "Select the fields you wish to view, then click the <b>Refresh</b> button.",
                    "localxbasic": "",
                    "localjavascript": "",
                    "Class": "<Default>",
                    "BreakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "cssGridItemPropertiesJSON": "",
                    "id": "STATICTEXT_2",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "f67b00c4-cffc-4c58-8188-8aa77c3240df",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 8,
                        "color": "",
                        "icon": "$$format.text",
                        "displayText": "[Static Text:Select the fields you wish to view, then...]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 8{T=.3}{C=Black,White}{B=White,Light Blue} 8{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=e53c2f5c-3d4a-43a4-9bd3-e1daf9632fbe}{I:'$$format.text'} [Static Text:Select the fields you wish to view, then...]<<break>>"
                    },
                    "controlContainerStyle": ""
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue} 9{T=.3}{C=Black,White}{B=White,Light Blue} 9{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=4efb5678_74c6_4e0c_931f_c54a35613b5e}{I:'$$control.browse'} [fields]<<break>>",
                "displayODFlat": "{Data=4efb5678_74c6_4e0c_931f_c54a35613b5e}",
                "idInternal": "4efb5678_74c6_4e0c_931f_c54a35613b5e",
                "parentContainer": 7,
                "displayOD": "{Data=4efb5678_74c6_4e0c_931f_c54a35613b5e}",
                "displayODtree": "{Data=4efb5678_74c6_4e0c_931f_c54a35613b5e}",
                "crc": "4294902096",
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "list",
                    "variableName": "fields",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Fields",
                    "class": "<Default>",
                    "width": "100%",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "Above",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "listView": {
                        "listGUID": "f07a9e2b-a21b-4589-bee7-56a18a3a4e9e",
                        "compressList": false,
                        "class": "<Default>",
                        "style": "",
                        "dataSourceType": "Static",
                        "overrides": "",
                        "flagIsDefined": true,
                        "staticData": "FieldName",
                        "staticJSONData": "",
                        "height": "3in",
                        "width": "100%",
                        "hasParentList": false,
                        "parentListId": "",
                        "preLoadData": false,
                        "emptyListWhenParentChanges": false,
                        "objectNameInParentListForData": "",
                        "linkingFields": {
                            "parent": "",
                            "this": ""
                        },
                        "hasDataHeader": false,
                        "readonlyList": false,
                        "captureFocus": true,
                        "allowKeyboardNavigationToGiveFocus": true,
                        "headerHTML": "",
                        "noRecordsMessage": {
                            "has": false,
                            "HTML": "No records in list.",
                            "addrecordwhenmessageiclicked": true,
                            "centerH": true,
                            "centerV": true
                        },
                        "templateItemsJSON": "[]",
                        "hasDataFooter": false,
                        "footerHTML": "",
                        "headerStyle": "",
                        "footerStyle": "",
                        "hasFixedHeader": false,
                        "fixedHeaderHTML": "",
                        "fixedHeaderStyle": "",
                        "fixedHeaderClassName": "",
                        "hasFixedFooter": false,
                        "fixedFooterHTML": "",
                        "fixedFooterStyle": "",
                        "fixedFooterClassName": "",
                        "fillPanelContainer": false,
                        "static": {
                            "dataReturnType": "Field",
                            "dataReturnField": "FieldName",
                            "dataReturnExpression": ""
                        },
                        "jsFuncDS": {
                            "functionName": "",
                            "columnNames": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "sampleData": ""
                        },
                        "transform": {
                            "apikey": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "formId": "",
                            "fetchFormDefinition": false,
                            "allfields": true,
                            "fieldlist": "",
                            "paginate": false,
                            "pagesize": "",
                            "hasNavigationBar": false,
                            "navigationBarJson": ""
                        },
                        "excelfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "csvfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "jsonfile": {
                            "filename": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "firestore": {
                            "executeWhere": "Server",
                            "databaseURL": "",
                            "serviceAccountConnString": "",
                            "collectionName": "",
                            "queryDefinition": "",
                            "maxRowCount": 10000,
                            "cs": {
                                "apikey": "",
                                "authDomain": "",
                                "databaseURL": "",
                                "projectId": "",
                                "method": "ConnectionString",
                                "connectionString": ""
                            },
                            "trackChanges": false,
                            "enablePersistence": true,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "mongodb": {
                            "connectionstring": "",
                            "database": "",
                            "collection": "",
                            "fields": "",
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "filter": "",
                            "order": ""
                        },
                        "clientSideFilterExpression": "",
                        "clientSideOrderExpression": "",
                        "custom": {
                            "xbasicfunctionname": "",
                            "xbasicdefinition": "",
                            "localXbasic": false,
                            "localXbasicDef": "",
                            "javascriptfunctionname": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": ""
                        },
                        "dataSeriesSeriesName": "",
                        "dataSeries": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "sql": {
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "refreshSchemaOnEdit": true,
                            "storedSchemaJSON": "",
                            "flagTableInfoHasBeenUpdated": false,
                            "connectionString": "",
                            "selectType": "FieldsFromTable",
                            "tablename": "",
                            "fieldlist": "",
                            "filter": "",
                            "distinct": false,
                            "order": "",
                            "sqlstatement": "",
                            "portableSQL": true,
                            "sqlstatementforfieldlist": "",
                            "first": -1,
                            "primaryKey": "",
                            "serverSideAfterQueryEvent": "",
                            "serversidePostProcessJSONEvent": "",
                            "serverSideBeforeQueryEvent": "",
                            "getCountOfRecordsInQuery": true,
                            "sqlSecurityJSON": "",
                            "serversidedatenumberformatjson": "",
                            "useSubselectsForNestedQueries": true,
                            "useTransactions": true,
                            "stripCurlyBracketsFromGUIDS": false,
                            "allowIncrementalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "setrowcounttoargument": false,
                            "rowcountargumentname": "",
                            "sanitizedata": false,
                            "optimizedDetailViewSync": false,
                            "captureDebuggingInfoForOptimizedSync": false,
                            "captureDebuggingInfoS3ConnectionString": "<default>",
                            "optimizedDetailViewSyncWriteConflicts": false
                        },
                        "dbf": {
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": "",
                            "isDefined": false,
                            "fieldmap": "",
                            "filter": "",
                            "order": ""
                        },
                        "variablename": "",
                        "showTitleRow": false,
                        "titleText": "",
                        "hasFreeformTemplate": false,
                        "freeformTemplate": "",
                        "javascript": {
                            "onBeforePopulate": "",
                            "onPopulate": "",
                            "onBeforeAddRows": "",
                            "onBeforeRemoveRows": "",
                            "onBeforeUpdateRow": "",
                            "onAddRows": "",
                            "onChange": "",
                            "onRemoveRows": "",
                            "onUpdateRow": "",
                            "onBeforeDestroy": "",
                            "onDestroy": "",
                            "onBeforeListDraw": "",
                            "onBeforeListClear": "",
                            "onInitialize": "",
                            "onBeforeItemDraw": "",
                            "onListDraw": "",
                            "onItemDraw": "",
                            "onNavigate": "",
                            "onSelect": "",
                            "onBeforeSelect": "",
                            "afterSelect": "",
                            "onDblClick": "",
                            "onClick": "",
                            "onRightClick": "",
                            "onTap": "",
                            "onDblTap": "",
                            "onDownHold": "",
                            "onFocus": "",
                            "onFieldClick": "",
                            "onRowCheck": "",
                            "onFieldDblClick": "",
                            "onFieldRightClick": "",
                            "onFocusOut": "",
                            "onBlur": "",
                            "beforeFetchMore": "",
                            "afterFetchMore": "",
                            "beforePageNavigate": "",
                            "afterPageNavigate": "",
                            "beforeRefreshRow": "",
                            "afterRefreshRow": "",
                            "afterRefreshData": "",
                            "afterRenderComplete": "",
                            "afterAjaxCallback": "",
                            "beforeClientSideFilter": "",
                            "afterClientSideFilter": "",
                            "beforeServerSideSort": "",
                            "afterServerSideSort": "",
                            "afterServerSideSummaryCompute": "",
                            "afterClientSideSummaryCompute": "",
                            "onListColumnSelectorChanged": "",
                            "beforeClientSideSort": "",
                            "afterClientSideSort": "",
                            "onInplaceEditStart": "",
                            "oninplaceeditdeleterow": "",
                            "oninplaceeditdeleterowAfter": "",
                            "onInplaceeditSave": "",
                            "onInplaceEditCancel": "",
                            "oninplaceeditAddRow": "",
                            "afterinplaceeditAddRow": "",
                            "afterinplaceeditAddRowWasSaved": "",
                            "afterRefreshListIncremental": "",
                            "beforeMenuOpen": "",
                            "onMenuClose": "",
                            "showeditrowicon": "",
                            "showaddrowicon": "",
                            "onSwipe": "",
                            "onScroll": "",
                            "onPullRelease": "",
                            "onPullEnd": "",
                            "onPull": "",
                            "afterSearchComplete": "",
                            "beforeSearch": "",
                            "onSearchResultTooLarge": "",
                            "onSearchResultTooLargeForLocalStorage": "",
                            "onBeforePersistToLocalStorage": "",
                            "onPersistToLocalStorage": "",
                            "onRestoreFromLocalStorage": "",
                            "onListReady": "",
                            "onResize": ""
                        },
                        "inplaceedit": {
                            "editrowsecuritygroups": "",
                            "addrowsecuritygroups": "",
                            "deleterowsecuritygroups": ""
                        },
                        "_hasIntegerControl": false,
                        "pullpastEnd": {
                            "YSetting": "auto",
                            "XSetting": "auto",
                            "Duration": 1000
                        },
                        "displayTextForNulls": "",
                        "hasMoreEventsDefined": false,
                        "hasMultipleLayouts": false,
                        "autoselectLayoutOnOrientationChange": false,
                        "autoSelectLandscape": "",
                        "autoSelectPortrait": "",
                        "subTheme": "",
                        "dragScrollDirection": "Both",
                        "scrolling": {
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "hasSearchPart": false,
                        "hasAlphabetbuttonsearch": false,
                        "alphabetbuttonsearchjson": "",
                        "hasquicksearch": false,
                        "qyucjsearchjson": "",
                        "searchPart": {
                            "fieldMap": "",
                            "searchFieldProperties": "",
                            "searchStyle": "IndividualControls",
                            "combineMultipleConditionsUsing": "AND",
                            "keywordsearchControl": "",
                            "keywordSearchFields": "",
                            "showDebugInfo": false,
                            "debugInfoPlaceholder": "",
                            "delayPopulateListTillActiveSearch": false,
                            "searchErrorPlaceholder": "",
                            "setMaxProperties": false,
                            "maxSearchSizeJSON": ""
                        },
                        "controlCSS": "",
                        "includeCRC": false,
                        "userDefinedMethodsJSON": "{\n\t\"functions\": []\n}",
                        "reverseColumnOrder": false,
                        "enableHorizontalScrolling": false,
                        "mincolumnwidth": "150px",
                        "maxcolumnwidth": "",
                        "enablewordwrap": true,
                        "persistDataToLocalStorage": false,
                        "persistWhere": "LocalStorage",
                        "persistMode": "Full",
                        "persisListLayout": false,
                        "loadPersistedLayout": false,
                        "incrementalRefreshAfterLoad": false,
                        "versionNumber": 1,
                        "hasDetailView": false,
                        "detailView": {
                            "method": "FieldMap",
                            "fieldMap": "",
                            "jsonformname": "",
                            "propertygridname": "",
                            "viewboxname": "",
                            "jsonformdefinition": "Pre-defined",
                            "propertygriddefinition": "Pre-defined",
                            "container": "",
                            "serverSideUpdateRules": "DirtyFieldsOnly",
                            "showDebuggingInfo": false,
                            "placeholderForDebuggingInfo": "",
                            "placeholderGlobalErrors": "",
                            "suppressGlobalErrorAlerts": false,
                            "globalErrorStyle": "font-family: Arial; font-size: 10pt; color: red; border: solid 1px red; width: 100%;",
                            "showFadeOutConfirmationMessage": false,
                            "fadeOutMessagePlaceholder": "",
                            "fadeOutMessageText": "",
                            "fadeOutMessageDuration": 2000,
                            "fadeOutMessageStyle": "Default",
                            "submitLocationInformation": false,
                            "noRecordInListIsSelectedSetting": "None",
                            "newRecordPolicy": "UseControlDefault",
                            "useServerSideSyncLog": false,
                            "clearServerSideSyncLog": true,
                            "updateServerSideSyncLogAfterEachInsert": false,
                            "convertInsertToUpsert": false,
                            "useTimestampfieldForIncrmentalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "synchronizationHandler": "",
                            "synchronizationRefreshHandler": "",
                            "refreshListIncrementalHandler": "",
                            "synchronizationLevel": "EachListInHierarchy",
                            "phoneGap": {
                                "mediaFilesSettingsJSON": ""
                            },
                            "__doNotshowsynclogPrompt": true,
                            "firestore": {
                                "primarykeyfornewrecords": "<auto>"
                            },
                            "customization": {
                                "clientSideErrorWarning": "Cannot save because there are validation errors.",
                                "dirtyDetailViewRecord": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "You must first save or undo the changes you have made to the List's Detail View."
                                },
                                "confirmFormResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to the List's Detail View?"
                                },
                                "confirmRowResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to this record?"
                                },
                                "confirmDeleteWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to delete this record?"
                                },
                                "writeConflict": {
                                    "message": "Write conflict. Tap here to resolve.",
                                    "useMineMessage": "Use mine ('{myvalue}')",
                                    "useTheirsMessage": "Use theirs ('{theirvalue}')",
                                    "useMineAll": "Use mine for all fields",
                                    "useTheirsAll": "Use theirs for all fields"
                                },
                                "databaseError": {
                                    "update": "Record was not updated.|More...|Less",
                                    "insert": "Record was not inserted.|More...|Less",
                                    "delete": "Record was not deleted.|More...|Less"
                                },
                                "useCustomClasses": false,
                                "customClasses": "",
                                "setClassonEditedRows": true,
                                "css": {
                                    "dirtyRecord": "",
                                    "newRecord": "",
                                    "serverSideError": "",
                                    "deletedRecord": "",
                                    "dirtyRecordRow": "",
                                    "newRecordRow": "",
                                    "serverSideErrorRow": "",
                                    "deletedRecordRow": "",
                                    "hasUnSyncedMediaFiles": ""
                                }
                            },
                            "refreshRowOnSelect": false,
                            "synchronizeImmediately": false,
                            "pushServerUpdatesToClientOnCommit": false,
                            "tablePropertiesDefined": false,
                            "autoCommitDetailViewEdits": true,
                            "syncBatchSize": 0,
                            "synchProgressPlaceholder": "",
                            "synchProgressProperties": "",
                            "dirtyControlClassName": "",
                            "linkedfreeformcontrols": "",
                            "detailviewposition": "OnPage",
                            "containerName": "",
                            "inListSettingsJSON": "",
                            "javascript": {
                                "canUpdateList": "",
                                "afterUpdateList": "",
                                "canSynchronizeList": "",
                                "afterSynchronizeList": "",
                                "afterSynchronizeListCompleted": "",
                                "afterRefreshListIncremental": "",
                                "hasClientSideValidationErrors": "",
                                "afterSynchronizeListBatch": "",
                                "beforeSynchronizeListBatchStart": "",
                                "afterDetailViewSave": "",
                                "afterSynchronizeListBatchEnd": "",
                                "canCancelBatch": "",
                                "afterCancelBatch": "",
                                "afterListRowSelectCancelled": "",
                                "canResetRow": "",
                                "canDeleteRow": "",
                                "afterDeleteRow": "",
                                "canUndoEdits": "",
                                "afterResetRow": "",
                                "afterUndoEdits": "",
                                "canNewRecord": "",
                                "afterNewRecord": "",
                                "modeChanged": "",
                                "onStateChanged": "",
                                "afterDetailViewPopulate": "",
                                "beforeDetailViewPopulate": "",
                                "beforeMediaFilesUploaded": "",
                                "afterMediaFilesUploaded": "",
                                "listReadyToPersist": "",
                                "beforeCRUDExecute": "",
                                "onMediaFilesUploadErrors": "",
                                "onNoMediaFilesToFetch": "",
                                "beforeMediaFilesDownloaded": "",
                                "afterMediaFilesDownloaded": "",
                                "beforeDeleteOrphanMediaFiles": "",
                                "afterDeleteOrphanMediaFiles": "",
                                "onSynchronizationStep": ""
                            },
                            "hasClientSideEventsDefined": false,
                            "serverSideEvent": {
                                "validate": "",
                                "errorMessageTranslate": "",
                                "onsynchronize": "",
                                "aftersynchronize": "",
                                "aftersynchronizeRecord": ""
                            }
                        },
                        "dragScrollMomentum": true,
                        "dragScroll": {
                            "hasCustomSnapSettings": false,
                            "snap": {
                                "x": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                },
                                "y": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                }
                            },
                            "momentum": {
                                "friction": 4,
                                "duration": 1000
                            }
                        },
                        "behavior": {
                            "pulltorefresh": false,
                            "pulltoRefreshSettingsJSON": "",
                            "drag": {
                                "has_side_to_side_rowdragbehavior": false,
                                "settingsJSON": "",
                                "has_reorder": false,
                                "reorderSettingsJSON": ""
                            }
                        },
                        "hasCheckBoxSelectColumn": true,
                        "checkboxSelectColumnCustomzationJSON": "",
                        "searchHighlighting": false,
                        "searchHighlightClass": "",
                        "searchHighlightStyle": "color: red;",
                        "useDragScrolling": "Auto",
                        "customSettingsJSON": "",
                        "clientSideVirtualColumns": "",
                        "clientSideLookupColumnsJSON": "",
                        "allowInplaceediting": false,
                        "inplaceEditingSettingsJSON": "",
                        "clientSideGroupBreaksHas": false,
                        "clientSideGroupBreakJSON": "",
                        "listNavigatorHas": false,
                        "listNavigatorJSON": "",
                        "serverSideRowStyle": "",
                        "clientSideRowStyle": "",
                        "alternatingRowColor": false,
                        "evenRowColor": "",
                        "oddRowColor": "",
                        "defaults": {
                            "indexLayout": 1
                        },
                        "fieldsArray": {
                            "fields": [
                                {
                                    "name": "FieldName",
                                    "type": "C",
                                    "displayFormat": "",
                                    "serverSideInlineStyle": "",
                                    "serverSideConditionalStyle": "",
                                    "clientSideConditionalStyle": "",
                                    "clientSideConditionalCellStyle": "",
                                    "encryptfield": false,
                                    "encryptionkey": "",
                                    "decodeValue": false,
                                    "decodeValueLookupListJSON": "",
                                    "securityGroups": "",
                                    "javascriptAddressible": false,
                                    "serversideShowhideExpn": "",
                                    "clientSideShowHideExpn": "",
                                    "controlType": "Label",
                                    "clientsideInlineStyle": "",
                                    "wordwrap": false,
                                    "wordwrapOption": "normal",
                                    "clientsideClass": "",
                                    "baseExpression": "",
                                    "searchPropertiesJSON": "",
                                    "image": {
                                        "base64Encode": false,
                                        "type": "JPG",
                                        "scale": "",
                                        "fileNameTransformation": "",
                                        "imageDataType": "Name",
                                        "base64Prefix": "data:image/jpg;base64,",
                                        "noImageFoundImage": ""
                                    },
                                    "sourceTableType": "",
                                    "detailview": {
                                        "serversidevalidation": "",
                                        "defaultValueJavascript": "",
                                        "onDetailViewPopulateJavascript": "",
                                        "onListUpdateFromDetailView": "",
                                        "updateable": true,
                                        "checkforwriteConflicts": true,
                                        "blankIsNull": false,
                                        "updatePermissionSecurityGroups": "",
                                        "serverSidePermissionExpression": "",
                                        "imageCapturePropertiesJSON": "",
                                        "ExifCapturePropertiesJSON": ""
                                    },
                                    "hide": false,
                                    "button": {
                                        "type": "Text",
                                        "image": "",
                                        "label": "Button",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "hyperlink": {
                                        "label": "Hyperlink",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "actionType": "Javascript",
                                        "href": "",
                                        "target": "New Window",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "unboundtype": "",
                                    "dynamicImage": {
                                        "definition": "",
                                        "class": "",
                                        "style": "",
                                        "bubbleHelp": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false,
                                        "twoStateImage": false,
                                        "swapImageName": "",
                                        "toggleOnClick": true,
                                        "rotationType": "90"
                                    },
                                    "menu": {
                                        "definitionJSON": "",
                                        "buttonType": "Image",
                                        "text": "Menu",
                                        "image": "svgIcon=#alpha-icon-bars:icon,24",
                                        "image_rotate": true,
                                        "bubblehelp": "",
                                        "inlinestyle": "",
                                        "className": "",
                                        "focusrow": false,
                                        "imageOpen": "svgIcon=#alpha-icon-xLarge:icon,24",
                                        "fireEventsWhenRowGetsFocus": false,
                                        "image_rotate_duraction": 300
                                    },
                                    "virtualJavascript": {
                                        "javascript": ""
                                    },
                                    "serverSideSummaryFieldsHas": false,
                                    "horizontalwidth": "200px",
                                    "serverSideSummaryFields": "",
                                    "clientSideSummaryFieldsHas": false,
                                    "clientSideTypeTransform": "None",
                                    "clientSideDateTemplate": "MM-dd-yyyy",
                                    "clientSideDateFormat": "<None>",
                                    "clientSideNumericFormat": "",
                                    "inplaceEditing": {
                                        "template": "",
                                        "javascript": {
                                            "validation": "",
                                            "initialvalue": ""
                                        },
                                        "serverside": {
                                            "validation": ""
                                        },
                                        "controltype": "Textbox",
                                        "controljson": "",
                                        "allow": true,
                                        "conditionalalloweditJSfunction": "",
                                        "securitygroups": ""
                                    },
                                    "customControl": {
                                        "definition": ""
                                    },
                                    "chartPropertiesJSON": "",
                                    "isComputedColumn": false,
                                    "ink": {
                                        "width": "300",
                                        "height": "",
                                        "sizeMethod": "Width-Height",
                                        "scale": 0.25,
                                        "zoom": "50%",
                                        "boundsType": "Page",
                                        "boundsMargin": 10,
                                        "boundsX": 0,
                                        "boundsY": 0,
                                        "boundsWidth": 100,
                                        "boundsHeight": 100
                                    },
                                    "star": {
                                        "maxstars": 5,
                                        "selectedColor": "Gold",
                                        "unselectedColor": "Gray",
                                        "width": "26px",
                                        "height": "26px",
                                        "readonly": false
                                    },
                                    "integer": {
                                        "min": "0",
                                        "max": "100",
                                        "buttonClass": "[theme:button.base.className]",
                                        "valueClass": "[class.dialogInput]",
                                        "ValueStyle": "width: 40px;",
                                        "hasIncrementBy10": false,
                                        "hasIncrementBy100": false
                                    },
                                    "javascript": {
                                        "methodName": ""
                                    },
                                    "map": {
                                        "height": "300",
                                        "width": "300",
                                        "markerColor": "green",
                                        "markerSize": "<default>",
                                        "zoom": "8"
                                    },
                                    "radiobuttons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "checkboxButtons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "switch": {
                                        "onvalue": "On",
                                        "offValue": "Off",
                                        "width": "100px",
                                        "direction": "ltr",
                                        "readonly": false,
                                        "displaystyle": "Switch",
                                        "htmlOn": "On",
                                        "htmlOff": "Off",
                                        "iconOn": "svgIcon=#alpha-icon-checkRounded:icon,24",
                                        "iconOff": "svgIcon=#alpha-icon-squareRounded:icon,24",
                                        "behavior": "ComboBox",
                                        "groupName": "Group1"
                                    },
                                    "unboundField": false,
                                    "baseName": "FieldName",
                                    "display": "{data=1}{I:'$$control.smartField'} FieldName (C)",
                                    "onItemDrawSystemJavascript": "",
                                    "onItemDrawInlineStyle": "",
                                    "onItemDrawConditionalStyle": "",
                                    "controlHTML": "<span id=\"{dialog.componentName}.FIELDS.FIELDNAME.I.{*dataRow}\">{FieldName}</span>",
                                    "controlHTMLFreeformLayout": "<span id=\"{dialog.componentName}.FIELDS.FIELDNAME.I.{*dataRow}\">{FieldName}</span>",
                                    "_templateEditingFreeform": "{FieldName}",
                                    "xbfunction": "",
                                    "deleteField": false
                                }
                            ]
                        },
                        "layoutsArray": {
                            "layouts": [
                                {
                                    "Name": "Default",
                                    "Type": "Column",
                                    "friendlyName": "",
                                    "kanbansettingsjson": "",
                                    "customsettingsjson": "",
                                    "chartsettingsjson": "",
                                    "mapsettingsjson": "",
                                    "calendarsettingsjson": "",
                                    "showColumnTitles": true,
                                    "hasColumnActions": false,
                                    "columnActionsJSON": "",
                                    "template": "",
                                    "isDefaultLayout": true,
                                    "snakingLayoutWidth": "1in",
                                    "itemHeight": "",
                                    "contentclassname": "",
                                    "clientSideGroupBreaksHas": false,
                                    "clientsidegroupBreaksMode": "<Use Default>",
                                    "clientSideGroupBreakJSON": "",
                                    "freeformType": "Vertical",
                                    "className": "",
                                    "hoverclassName": "",
                                    "selectedClassName": "",
                                    "style": "",
                                    "titleClassName": "",
                                    "hasListItemFooter": false,
                                    "listItemFooter": "",
                                    "HaslistColumnSeparator": false,
                                    "listFixedColumnsSettingsJSON": "",
                                    "hasVirtualizedColumns": false,
                                    "listItemFooterInitialState": "Open",
                                    "listColumnSeparatorHas": false,
                                    "listColumnSeparator": {
                                        "propertiesJSON": ""
                                    },
                                    "dragScroll": {
                                        "hasCustomSnapSettings": false,
                                        "snap": {
                                            "x": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            },
                                            "y": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            }
                                        },
                                        "momentum": {
                                            "friction": 4,
                                            "duration": 1000
                                        }
                                    },
                                    "dragScrollMomentum": true,
                                    "columns": [
                                        {
                                            "heading": "",
                                            "headingInlineStyle": "",
                                            "headingClassName": "",
                                            "Template": "{<CheckBoxSelect>}",
                                            "footerTemplate": "",
                                            "dataInlineStyle": "",
                                            "canSort": false,
                                            "sortColumnName": "",
                                            "initialsortdirection": "Ascending",
                                            "columnWidth": "1in",
                                            "sortWhere": "ClientSide",
                                            "sortJavascript": "",
                                            "serverSideSortExpression": "",
                                            "javascript": {
                                                "onclick": "",
                                                "onrightclick": ""
                                            },
                                            "hideColumnIfFieldHidden": true,
                                            "initialStateHidden": false,
                                            "hideColumnReferenceField": "<CheckBoxSelect>",
                                            "columnIsResizeable": false,
                                            "responsiveColumnWidth": "",
                                            "hidecolumnactions": false,
                                            "hasFixedFooter": false,
                                            "hasDataFooter": false,
                                            "fixedFooterjSON": "",
                                            "datafooterJSON": "",
                                            "hasColumnFooter": false,
                                            "columnFooterJSON": "",
                                            "unboundtype": "",
                                            "name": "<CheckBoxSelect>",
                                            "display": "{I:'$$control.smartField'} <CheckBoxSelect>",
                                            "enableCanSort": true,
                                            "enableShowInitialSortDirection": true,
                                            "enableShowSortField": true
                                        },
                                        {
                                            "heading": "Field",
                                            "headingInlineStyle": "",
                                            "headingClassName": "",
                                            "Template": "{FieldName}",
                                            "footerTemplate": "",
                                            "dataInlineStyle": "",
                                            "canSort": true,
                                            "sortColumnName": "FieldName",
                                            "initialsortdirection": "Ascending",
                                            "columnWidth": "flex(1)",
                                            "sortWhere": "ClientSide",
                                            "sortJavascript": "",
                                            "serverSideSortExpression": "",
                                            "javascript": {
                                                "onclick": "",
                                                "onrightclick": ""
                                            },
                                            "hideColumnIfFieldHidden": true,
                                            "initialStateHidden": false,
                                            "hideColumnReferenceField": "FieldName",
                                            "columnIsResizeable": false,
                                            "responsiveColumnWidth": "",
                                            "hidecolumnactions": false,
                                            "hasFixedFooter": false,
                                            "hasDataFooter": false,
                                            "fixedFooterjSON": "",
                                            "datafooterJSON": "",
                                            "hasColumnFooter": false,
                                            "columnFooterJSON": "",
                                            "unboundtype": "",
                                            "name": "FieldName",
                                            "display": "{I:'$$control.smartField'} FieldName",
                                            "enableCanSort": true,
                                            "enableShowInitialSortDirection": true,
                                            "enableShowSortField": true
                                        }
                                    ]
                                }
                            ]
                        },
                        "odata": {
                            "url": "http://services.odata.org/V4/Northwind/Northwind.svc",
                            "serviceType": "OData",
                            "requiresAuthentication": false,
                            "usesCSRFToken": false,
                            "authType": "Basic",
                            "authUsername": "",
                            "authPassword": "",
                            "containerName": "",
                            "columns": "",
                            "filter": "",
                            "order": "",
                            "max_rows": -1,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "primarykey": "",
                            "primaryKeyType": ""
                        },
                        "paginateData": false,
                        "pageSize": 20,
                        "paginateMethod": "FetchMore",
                        "fetchMoreButtonHTML": "More records...",
                        "fetchMoreButtonType": "Button",
                        "fetchMoreButtonStyle": "",
                        "fetchMoreButtonContainerStyle": "text-align: center;",
                        "hasNavigationBar": false,
                        "navigationBarJson": "",
                        "serverSideSorting": false,
                        "breaks": {
                            "has": false,
                            "field": "",
                            "sortDescending": false,
                            "sortOnBreakField": true,
                            "fieldChars": -1,
                            "template": "",
                            "stringDictionary": "",
                            "caseSensitive": false,
                            "breakType": "Automatic",
                            "userDefinedBreakGroups": "",
                            "geographyUnits": "Meters|Meters"
                        },
                        "allowNullSelection": true,
                        "allowAnyValue": false,
                        "allowTextSelection": false,
                        "allowNullDeselection": false,
                        "loopNavigate": false,
                        "loopNavigateNullSelection": false,
                        "delayRenderTillVisible": false,
                        "delayRenderTillRefresh": false,
                        "delayRenderTillUserLogsIn": false,
                        "multiSelect": false,
                        "multiSelectMode": "Control-click",
                        "separator": ",",
                        "localCSS": "",
                        "virtualization": {
                            "type": "None",
                            "onNavigateBehavior": "Navigate",
                            "size": 50,
                            "maxSize": 0,
                            "offset": 10,
                            "navigation": {
                                "pull": true,
                                "pullSize": 40,
                                "prevHTML": "Previous",
                                "prevClassName": "",
                                "prevPressedClassName": "",
                                "nextHTML": "Next",
                                "nextClassName": "",
                                "nextPressedClassName": ""
                            }
                        },
                        "scroller": {
                            "has": false,
                            "messageType": "Template",
                            "messageTemplate": "",
                            "messageJS": "",
                            "customizationIsDefined": false,
                            "flow": "ttb",
                            "location": "after",
                            "className": "",
                            "focusClassName": "",
                            "dialClassName": "",
                            "style": "",
                            "offset": {
                                "top": "0px",
                                "bottom": "0px",
                                "left": "0px",
                                "right": "0px"
                            },
                            "slider": {
                                "className": "",
                                "innerClassName": "",
                                "handle": {
                                    "className": "",
                                    "style": ""
                                },
                                "shadow": {
                                    "show": true,
                                    "className": "",
                                    "style": ""
                                },
                                "message": {
                                    "show": "auto",
                                    "className": "",
                                    "topClassName": "",
                                    "bottomClassName": "",
                                    "leftClassName": "",
                                    "rightClassName": "",
                                    "style": "",
                                    "lowSwitch": 75,
                                    "highSwitch": 75
                                }
                            },
                            "dial": {
                                "show": "drag",
                                "invertDrag": false,
                                "className": "",
                                "message": {
                                    "className": ""
                                },
                                "style": "",
                                "pixelStep": 4,
                                "size": 2
                            }
                        },
                        "precalc": {
                            "javascriptOnOrientationChange": ""
                        },
                        "previewMode": false,
                        "__xbjs": "ps.__checkedImage = \"svgIcon=#alpha-icon-checkCircle:icon,24\"\nps.__uncheckedImage = \"svgIcon=#alpha-icon-circle:icon,24\"",
                        "_templateCSS": "\n",
                        "allchildren": "",
                        "optimizeJSONSize": true
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "f67b00c4-cffc-4c58-8188-8aa77c3240df",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 9,
                        "color": "",
                        "icon": "$$control.browse",
                        "displayText": "[fields]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 9{T=.3}{C=Black,White}{B=White,Light Blue} 9{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=4efb5678_74c6_4e0c_931f_c54a35613b5e}{I:'$$control.browse'} [fields]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_listViewData": "{dialog.object}._listViewData['FIELDS'] = [[dialog.listViewData.fields]]; ",
                        "javascript_listViewSettings": "{dialog.object}._listViewSettings['FIELDS'] = [[dialog.listViewSettings.fields]]; ",
                        "javascript_listview": "{dialog.object}._controls['FIELDS'] =  { type: 'list',  data: {dialog.object}._listViewData['FIELDS'],  onInitialize: function() {\n\t\tvar pe = $(this.contId).parentElement;\n\t\tif(typeof this.listVariableName != 'undefined') { \n\t\t\tvar _cn = '{dialog.componentName}_' + this.listVariableName.toUpperCase() + '_2';\n\t\t\t$acn(pe,_cn);\n\t\t}\n\t\n\n\n\nvar flagCordova = true;\nif (typeof window['cordova'] == 'undefined') {\n\tvar flagCordova = false;\n}\nif(flagCordova) { \n\tif(this.__flagPersist) { \n\t\tif(this.__persistWhere.toLowerCase() == 'indexdb') { \n\t\t\talert('Error. App is running as a Cordova app. You cannot set the persist location to \\'IndexedDB\\' for Cordova applictions. You must set the persist location to \\'FileSystem\\'');\n\t\t}\n\t}\n}\n\n;var that = this;\ntry{\n\t\n\tif(this._hasDetailView) { \n\t\tif(this._JSONForm) { \n\t\n\t\t\tsetTimeout(function() { \n\t\t\tthat.resize();\n\t\n\t\t\t},10);\n\t\t}\n\t}\n}catch(e){};\n\t\n\n\nif(typeof this.__flagHasFixedColumnFooters != 'undefined') { \n\tif(this.__flagHasFixedColumnFooters) { \n\t\tthis.refresh();\n\t}\n}\n\n; if(this.initializeVirtualizedColumns) this.initializeVirtualizedColumns(); if(this._setupAlphabetSearch) this._setupAlphabetSearch.call(this)},  settings: {dialog.object}._listViewSettings['FIELDS'] }",
                        "_jsOnChangeFunction": "function onChange_fields_4efb567874c64e0c931fc54a35613b5e(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('FIELDS');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'FIELDS': {info: {controlType: 'list'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.FIELDS\" for=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS\" title=\"\" class=\"[class.dialogFieldLabel]\" style=\"display:block;\">Fields</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS\" name=\"V.R{grid.rownumber}.FIELDS\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS.CONTROL\"  class=\"{grid.componentName}_FIELDS\" style=\"overflow: auto; width: 100%; height: 3in; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "listviewData": "[[%%[[fields]]%%]]",
                    "listviewSearchReplace": "[[dialog.listViewData.fields]] = tmpl.page_fields[9].precalc.listViewData",
                    "listViewHasBeenRendered": false,
                    "js_afterListInitialize": "var listObj = {UXPRERENDEREDALIAS}_DlgObj.getControl('FIELDS');\nif(listObj) listObj._state.recordCount = 0;\nif(listObj) listObj._state.recordCountFormatted = '0';\nif(listObj) listObj._state.lastBreakValue = '<None>';\nif(listObj) listObj._state.pageCount = 0;\nif(listObj) listObj._state.pageSize = 20;\nif(listObj) {var ele = $('{UXPRERENDEREDALIAS}.fields.RECORDCOUNT'); if(ele) ele.innerHTML = listObj._state.recordCountFormatted;};\nif(listObj) listObj._state.paginated = false;\n\nif(listObj) listObj._state.highlight = {  };\nif(listObj) listObj._state.whereClause = '';\nif(listObj) listObj._state.whereParameters = '';\nlistObj._state.order = '';\n\t\t\n\t\tvar flagPersist = false;\n\t\tif(typeof listObj._flagPersistDataOK != 'undefined') { \n\t\t\tif(listObj._flagPersistDataOK) { \n\t\t\t\tvar data = listObj._data;\n\t\t\t\tlistObj.persistToStorage({mode:'populate', data: data, submode: 'ListViewData'});\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n;\n{UXPRERENDEREDALIAS}_DlgObj._list_executeEvent('FIELDS','afterRenderComplete',{});\n\nif(listObj._refreshStateMessages) listObj._refreshStateMessages();",
                    "list_CapturedFieldValueFromFirstRow": ""
                }
            },
            {
                "controlType": "layout_directive_button",
                "display": "{B=White,Light Blue} 10{T=.3}{C=Black,White}{B=White,Light Blue} 10{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=99478d57-2b4e-44af-b919-241962bdcd85}{I:'$$control.button'} [Button: Refresh]<<break>>",
                "idInternal": "99478d57-2b4e-44af-b919-241962bdcd85",
                "parentContainer": 7,
                "crc": "4294958371",
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<button type=\"button\" id=\"{dialog.componentName}.V.R{dialog.rownumber}.BUTTON_1\"    ></button>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "localxbasic": "",
                    "localjavascript": "",
                    "buttonText": "Refresh",
                    "Class": "<Default>",
                    "cssGridItemPropertiesJSON": "",
                    "BreakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "id": "BUTTON_1",
                    "advancedButtonStyling": true,
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "advancedButton": {
                        "subTheme": "base",
                        "buttonClass": "",
                        "buttonClassDisabled": "",
                        "buttonClassHover": "",
                        "buttonClassPressed": "",
                        "buttonInlineStyle": "",
                        "buttonstyle": "Text only",
                        "disabledImageName": "",
                        "hoverImageName": "",
                        "displayDropdownIconOnButton": false,
                        "displayAsSplitButton": false,
                        "showBadge": false,
                        "badgeSettingsJSON": "",
                        "hyperlinkClass": "[class.gridHyperlinkButton]",
                        "hyperlinkImagePosition": "None",
                        "hyperlinkInlineStyle": "",
                        "imageClass": "",
                        "imageInlineStyle": "",
                        "imageName": "",
                        "pressedImageName": "",
                        "textClass": "",
                        "textInlineStyle": "",
                        "type": "Button"
                    },
                    "securityGroups": "",
                    "showHideExpn": "",
                    "clientSideconditionalStyle": "",
                    "CalcExpression": "",
                    "EnableExpression": "",
                    "ShowExpression": "",
                    "abstractJavascript": {
                        "click": "var lObj = {dialog.object}.getControl('fields');\nvar fields = lObj.getCheckedValues();\nif(fields == '') { \n\talert('You did not select any fields');\n} else { \n\tvar ssObj = {dialog.object}.getControl('ss')\n\tvar data = [];\n\tdata.push(A5.ajax.buildURLParam('__fields',JSON.stringify(fields)));\n\tdata.push(A5.ajax.buildURLParam('__sspagination',JSON.stringify(ssObj.pagination)));\n\tdata = data.join('&')\n\t{dialog.object}.ajaxCallback('','','xb_selectFields','',data)\n}"
                    },
                    "precalc": {
                        "javascriptClientSideWatches": "",
                        "javascriptAbstractSetupCode": "$e.add('{dialog.componentName}.V.R{dialog.rownumber}.BUTTON_1',A5.d.evnts.click,function(e) {\nvar _disabled = this.disabled; if(typeof _disabled == 'undefined') _disabled = false; if(!_disabled) {;var flagLocked = false; if (typeof this._locked != 'undefined') flagLocked = this._locked;  if(!flagLocked) {var lObj = {dialog.object}.getControl('fields');\nvar fields = lObj.getCheckedValues();\nif(fields == '') { \n\talert('You did not select any fields');\n} else { \n\tvar ssObj = {dialog.object}.getControl('ss')\n\tvar data = [];\n\tdata.push(A5.ajax.buildURLParam('__fields',JSON.stringify(fields)));\n\tdata.push(A5.ajax.buildURLParam('__sspagination',JSON.stringify(ssObj.pagination)));\n\tdata = data.join('&')\n\t{dialog.object}.ajaxCallback('','','xb_selectFields','',data)\n} } ; this._locked = true; flagLocked = true; var that = this; setTimeout(function() { that._locked = false; },300);}\n},this,false,'{dialog.componentName}.V.R{dialog.rownumber}.BUTTON_1');\n",
                        "javascriptAdvancedButton": "",
                        "javascriptAdvancedButton_control": "{dialog.object}._buttons['BUTTON_1'] = new A5.Button({\n\tlayout: 'text',\n\tstyle: 'box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;',\n\thtml: 'Refresh',\n\tonClick: function() { \n\n},\n\ttheme: '{grid.style}:base'\n});",
                        "javascriptAdvancedButton_bind": "{dialog.object}._buttons['BUTTON_1'].bind('{DIALOG.COMPONENTNAME}.V.R{DIALOG.ROWNUMBER}.BUTTON_1');"
                    },
                    "info": {
                        "level": 2,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "f67b00c4-cffc-4c58-8188-8aa77c3240df",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 10,
                        "color": "",
                        "icon": "$$control.button",
                        "displayText": "[Button: Refresh]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 10{T=.3}{C=Black,White}{B=White,Light Blue} 10{T=.3}{C=Black,White}{B=White,Light Blue}{I:'vertline'}{I:'vertline'}{Data=99478d57-2b4e-44af-b919-241962bdcd85}{I:'$$control.button'} [Button: Refresh]<<break>>"
                    },
                    "javascript": {
                        "onclick": ""
                    },
                    "controlContainerStyle": ""
                },
                "parentIsCollapsed": false
            },
            {
                "controlType": "layout_directive_ContainerEnd",
                "display": "{B=White,Light Blue} 11{T=.3}{C=Black,White}{B=White,Light Blue} 11{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{I:'vertline'}{Data=073d79e9-dc41-4812-b59b-88a708e3677d}{I:'vertLineCap'} [Container End: CONTAINER_FIELDSLIST]<<break>>",
                "idInternal": "073d79e9-dc41-4812-b59b-88a708e3677d",
                "parentContainer": 4,
                "crc": "4294920538",
                "precalc": {
                    "ControlHTML": "<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n<!--breakbegin--><br  id=\"{dialog.componentname}.V.R1.CONTAINER_FIELDSLIST.BREAK\"  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 7,
                "__flagwrapcontentsindiv": false,
                "v": {
                    "container": {
                        "BreakType": "After",
                        "BreakHeight": ".1in",
                        "breakHorizontalSpace": ".1in"
                    },
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 11,
                        "containerStartID": "f67b00c4-cffc-4c58-8188-8aa77c3240df",
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[Container End: CONTAINER_FIELDSLIST]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 11{T=.3}{C=Black,White}{B=White,Light Blue} 11{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{I:'vertline'}{Data=073d79e9-dc41-4812-b59b-88a708e3677d}{I:'vertLineCap'} [Container End: CONTAINER_FIELDSLIST]<<break>>"
                    }
                },
                "iscollapsed": false,
                "parentIsCollapsed": false
            },
            {
                "controlType": "layout_directive_ContainerEnd",
                "display": "{B=White,Light Blue} 12{T=.3}{C=Black,White}{B=White,Light Blue} 12{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=496b84b9-ee27-4191-9fcd-7fefe9d3f1be}{I:'vertLineCap'} [Container End: FIELDLIST]<<break>>",
                "idInternal": "496b84b9-ee27-4191-9fcd-7fefe9d3f1be",
                "crc": "4294957082",
                "precalc": {
                    "ControlHTML": "<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n<!--breakbegin--><br  id=\"{dialog.componentname}.V.R1.FIELDLIST.BREAK\"  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 4,
                "__flagwrapcontentsindiv": false,
                "v": {
                    "container": {
                        "BreakType": "After",
                        "BreakHeight": ".1in",
                        "breakHorizontalSpace": ".1in"
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 12,
                        "containerStartID": "b2b89f6e-6d8f-4ae2-bdf8-d79a5910c5d2",
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[Container End: FIELDLIST]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 12{T=.3}{C=Black,White}{B=White,Light Blue} 12{T=.3}{C=Black,White}{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=496b84b9-ee27-4191-9fcd-7fefe9d3f1be}{I:'vertLineCap'} [Container End: FIELDLIST]<<break>>"
                    }
                },
                "iscollapsed": false,
                "parentIsCollapsed": false
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue} 13{T=.3}{C=Black,White}{B=White,Light Blue} 13{T=.3}{C=Black,White}{B=White,Light Blue}{Data=f6072d8e-95df-4688-b462-b298ea7b0e60}{I:'$$format.border.edge.all'} [ss]<<break>>",
                "idInternal": "f6072d8e-95df-4688-b462-b298ea7b0e60",
                "crc": "4294927050",
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "ss",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Ss1",
                    "class": "<Default>",
                    "width": "75%",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "breakHeight2": "1in",
                    "labelClass": "<Default>",
                    "labelPosition": "Above",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "customControl": {
                        "height": "",
                        "width": "75%",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\tsubtype: 'SpreadsheetInput',\n\tcolumnDefinitionJSON: '{\\r\\n\\t\"columns\": [\\r\\n\\t{\\r\\n\\t\\t\"name\": \"dummy\",\\r\\n\\t\\t\"header\": {\\r\\n\\t\\t\\t\"html\": \"&nbsp;\",\\r\\n\\t\\t\\t\"className\": \"spreadSheetHeader\",\\r\\n\\t\\t\\t\"style\": \"\"\\r\\n\\t\\t},\\r\\n\\t\\t\"align\": \"left\",\\r\\n\\t\\t\"style\": \"\",\\r\\n\\t\\t\"width\": \"600px\",\\r\\n\\t\\t\"javascript\": {\\r\\n\\t\\t\\t\"format\": \"\",\\r\\n\\t\\t\\t\"validate\": \"\",\\r\\n\\t\\t\\t\"calculate\": \"\"\\r\\n\\t\\t},\\r\\n\\t\\t\"defaultValue\": \"\",\\r\\n\\t\\t\"resize\": {\\r\\n\\t\\t\\t\"allow\": true,\\r\\n\\t\\t\\t\"min\": -1,\\r\\n\\t\\t\\t\"max\": -1\\r\\n\\t\\t},\\r\\n\\t\\t\"addButtonToColumnHeading\": true\\r\\n\\t}]\\r\\n}\\r\\n',\n\tcssType: 'BuiltIn',\n\tcustomCSS: '',\n\tclassName: 'spreadSheet',\n\terrorClassName: 'spreadsheetError',\n\tnumberOfEmptyRows: 1,\n\tallowAdditionalEmptyRows: true,\n\tmaxRows: -1,\n\tcolumnReorder: {\n\t\tallow: true,\n\t\tclassName: 'spreadSheetReorderCol'\n\t},\n\tprefix: {\n\t\tshow: true,\n\t\thtml: '\\r\\nvar _offset = 0;\\r\\nif(this.pagination) { \\r\\n\\tvar p = this.pagination.__page;\\r\\n\\tvar s = this.pagination.__pageSize;\\r\\n\\tif(typeof p != \\'undefined\\' && typeof s != \\'undefined\\') { \\r\\n\\t\\t_offset = (Number(p)-1) * Number(s);\\r\\n\\t} \\r\\n}\\r\\nvar html = [];\\r\\nhtml.push(\\'<div style=\"padding: 4px 6px;\" oncontextmenu=\"ssMenu(\\'+row+\\');;$e.stopEvent(event);\">\\');\\r\\nvar flagEnableButtons = false;\\r\\nif(!data) { \\r\\n\\t//html.push(\\'*\\');\\r\\n\\thtml.push(\\'<img src=\"svgIcon=#alpha-icon-starSolid:iconSizeable,16{ fill: #363ff2;}\" />\\')\\r\\n} else if(typeof data[row] != \\'undefined\\' && (data[row].__error || data[row].__dirty || data[row].__deleted)) { \\r\\n\\tif(data[row].__new&& !data[row].__error)     {\\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: blue; stroke: blue;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t} else if(data[row].__deleted && !data[row].__error) { \\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: purple; stroke: purple;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t}  else if(data[row].__error) { \\r\\n\\t\\t//html.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:icon,24{ fill: red; stroke: red;}\" />\\');\\r\\n\\t\\thtml.push( \\'<span style=\"color:red;\">ERROR!</span>\\');\\r\\n\\t} else { \\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: orange; stroke: orange;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t}\\r\\n} else { \\r\\n\\tvar n = (row+1) + _offset;\\r\\n\\thtml.push(\\'<span style=\"opacity:.65;\">(\\' + (n) + \\')</span>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\')\\r\\nif(flagEnableButtons) { \\r\\n\\t\\r\\n\\t{dialog.object}._buttons[\\'SAVE_\\' + this.variableName].setDisabled(false);\\r\\n\\t{dialog.object}._buttons[\\'RESET_\\' + this.variableName].setDisabled(false);\\r\\n}\\r\\nvar _html = html.join(\\'\\');\\r\\n\\r\\n\\r\\n\\r\\nreturn _html;\\r\\n',\n\t\tclassName: 'spreadSheetHeader',\n\t\twidth: '',\n\t\tstyle: 'padding: 3px; ',\n\t\theader: {\n\t\t\thtml: '&nbsp;',\n\t\t\tclassName: 'spreadSheetHeader',\n\t\t\tstyle: ''\n\t\t}\n\t},\n\tsuffix: {\n\t\tshow: false,\n\t\thtml: '\\r\\n\\r\\n',\n\t\tclassName: 'spreadSheetHeader',\n\t\twidth: '',\n\t\tstyle: '',\n\t\theader: {\n\t\t\thtml: '&nbsp;',\n\t\t\tclassName: 'spreadSheetHeader',\n\t\t\tstyle: ''\n\t\t}\n\t},\n\tjavascriptEvents: {\n\t\tonNavigate: '\\r\\n\\r\\n',\n\t\tonBeforeChange: '',\n\t\tonChange: ''\n\t},\n\ttype: 'Pre-populated',\n\tpre: {\n\t\tconnectionString: '',\n\t\ttable: '',\n\t\tfields: '',\n\t\tpageSize: '100',\n\t\tnavigationbar: '{\\r\\n\\t\"style\": \"dropdown\",\\r\\n\\t\"firstIcon\": \"{images.grid.firstPage}\",\\r\\n\\t\"lastIcon\": \"{images.grid.lastPage}\",\\r\\n\\t\"prevIcon\": \"{images.grid.prevPage}\",\\r\\n\\t\"nextIcon\": \"{images.grid.nextPage}\",\\r\\n\\t\"numberOfLinks\": 0,\\r\\n\\t\"justification\": \"Center\",\\r\\n\\t\"buttonSize\": \"Normal\",\\r\\n\\t\"buttonsubtheme\": \"Circle\",\\r\\n\\t\"showCurrentPageNumber\": true,\\r\\n\\t\"currentPageNumberTemplate\": \"{pageNumber} of {pageCount} pages / record count: {recordCount}\",\\r\\n\\t\"showCurrentPageNumberasInputControl\": true,\\r\\n\\t\"currentPageNumberInputControlSize\": \"100px\",\\r\\n\\t\"showPageSizeSelector\": true,\\r\\n\\t\"pageSizeSelectorTemplate\": \"Select the Page size: {pageSizeSelector}\",\\r\\n\\t\"pageSizes\": \"1,10,20,50,100,1000\",\\r\\n\\t\"navBarPlacement\": \"Below\",\\r\\n\\t\"navBarFooterPlacement\": \"\",\\r\\n\\t\"customization\": {\\r\\n\\t\\t\"messages\": {\\r\\n\\t\\t\\t\"listDirty\": \"Spreadsheet is dirty. Please save changes first before navigating.\"\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"navBarPlacementDivId\": \"{dialog.viewBoxId}.SSNAVBAR\"\\r\\n}',\n\t\tfilter: '',\n\t\torder: '',\n\t\tfactor: '15',\n\t\tprimarykeycolumnstyle: 'color: #1e3ef2; background-color: #f4f1f1;',\n\t\tallowCRUD: true,\n\t\tnumberOfSpreadsheetRowsToShow: '11',\n\t\tprimarykey: '',\n\t\tallowCRUD_Update: true,\n\t\tallowCRUD_Insert: true,\n\t\tallowCRUD_Delete: true,\n\t\tuserCanChangeViewportsize: true,\n\t\tviewportPrompt: 'Viewport size:',\n\t\tviewPortSizes: '10,20,50,100,200,500,1000',\n\t\tnoRecordsFoundMessage: 'NO RECORDS FOUND',\n\t\tdelayRenderTillRefresh: true,\n\t\tdelayRenderTillVisible: false,\n\t\tdisplayCRUDstatements: false\n\t},\n\thasColumnButtons: true,\n\tcolumnRecorder: {\n\t\tclassName: 'spreadSheetReorderCol'\n\t},\n\trows: {\n\t\tvirtual: true,\n\t\tvirualrows: 10,\n\t\tvirtualrows: 11\n\t},\n\tcolumnButtonsIcon: 'svgIcon=#alpha-icon-filter:iconSizeable,18',\n\tcolumnButtonsOnClick: 'if(!this._msg) {\\r\\n\\tvar t = {};\\r\\n \\tA5.themes.assign(t,this.theme + \\':primary\\',\\'edit\\');\\r\\n \\t\\r\\n\\tthis._msg = new A5.Transient({\\r\\n\\t\\ttheme: this.theme,\\r\\n\\t\\tcontent: {\\r\\n\\t\\t\\ttype: \\'html\\',\\r\\n\\t\\t\\thtml: \\'<div style=\"padding: 10px; width: 100%; min-width:200px; box-sizing: border-box;\"> \\tType filter value, then press Enter, or click the Filter icon, to search.<br><br> \\t<div style=\"display:flex; flex-direction:row;\"> \\t\\t<input  \\t\\t\\tclass=\"\\'+t.className+\\'\"  \\t\\t\\tplaceholder=\"Enter search text\" \\t\\t\\tstyle=\"flex: 1 1 auto; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  \\t\\t\\t\\t \\t\\t\\tid=\"\\'+this.contId+\\'.FILTER\"\\t \\t\\t\\tssname=\"\\'+this.contId+\\'\"  \\t\\t\\tonkeyup=\"var inputObj = this;var txt = $ga(this,\\\\\\'ssname\\\\\\'); txt = txt.split(\\\\\\'.\\\\\\'); txt = txt[txt.length-2]; var ssObj = {dialog.object}.getControl(txt);ssObj._doSearchSort(event,this);\" /> \\t\\t<div style=\"align-self:center;\"> \\t\\t\\t<img title=\"Clear search\" onclick=\"$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\').value = \\\\\\'\\\\\\'; var name = \\\\\\'\\'+this.variableName+\\'\\\\\\'; var ssObj = {dialog.object}.getControl(name);ssObj._doSearchSort(false,$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\'));\" style=\"cursor:pointer;\" src=\"svgIcon=#alpha-icon-x:icon iconButton\"/>  \\t\\t\\t<img title = \"Do search\" onclick=\"var name = \\\\\\'\\'+this.variableName+\\'\\\\\\'; var ssObj = {dialog.object}.getControl(name);ssObj._doSearchSort(false,$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\'));\"      style=\"cursor:pointer;\"  src=\"svgIcon=#alpha-icon-filter:icon iconButton\" /> \\t\\t</div> \\t</div> \\t<br><br><span style=\"font-size:9pt;\">(<b>Tips:</b><br> \\t<ul> \\t\\t<li>You can search for multiple values by entering a comma delimited list of values.</li> \\t\\t<li>To search for a string that contains a comma, use the <span style=\"font-family:Courier New; color:blue;\">{comma}</span> directive in the string.</li> \\t\\t<li>You can use the wildcard character (<span style=\"color:blue;\">%</span>) in your search string.</li> \\t\\t<li>You can use <b>QBF</b> operators (<span style=\"font-family:Courier New;color:blue;\">..,&gt;,&gt;=,&lt;,&lt;=</span>) in your search string.</li> \\t</ul> \\t)</span> </div> \\'\\r\\n\\t\\t },\\r\\n\\t\\tlayout: \\'dropdown\\',\\r\\n\\t\\tlayouts: { \\r\\n\\t\\t\\t\\'dropdown\\': { \\r\\n\\t\\t\\t\\tstretch:\\'min-width\\',\\r\\n\\t\\t\\t\\tlocation: \\'dropdown\\'\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t })\\r\\n\\t this._colFilter = { }\\r\\n\\t \\r\\n}\\r\\n/////////////////\\r\\nvar tEle = this._msg.getElement();\\r\\ntEle.style.zIndex = \\'1000\\';\\r\\n///////////////////\\r\\n\\r\\nvar val = \\'\\';\\r\\nif(this._colFilter[\\'C\\' + col]) val = this._colFilter[\\'C\\' + col];\\r\\nvar pEle = ele.parentNode;\\r\\nvar iEle = $(this.contId+ \\'.FILTER\\')\\r\\niEle.value = val;\\r\\nthis._msg.show(pEle);\\r\\niEle.focus();\\r\\nthis._msgColumn = col;\\r\\n',\n\tcolumnCanAdd: false,\n\tsettingsJSON: '{\\r\\n\\tinputId: \\'{variablename}\\',\\r\\n\\tvariableName: \\'{variablenameUPPERCASE}\\',\\r\\n\\ttheme: \\'{dialog.style}\\',\\r\\n\\tmultiple: false,\\r\\n\\tanimation: {\\r\\n\\t\\tallow: true\\r\\n\\t},\\r\\n\\tseparator: \\'\\\\\\\\n\\',\\r\\n\\tloopNavigate: false,\\r\\n\\tloopNavigateNullSelection: true,\\r\\n\\tallowNullSelection: false,\\r\\n\\tautoRefresh: false,\\r\\n\\tallowTextSelection: true,\\r\\n\\tallowNullDeselection: false,\\r\\n\\tallowAnyValue: true,\\r\\n\\tcaptureFocus: false,\\r\\n\\tscroll: false,\\r\\n\\tlayout: \\'default\\',\\r\\n\\tlayouts: {\\r\\n\\t\\tdefault: {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: \\'{@[scope].generateHTML}\\\\r\\\\n\\'\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tgenerateHTML: function() { \\r\\nvar html = [];\\r\\nvar row = 0;\\r\\nvar val = \\'\\';\\r\\nvar col = null;\\r\\nvar _txt = \\'\\';\\r\\nif(typeof this.errors == \\'undefined\\') this.errors = {};\\r\\n\\r\\n// header\\r\\nhtml.push(\\'<div style=\"-webkit-user-select: none; -ms-user-select: none; user-select: none;\">\\');\\r\\n\\r\\nvar prefix = false;\\r\\nvar suffix = false;\\r\\nif(this.data.rows.prefix.show) { \\r\\n\\tprefix = this.data.rows.prefix;\\r\\n\\tif(!prefix._isParsed){\\r\\n\\t\\tif(typeof prefix.style == \\'undefined\\') prefix.style = \\'\\';\\r\\n\\t\\tif(typeof prefix.width == \\'undefined\\') prefix.width = \\'\\';\\r\\n\\t\\tif(typeof prefix.header == \\'undefined\\') prefix.header = {html: prefix.name, className: \\'\\', style: prefix.style};\\r\\n\\t\\telse{\\r\\n\\t\\t\\tif(typeof prefix.header.html == \\'undefined\\') prefix.header.html = \\'\\';\\r\\n\\t\\t\\tif(typeof prefix.header.className == \\'undefined\\') prefix.header.className = prefix.className;\\r\\n\\t\\t\\tif(typeof prefix.header.style == \\'undefined\\') prefix.header.style = prefix.style;\\r\\n\\t\\t}\\r\\n\\t\\tprefix._isParsed = true;\\r\\n\\t}\\r\\n\\t\\r\\n\\t_txt = \\'<div style=\"\\'+prefix.header.style+\\'\" class=\"\\'+prefix.header.className+\\'\" >\\'+prefix.header.html+\\'</div>\\';\\r\\n\\thtml.push(_txt)\\r\\n\\t\\r\\n}\\r\\n\\r\\nvar colAttr = \\'\\';\\r\\nvar colTitle = \\'\\';\\r\\nfor(var k =0;k<this.data.columns.length;k++){\\r\\n\\tcol = this.data.columns[k];\\r\\n\\tif(!col._isParsed){\\r\\n\\t\\tif(typeof col.defaultValue == \\'undefined\\') col.defaultValue = \\'\\';\\r\\n\\t\\tif(typeof col.calculate == \\'undefined\\') col.calculate = false;\\r\\n\\t\\tif(typeof col.format == \\'undefined\\') col.format = false;\\r\\n\\t\\tif(typeof col.validate == \\'undefined\\') col.validate = false;\\r\\n\\t\\tif(typeof col.className == \\'undefined\\') col.className = \\'\\';\\r\\n\\t\\tif(typeof col.style == \\'undefined\\') col.style = \\'\\';\\r\\n\\t\\tif(typeof col.width == \\'undefined\\') col.width = \\'100px\\';\\r\\n\\t\\tif(typeof col.header == \\'undefined\\') col.header = {html: col.name, className: \\'\\', style: col.style, hasButton: false};\\r\\n\\t\\telse{\\r\\n\\t\\t\\tif(typeof col.header.html == \\'undefined\\') col.header.html = col.name;\\r\\n\\t\\t\\tif(typeof col.header.className == \\'undefined\\') col.header.className = col.className;\\r\\n\\t\\t\\tif(typeof col.header.style == \\'undefined\\') col.header.style = col.style;\\r\\n\\t\\t}\\r\\n\\t\\tif(typeof col.resize == \\'undefined\\') col.resize = {allow: false, min: -1, max: -1};\\r\\n\\t\\telse{\\r\\n\\t\\t\\tif(typeof col.resize.allow == \\'undefined\\') col.resize.allow = false;\\r\\n\\t\\t\\tif(typeof col.resize.min == \\'undefined\\') col.resize.min = -1;\\r\\n\\t\\t\\tif(typeof col.resize.max == \\'undefined\\') col.resize.max = -1;\\r\\n\\t\\t}\\r\\n\\t\\tcol._isParsed = true;\\r\\n\\t}\\r\\n\\t\\r\\n\\tcolAttr = \\'id=\"{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+k+\\'\" style=\"\\'+col.header.style+\\'; position: relative; width: \\'+col.width+\\'; min-width: \\'+col.width+\\'; box-sizing: border-box;\" class=\"\\'+col.header.className+\\'\"\\';\\r\\n\\tif(this.data.columnReorder.allow){\\r\\n\\t\\tcolAttr = colAttr+\\' a5-item=\"colReorder:\\'+k+\\'\"\\';\\r\\n\\t}\\r\\n\\tif(typeof col.header.html == \\'function\\') colTitle = col.header.html.call(this,col);\\r\\n\\telse colTitle = col.header.html;\\r\\n\\tcolTitle = \\'<div style=\"width: 100%; max-width: \\'+col.width+\\'; box-sizing: border-box; white-space: nowrap;\\'+(col.header.hasButton ? \\' padding-\\'+(col.header.hasButton == \\'before\\' ? \\'left\\' : \\'right\\')+\\': \\'+this.data.columnHeader.button.indent+\\';\\' : \\'\\')+\\' cursor: default; overflow: hidden; text-overflow: ellipsis;\">\\'+colTitle+\\'</div>\\';\\r\\n\\tif(col.header.hasButton){\\r\\n\\t\\tcolTitle = colTitle+\\'<div id=\"{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+k+\\'.B\" a5-item=\"button:columnHeader.button:\\'+k+\\'\" style=\"position: absolute; \\'+(col.header.hasButton == \\'before\\' ? \\'left: 0px;\\' : \\'right: \\'+(col.resize.allow ? \\'10px\\' : \\'0px\\'))+\\'; top: 50%; transform: translateY(-50%);\">\\'+A5.u.icon.html(this.data.columnHeader.button.icon)+\\'</div>\\';\\r\\n\\t}\\r\\n\\tif(col.resize.allow){\\r\\n\\t\\t_txt = \\'<div \\'+colAttr+\\'>\\'+colTitle+\\'<div id=\"{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+k+\\'.RS\" a5-item=\"colResize:\\'+k+\\'\" style=\"position: absolute; top: 0px; bottom: 0px; right: 0px; width: 10px; cursor: e-resize; font-size: 0pc;\"></div><div style=\"position: absolute; top: 0px; right: 0px; left: 0px; bottom: 0px; background: rgba(0,0,0,.25); z-index: 100; cursor: default;  display: none;\">&nbsp;</div></div>\\';\\r\\n\\t} else{\\r\\n\\t\\t_txt = \\'<div \\'+colAttr+\\'>\\'+colTitle+\\'</div>\\';\\r\\n\\t}\\r\\n\\thtml.push(_txt)\\r\\n}\\r\\n\\r\\nif(this.data.rows.suffix.show) { \\r\\n\\tsuffix = this.data.rows.suffix;\\r\\n\\tif(!suffix._isParsed){\\r\\n\\t\\tif(typeof suffix.style == \\'undefined\\') suffix.style = \\'\\';\\r\\n\\t\\tif(typeof suffix.width == \\'undefined\\') suffix.width = \\'\\';\\r\\n\\t\\tif(typeof suffix.header == \\'undefined\\') suffix.header = {html: suffix.name, className: \\'\\', style: suffix.style};\\r\\n\\t\\telse{\\r\\n\\t\\t\\tif(typeof suffix.header.html == \\'undefined\\') suffix.header.html = \\'\\';\\r\\n\\t\\t\\tif(typeof suffix.header.className == \\'undefined\\') suffix.header.className = suffix.className;\\r\\n\\t\\t\\tif(typeof suffix.header.style == \\'undefined\\') suffix.header.style = suffix.style;\\r\\n\\t\\t}\\t\\r\\n\\t\\tsuffix._isParsed = true;\\r\\n\\t}\\r\\n\\t\\r\\n\\t_txt = \\'<div style=\"\\'+suffix.header.style+\\'\" class=\"\\'+suffix.header.className+\\'\" >\\'+suffix.header.html+\\'</div>\\';\\r\\n\\thtml.push(_txt)\\r\\n\\t\\r\\n}\\r\\nvar btns = A5.u.object.get(this.data,\\'columnHeader.suffix.buttons\\');\\r\\nif(btns && btns.length > 0){\\r\\n\\thtml.push(\\'<div class=\"\\'+this.data.columnHeader.suffix.className+\\'\" style=\"\\'+this.data.columnHeader.suffix.style+\\'\">\\');\\r\\n\\tfor(var i=0;i<btns.length;i++){\\r\\n\\t\\thtml.push(\\'<div id=\"{dialog.componentName}.{variablenameUPPERCASE}.COL.S\\'+i+\\'.B\" a5-item=\"button:columnHeader.suffix.buttons[\\'+i+\\']\" style=\"display: inline-block;\">\\'+A5.u.icon.html(btns[i].icon)+\\'</div>\\');\\t\\r\\n\\t}\\r\\n\\thtml.push(\\'</div>\\');\\r\\n}\\r\\n\\r\\nhtml.push(\\'</div>\\');\\r\\n\\r\\nvar evnts = \\'onkeydown=\"{dialog.object}._controlInst[\\\\\\'R1.{variablenameUPPERCASE}\\\\\\'].keyDown(event)\" onfocus=\"{dialog.object}._controlInst[\\\\\\'R1.{variablenameUPPERCASE}\\\\\\'].navigateEvent(this);\" onblur=\"{dialog.object}._controlInst[\\\\\\'R1.{variablenameUPPERCASE}\\\\\\'].change(this);\"\\'\\r\\nvar readOnly = \\'\\';\\r\\n\\r\\nif(!this.valueObj) this.valueObj = [];\\r\\n\\r\\nvar view = {start: 0, end: this.valueObj.length, full: 0 };\\r\\n\\r\\nif(this.data.rows.addition.allow){\\r\\n\\tvar count = this.data.rows.addition.max;\\r\\n\\tif(this.data.rows.max > 0) { \\r\\n\\t\\tcount = Math.min(count,this.data.rows.max - row);\\r\\n\\t}\\r\\n\\tview.end += count;\\r\\n}\\r\\nview.full = view.end;\\r\\nvar virt = this.data.rows.virtual;\\r\\nif(virt.allow){\\r\\n\\tview.start = Math.max(0,Math.min(virt.location,view.full-virt.size));\\r\\n\\tvirt.location = view.start;\\r\\n\\tview.end = Math.min(view.start+virt.size,view.full);\\r\\n\\tif(this.scroller){\\r\\n\\t\\tthis.scroller.setDisplay(true);\\r\\n\\t\\tthis.scroller.min = 0;\\r\\n\\t\\tthis.scroller.max = Math.max(0,view.full-virt.size);\\r\\n\\t\\tthis.scroller.value = view.start;\\r\\n\\t\\tthis.scroller.page = virt.size;\\r\\n\\t\\tthis.scroller.refresh();\\r\\n\\t}\\r\\n} else if(this.scroller){\\r\\n\\tthis.scroller.max = 0;\\r\\n\\tthis.scroller.setDisplay(false);\\r\\n}\\r\\nrow = view.start;\\r\\n\\r\\n\\r\\n\\r\\n// values\\r\\nvar cn = \\'\\';\\r\\nvar id = \\'\\';\\r\\nvar err = \\'\\';\\r\\nvar inputCSS = \\'width: 100%; box-sizing: border-box;\\';\\r\\nif(this.data.cells.stretch) inputCSS = \\'position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; box-sizing: border-box;\\';\\r\\nfor(var i=view.start;i<Math.min(view.end,this.valueObj.length);i++){\\r\\n\\thtml.push(\\'<div class=\"\\'+this.data.rows.className+(row == this.position.row && this.data.rows.focusClassName ? \\' \\'+this.data.rows.focusClassName : \\'\\')+\\'\" dirty=\"false\" id=\"{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'\">\\');\\r\\n\\tif(prefix) { \\r\\n\\t\\tif(typeof prefix.html == \\'function\\') { \\t\\r\\n\\t\\t\\tval = prefix.html.call(this,row,this.valueObj);\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tval = prefix.html;\\r\\n\\t\\t}\\r\\n\\t\\thtml.push(\\'<div class=\"\\'+prefix.className+\\'\" style=\"\\'+prefix.style+\\'; width: \\'+prefix.width+\\'\">\\');\\r\\n\\t\\thtml.push(val);\\r\\n\\t\\thtml.push(\\'</div>\\');\\r\\n\\t}\\r\\n\\tfor(var k =0;k<this.data.columns.length;k++){\\r\\n\\t\\tcol = this.data.columns[k];\\r\\n\\t\\treadOnly = \\'\\';\\r\\n\\t\\tif(col.calculate) { \\r\\n\\t\\t\\treadOnly = \\'readonly\\';\\r\\n\\t\\t\\tthis.valueObj[i][col.name] = col.calculate.call(this,this.valueObj,i);\\r\\n\\t\\t} else if(col.readonly){\\r\\n\\t\\t\\tif((typeof col.readonly == \\'function\\' && col.readonly.call(this,this.valueObj,i)) || typeof col.readonly != \\'function\\') readOnly = \\'readonly\\';\\r\\n\\t\\t}\\r\\n\\t\\tval = this.valueObj[i][col.name];\\r\\n\\t\\tif(typeof val == \\'undefined\\') val = col.defaultValue;\\r\\n\\t\\tid = \\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'.\\'+k;\\r\\n\\t\\tcn = col.className+\\' \\'+this.data.cells.className;\\r\\n\\t\\terr = \\'\\';\\r\\n\\t\\tif(this.errors[id]){\\r\\n\\t\\t\\tcn = cn+\\' \\'+this.data.cells.errorClassName;\\r\\n\\t\\t\\terr = this.errors[id];\\r\\n\\t\\t}\\r\\n\\t\\tif(typeof val == \\'string\\') val = val.replace(/\"/g,\\'&quot;\\');\\r\\n\\t\\thtml.push(\\'<div class=\"\\'+cn+\\'\" style=\"position: relative; width: \\'+col.width+\\'; box-sizing: border-box;\"><input \\'+readOnly+\\' class=\"\\'+this.data.cells.editClassName+\\'\" style=\"\\'+col.style+\\';\\'+inputCSS+\\'\" \\'+evnts+\\' title=\"\\'+err+\\'\" id=\"\\'+id+\\'\" value=\"\\'+val+\\'\"/>&#8203;</div>\\');\\r\\n\\t}\\r\\n\\t\\r\\n\\tif(suffix) { \\r\\n\\t\\tif(typeof suffix.html == \\'function\\') { \\t\\r\\n\\t\\t\\tval = suffix.html.call(this,row,this.valueObj);\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tval = suffix.html;\\r\\n\\t\\t}\\r\\n\\t\\thtml.push(\\'<div class=\"\\'+suffix.className+\\'\" style=\"\\'+suffix.style+\\'; width: \\'+suffix.width+\\'\">\\');\\r\\n\\t\\thtml.push(val);\\r\\n\\t\\thtml.push(\\'</div>\\');\\r\\n\\t}\\r\\n\\r\\n\\t\\r\\n\\t\\r\\n\\trow++;\\r\\n\\thtml.push(\\'</div>\\');\\r\\n}\\r\\n\\r\\n// new rows\\r\\nif(this.data.rows.addition.allow && row < view.end){\\r\\n\\tvar count = this.data.rows.addition.max;\\r\\n\\tif(this.data.rows.max > 0) { \\r\\n\\t\\tcount = Math.min(count,this.data.rows.max - row);\\r\\n\\t}\\r\\n\\tif(count > 0) { \\r\\n\\t\\tfor(var i=0;i < count;i++){ \\r\\n\\t\\t\\thtml.push(\\'<div class=\"\\'+this.data.rows.className+\\'\" dirty=\"false\" id=\"{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'\">\\');\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tif(prefix) { \\r\\n\\t\\t\\t\\tif(typeof prefix.html == \\'function\\') { \\t\\r\\n\\t\\t\\t\\t\\tval = prefix.html.call(this,row,false);\\r\\n\\t\\t\\t\\t} else { \\r\\n\\t\\t\\t\\t\\tval = prefix.html;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\thtml.push(\\'<div class=\"\\'+prefix.className+\\'\" style=\"\\'+prefix.style+\\'; width: \\'+prefix.width+\\'\">\\');\\r\\n\\t\\t\\t\\thtml.push(val);\\r\\n\\t\\t\\t\\thtml.push(\\'</div>\\');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tfor(var k =0;k<this.data.columns.length;k++){\\r\\n\\t\\t\\t\\tcol = this.data.columns[k];\\r\\n\\t\\t\\t\\treadOnly = \\'\\';\\r\\n\\t\\t\\t\\tif(col.calculate) { \\r\\n\\t\\t\\t\\t\\treadOnly = \\'readonly\\';\\r\\n\\t\\t\\t\\t} else if(col.readonly){\\r\\n\\t\\t\\t\\t\\tif((typeof col.readonly == \\'function\\' && col.readonly.call(this,this.valueObj,(i+1)*-1)) || typeof col.readonly != \\'function\\') readOnly = \\'readonly\\';\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tval = col.defaultValue;\\r\\n\\t\\t\\t\\tif(typeof col.format == \\'function\\') val = col.format.call(this,val);\\r\\n\\t\\t\\t\\thtml.push(\\'<div class=\"\\'+col.className+\\' \\'+this.data.cells.className+\\'\" style=\"position: relative; width: \\'+col.width+\\'; box-sizing: border-box;\"><input \\'+readOnly+\\' class=\"\\'+this.data.cells.editClassName+\\'\" style=\"\\'+col.style+\\';\\'+inputCSS+\\'\" \\'+evnts+\\' id=\"{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'.\\'+k+ \\'\" value=\"\\'+val+\\'\" />&#8203;</div>\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tif(suffix) { \\r\\n\\t\\t\\t\\tif(typeof suffix.html == \\'function\\') { \\t\\r\\n\\t\\t\\t\\t\\tval = suffix.html.call(this,row,false);\\r\\n\\t\\t\\t\\t} else { \\r\\n\\t\\t\\t\\t\\tval = suffix.html;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\thtml.push(\\'<div class=\"\\'+suffix.className+\\'\" style=\"\\'+suffix.style+\\'; width: \\'+suffix.width+\\'\">\\');\\r\\n\\t\\t\\t\\thtml.push(val);\\r\\n\\t\\t\\t\\thtml.push(\\'</div>\\');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\trow++;\\r\\n\\t\\t\\thtml.push(\\'</div>\\');\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nthis.rowCount = view.full;\\r\\nthis.view = view;\\r\\nhtml = html.join(\\'\\');\\r\\nhtml = \\'<div class=\"\\'+this.data.className+\\'\">\\'+html+\\'</div>\\';\\r\\nif(this.data.columnReorder.allow){\\r\\n\\thtml = html+\\'<div id=\"{dialog.componentName}.{variablenameUPPERCASE}.COLREORDER\" class=\"\\'+this.data.columnReorder.className+\\'\" style=\"position: absolute; display: none;\"></div>\\';\\r\\n}\\r\\nhtml = html+\\'<div id=\"{dialog.componentName}.{variablenameUPPERCASE}.PICKER\" a5-item=\"picker\" style=\"position: absolute; display: none; overflow: hidden; transform: translateY(-50%);\">\\'+A5.u.icon.html(this.data.pickers.button.icon)+\\'</div>\\';\\r\\n\\r\\nreturn html;\\r\\n\\r\\n\\r\\n},\\r\\n\\tsetPosition: function(row,column) {\\r\\n\\r\\nif(typeof row == \\'undefined\\') row = null;\\r\\nif(typeof column == \\'undefined\\') column = null;\\r\\n\\r\\n\\r\\nif(column != null){\\r\\n\\tif(typeof column == \\'string\\'){\\r\\n\\t\\tif(column == \\'\\'+column.toNumber()) column = column.toNumber();\\r\\n\\t\\telse {\\r\\n\\t\\t\\tfor(var i=0;i<this.data.columns.length;i++){\\r\\n\\t\\t\\t\\tif(this.data.columns[i].name == column){\\r\\n\\t\\t\\t\\t\\tcolumn = i;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(typeof column == \\'string\\') column = null;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nif(row == null) row = this.position.row;\\r\\nif(column == null) column = this.position.column;\\r\\n\\r\\nif(row != null){\\r\\n\\tvar ele = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'.\\'+column);\\r\\n\\tif(ele) ele.focus();\\r\\n}\\r\\n\\r\\n},\\r\\n\\tkeyDown: function(e) { \\r\\n\\r\\nvar keyCode = e.charCode || e.keyCode;\\r\\n\\r\\nif(keyCode == 38 || keyCode == 40){ \\r\\n\\tvar virt = this.data.rows.virtual;\\r\\n\\tvar targetId = e.target.id.split(\\'.\\');\\r\\n\\tvar row = Number(targetId[2]);\\r\\n\\tthis.validateRow(row);\\r\\n\\tif(keyCode == 38) row = row-1;\\r\\n\\telse row = row+1;\\r\\n\\t\\r\\n\\tif(virt.allow && (row < this.view.start || row >= this.view.end)){\\r\\n\\t\\tif(keyCode == 38) virt.location--;\\r\\n\\t\\telse virt.location++;\\r\\n\\t\\t\\r\\n\\t}\\r\\n\\t\\r\\n\\tthis.commit();\\r\\n\\tif(row == -1 || row > this.rowCount) return true;\\r\\n\\ttargetId[2] = row;\\r\\n\\ttargetId = targetId.join(\\'.\\');\\r\\n\\tvar ele = $(targetId);\\r\\n\\tif(ele) ele.focus();\\r\\n} else if(keyCode == 9 || keyCode == 13){\\r\\n\\tvar targetId = e.target.id.split(\\'.\\');\\r\\n\\tvar row = Number(targetId[2]);\\r\\n\\tvar col = Number(targetId[3]);\\r\\n\\tif((col == this.data.columns.length-1 && !e.shiftKey) || keyCode == 13){\\r\\n\\t\\tvar virt = this.data.rows.virtual;\\r\\n\\t\\tif(virt.allow){\\r\\n\\t\\t\\tif(this.view.end == row+1){\\r\\n\\t\\t\\t\\tvirt.location++;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t$(targetId[0]+\\'.\\'+targetId[1]+\\'.\\'+targetId[2]).setAttribute(\\'dirty\\',\\'true\\');\\r\\n\\t\\tthis.validateRow(row);\\r\\n\\t\\tthis.commit();\\r\\n\\t\\ttargetId[2] = (row+1);\\r\\n\\t\\ttargetId[3] = 0;\\r\\n\\t\\ttargetId = targetId.join(\\'.\\');\\r\\n\\t\\tvar ele = $(targetId);\\r\\n\\t\\tif(ele) ele.focus();\\r\\n\\t} else if(col == 0 && e.shiftKey){\\r\\n\\t\\tthis.validateRow(row);\\r\\n\\t\\tthis.commit();\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\n},\\r\\n\\tcommit: function(partial) { \\r\\n\\r\\nvar data = [];\\r\\nvar tData = null;\\r\\nvar val = \\'\\';\\r\\nvar noData = false;\\r\\nif(!this.valueObj) this.valueObj = [];\\r\\n\\r\\nfor(var i=this.view.start;i<this.view.end;i++){\\r\\n\\tif($(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+i).getAttribute(\\'dirty\\') == \\'true\\'){\\r\\n\\t\\ttData = {};\\r\\n\\t\\tnoData = true;\\r\\n\\t\\tfor(var k=0;k<this.data.columns.length;k++){\\r\\n\\t\\t\\tval = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+i+\\'.\\'+k).value;\\r\\n\\t\\t\\tif(val != \\'\\') noData = false;\\r\\n\\t\\t\\ttData[this.data.columns[k].name] = val;\\r\\n\\t\\t}\\r\\n\\t\\tif(!noData || this.data.rows.max > 0){\\r\\n\\t\\t\\tif(this.valueObj[i]) A5.u.object.assign(this.valueObj[i],tData);\\r\\n\\t\\t\\telse this.valueObj[i] = tData;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\nval = JSON.stringify(this.valueObj);\\r\\nif(val == \\'[]\\') val = \\'\\';\\r\\n\\r\\nvar ele = $(this.inputId);\\r\\nif(val != ele.value){\\r\\n\\tthis.value[0] = val;\\r\\n\\tele.value = this.value[0];\\r\\n\\t$e.execute(ele,\\'change\\');\\r\\n}\\r\\nif(!partial){\\r\\n\\tthis.isCommiting = true;\\r\\n\\tthis.onChange();\\r\\n\\tthis.isCommiting = false;\\r\\n}\\r\\n\\r\\n\\r\\n},\\r\\n\\tchange: function(ele) { \\r\\nvar nVal = ele.value;\\r\\n\\r\\nvar targetId = ele.id.split(\\'.\\');\\r\\nvar row = Number(targetId[2]);\\r\\nvar col = Number(targetId[3]);\\r\\nif(row > this.valueObj.length -1) { \\r\\n\\tif(nVal == \\'\\' || nVal == this.data.columns[col].defaultValue) return false;\\r\\n\\tvar tData = null;\\r\\n\\tfor(var i = this.valueObj.length; i <=row; i++) { \\r\\n\\t\\ttData = {};\\r\\n\\t\\tfor(var k = 0; k < this.data.columns.length; k++) { \\r\\n\\t\\t\\ttData[this.data.columns[k].name] = this.data.columns[k].defaultValue;\\r\\n\\t\\t}\\r\\n\\t\\tif(this.data.rows.newFlag) tData[this.data.rows.newFlag] = true;\\r\\n\\t\\tthis.valueObj.push(tData);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nthis.validate(ele);\\r\\nele.parentNode.parentNode.setAttribute(\\'dirty\\',\\'true\\');\\r\\n\\r\\n\\r\\nvar oVal = this.valueObj[row][this.data.columns[col].name];\\r\\nif(typeof this.data.rows.onBeforeChange == \\'function\\') this.data.rows.onBeforeChange.call(this,this.valueObj,row,col,nVal,oVal);\\r\\nif(this.data.rows.dirtyFlag && this.valueObj[row][this.data.columns[col].name] != ele.value) {\\r\\n\\tthis.valueObj[row][this.data.rows.dirtyFlag] = true;\\r\\n\\tdelete this.valueObj[row].__error;\\r\\n\\tdelete this.valueObj[row].__deleted;\\r\\n}\\r\\nthis.valueObj[row][this.data.columns[col].name] = ele.value;\\r\\nvar colObj = null;\\r\\nvar colEle = null;\\r\\n\\r\\nfor(var k = 0; k < this.data.columns.length; k++) {\\r\\n\\tcolObj = this.data.columns[k]; \\r\\n\\tcolEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'.\\' + k);\\r\\n\\tif(colObj.calculate) { \\r\\n\\t\\tthis.valueObj[row][colObj.name] = colObj.calculate.call(this,this.valueObj,row);\\r\\n\\t\\tcolEle.value = this.valueObj[row][colObj.name];\\r\\n\\t} else if(colObj.readonly) {\\r\\n\\t\\t\\t\\r\\n\\t\\tif((typeof colObj.readonly == \\'function\\' && colObj.readonly.call(this,this.valueObj,row)) || typeof colObj.readonly != \\'function\\') colEle.readOnly = true;\\r\\n\\t\\telse colEle.readOnly = false;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nif(this.data.rows.prefix.show) { \\r\\n\\tif(typeof this.data.rows.prefix.html == \\'function\\') { \\r\\n\\t\\tvar val = this.data.rows.prefix.html.call(this,row,this.valueObj);\\r\\n\\t\\t$(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row).firstChild.innerHTML = val;\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r\\n\\r\\nif(this.data.rows.suffix.show) { \\r\\n\\tif(typeof this.data.rows.suffix.html == \\'function\\') { \\r\\n\\t\\tvar val = this.data.rows.suffix.html.call(this,row,this.valueObj);\\r\\n\\t\\t$(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row).lastChild.innerHTML = val;\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r\\n\\r\\nvar val = JSON.stringify(this.valueObj);\\r\\nif(val == \\'[]\\') val = \\'\\';\\r\\n\\r\\nvar ele = $(this.inputId);\\r\\nif(val != ele.value){\\r\\n\\tthis.value[0] = val;\\r\\n\\tele.value = this.value[0];\\r\\n\\t$e.execute(ele,\\'change\\');\\r\\n}\\r\\nif(typeof this.data.rows.onChange == \\'function\\') this.data.rows.onChange.call(this,this.valueObj,row,col,nVal,oVal);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n},\\r\\n\\tvalidate: function(ele) { \\r\\n\\r\\nvar targetId = ele.id.split(\\'.\\');\\r\\nvar col = Number(targetId[3]);\\r\\nvar colD = this.data.columns[col];\\r\\nvar val = ele.value;\\r\\nif(colD.format){\\r\\n\\tval = colD.format.call(this,val);\\r\\n\\tele.value = val;\\r\\n}\\r\\nif(colD.validate){\\r\\n\\tvar res = colD.validate.call(this,val,colD);\\r\\n \\tif(res){\\r\\n \\t\\tthis.errors[ele.id] = res;\\r\\n \\t\\t$acn(ele.parentNode,this.data.cells.errorClassName);\\r\\n \\t\\tele.title = res;\\r\\n\\t} else if(this.errors[ele.id]){\\r\\n\\t\\tdelete this.errors[ele.id];\\r\\n\\t\\t$rcn(ele.parentNode,this.data.cells.errorClassName);\\r\\n\\t\\tele.title = \\'\\';\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\n},\\r\\n\\tvalidateRow: function(row) { \\r\\n\\r\\nvar ele = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row);\\r\\nif(ele){\\r\\n\\tvar eles = ele.getElementsByTagName(\\'input\\');\\r\\n\\tfor(var i=0;i<eles.length;i++){\\r\\n\\t\\tthis.validate(eles[i]);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n},\\r\\n\\tvalidateAll: function() { \\r\\n\\r\\nif(this.valueObj){\\r\\n\\tfor(var i=0;i<this.valueObj.length;i++){\\r\\n\\t\\tthis.validateRow(i);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n},\\r\\n\\tnavigateEvent: function(ele) {\\r\\nvar targetId = ele.id.split(\\'.\\');\\r\\nvar row = Number(targetId[2]);\\r\\nvar col = Number(targetId[3]);\\r\\nvar pbEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.PICKER\\')\\r\\nvar colObj = this.data.columns[col];\\r\\nif(colObj.picker){\\r\\n\\tvar tEle = ele.parentNode;\\r\\n\\tpbEle.style.display = \\'block\\';\\r\\n\\tpbEle.style.top = Math.floor(tEle.offsetTop+(tEle.offsetHeight/2))+\\'px\\';\\r\\n\\tpbEle.style.left = (tEle.offsetLeft+tEle.offsetWidth-pbEle.offsetWidth)+\\'px\\';\\r\\n\\tpbEle.style.height = tEle.offsetHeight+\\'px\\';\\r\\n\\tele.style.paddingRight = pbEle.offsetWidth+\\'px\\';\\r\\n\\tthis._pickerTarget = [row,col];\\r\\n} else if(this._pickerTarget){\\r\\n\\tvar t = this._pickerTarget;\\r\\n\\t$(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+t[0]+\\'.\\'+t[1]).style.paddingRight = \\'\\';\\r\\n\\tpbEle.style.display = \\'none\\';\\r\\n\\tthis._pickerTarget = false;\\r\\n}\\r\\nvar fCls = this.data.rows.focusClassName\\r\\nif(fCls){\\r\\n\\tvar fRow = this.position.row;\\r\\n\\tif(fRow != row){\\r\\n\\t\\tif(fRow != null){\\r\\n\\t\\t\\tvar orEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+fRow);\\r\\n\\t\\t\\tif(orEle) A5.u.element.cls(orEle,\\'-=\\'+fCls);\\r\\n\\t\\t}\\r\\n\\t\\tA5.u.element.cls(ele.parentNode.parentNode,\\'+=\\'+fCls);\\r\\n\\t}\\r\\n}\\r\\n\\r\\nthis.position = {row: row, column:col};\\r\\nif(this.data.onNavigate) {\\r\\n\\tthis.data.onNavigate.call(this,row,col,ele.value,ele);\\r\\n}\\r\\n\\r\\n},\\r\\n\\t_storeColumnDefinition: function() { alert(\\'store col\\');},\\r\\n\\t_enableSave: function() {\\t\\tvar that = this;\\r\\n\\t\\tsetTimeout(function() { \\r\\n\\t\\t\\tvar d = that.valueObj;\\r\\n\\t\\t\\tvar flagEnableSave = false;\\r\\n\\t\\t\\tfor(var i = 0; i < d.length; i++) { \\r\\n\\t\\t\\t\\tif(typeof d[i].__dirty != \\'undefined\\'|| typeof d[i].__deleted != \\'undefined\\' || typeof d[i].__new != \\'undefined\\') flagEnableSave = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{dialog.object}._buttons[\\'SAVE_\\' + that.variableName].setDisabled(!flagEnableSave);\\r\\n\\t\\t},100)\\r\\n\\t },\\r\\n\\t_populateAdvancedSearch: function(name,asName) { \\r\\n\\r\\nvar obj = this;\\r\\nvar c = obj.data.columns;\\r\\nvar obj = {};\\r\\nfor(var i = 0; i < c.length; i++) {\\r\\n\\tdelete obj2;\\r\\n\\tobj2 = {};\\r\\n\\tobj2.label = c[i].name;\\r\\n\\t\\r\\n\\tif(c[i].__datatype == \\'T\\') {\\r\\n\\t\\tobj2.control = {};\\r\\n\\t\\tobj2.control.type = \\'daterangepicker\\';\\r\\n\\t\\tobj2.control.format = \\'MM/dd/yyyy\\'\\r\\n\\t}\\r\\n\\tobj[ c[i].name] = obj2;\\r\\n}\\r\\n\\r\\nvar xas = {Dialog.object}.getControl(asName)\\r\\nxas.data.fields = obj; \\r\\nxas.populate(xas.data);\\r\\n//var fm = [\\r\\n//{value: \\'FirstName\\', html: \\'FirstName\\'}\\r\\n//]\\r\\n//debugger;\\r\\n//xas._fieldMenu = fm ;\\r\\n//debugger;\\r\\n\\r\\n\\t},\\r\\n\\t_setViewportSize: function(obj,rows) {obj.data.rows.virtual.size = Number(rows)\\r\\nobj.refresh()\\r\\n },\\r\\n\\t_noRecords: function(flag) {\\r\\nvar __name = \\'{variablenameUPPERCASE}\\'; \\r\\nvar id = __name + \\'.NORECORDS\\'; \\r\\nvar id2 = __name + \\'.CRUDBUTTONS\\'; \\r\\nvar id3 = __name + \\'.SSNAVBAR\\'; \\r\\nvar id4 = __name + \\'.VIEWPORT\\'; \\r\\n\\r\\n\\r\\nvar ele = $(id); \\r\\nvar ele2 = $(id2);\\r\\n\\r\\nvar ele3 = $(id3);\\r\\nvar ele4 = $(id4);\\r\\n\\r\\nif(typeof this.hasBeenRendered == \\'undefined\\') { \\r\\n\\tif(ele) ele.style.display = \\'none\\'; \\r\\n\\tif(ele2) ele2.style.display = \\'none\\';\\r\\n\\tif(ele3) ele3.style.display = \\'none\\';\\r\\n\\tif(ele4) ele4.style.display = \\'none\\';\\r\\n\\treturn;\\r\\n}\\r\\nif(ele) { \\r\\n\\tif(flag) {\\r\\n\\t\\t\\r\\n\\t\\tif(ele) ele.style.display = \\'\\'; \\r\\n\\t\\tif(ele2) ele2.style.display = \\'none\\';\\r\\n\\t\\tif(ele2) ele2.style.display = \\'\\';\\r\\n\\t\\t\\r\\n\\t\\tif(ele3) ele3.style.display = \\'none\\';\\r\\n\\t\\tif(ele4) ele4.style.display = \\'none\\';\\r\\n\\t} else { \\r\\n\\t\\t\\r\\n\\t\\tif(ele) ele.style.display = \\'none\\'; \\r\\n\\t\\tif(ele2) ele2.style.display = \\'\\'; \\r\\n\\t\\tif(ele3) ele3.style.display = \\'\\';\\r\\n\\t\\tif(ele4) ele4.style.display = \\'flex\\';\\r\\n\\t\\t\\r\\n\\t}\\r\\n}\\r\\n},\\r\\n\\t_spreadsheetIsDirty: function() {;var a = this.valueObj;\\r\\nvar flagDirty = false;\\r\\nfor(var i = 0; i < a.length; i++) { \\r\\n\\tif(typeof a[i].__dirty != \\'undefined\\') { \\r\\n\\t\\tflagDirty = true;\\r\\n\\t\\tbreak;\\r\\n\\t}\\r\\n}\\r\\nreturn flagDirty;\\r\\n },\\r\\n\\t_saveButtonStatus: function() { var a = this.valueObj;\\r\\nvar flagSaveEnabled = false;\\r\\n\\r\\n\\r\\nfor(var i = 0; i < a.length; i++) { \\r\\n\\tif(typeof a[i].__dirty != \\'undefined\\') { \\r\\n\\t\\tflagSaveEnabled = true;\\r\\n\\t\\tbreak;\\r\\n\\t}\\r\\n}\\r\\nif(!flagSaveEnabled) { \\r\\n\\t{dialog.object}._buttons[\\'SAVE_\\' + this.variableName].setDisabled(true);\\r\\n} else { \\r\\n\\t{dialog.object}._buttons[\\'SAVE_\\' + this.variableName].setDisabled(false);\\r\\n}\\t\\r\\n },\\r\\n\\t_navigationBar: {\\r\\n\\t\\tstyle: \\'dropdown\\',\\r\\n\\t\\tfirstIcon: \\'{images.grid.firstPage}\\',\\r\\n\\t\\tlastIcon: \\'{images.grid.lastPage}\\',\\r\\n\\t\\tprevIcon: \\'{images.grid.prevPage}\\',\\r\\n\\t\\tnextIcon: \\'{images.grid.nextPage}\\',\\r\\n\\t\\tnumberOfLinks: 0,\\r\\n\\t\\tjustification: \\'Center\\',\\r\\n\\t\\tbuttonSize: \\'Normal\\',\\r\\n\\t\\tbuttonsubtheme: \\'Circle\\',\\r\\n\\t\\tshowCurrentPageNumber: true,\\r\\n\\t\\tcurrentPageNumberTemplate: \\'{pageNumber} of {pageCount} pages / record count: {recordCount}\\',\\r\\n\\t\\tshowCurrentPageNumberasInputControl: true,\\r\\n\\t\\tcurrentPageNumberInputControlSize: \\'100px\\',\\r\\n\\t\\tshowPageSizeSelector: true,\\r\\n\\t\\tpageSizeSelectorTemplate: \\'Select the Page size: {pageSizeSelector}\\',\\r\\n\\t\\tpageSizes: \\'1,10,20,50,100,1000\\',\\r\\n\\t\\tnavBarPlacement: \\'Below\\',\\r\\n\\t\\tnavBarFooterPlacement: \\'\\',\\r\\n\\t\\tcustomization: {\\r\\n\\t\\t\\tmessages: {\\r\\n\\t\\t\\t\\tlistDirty: \\'Spreadsheet is dirty. Please save changes first before navigating.\\'\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tnavBarPlacementDivId: \\'{variablenameUPPERCASE}.SSNAVBAR\\'\\r\\n\\t},\\r\\n\\t_refreshNavBar: function() {\\r\\nalert(\\'refresh nav bar\\')\\r\\n},\\r\\n\\t_doSearchSort: function(event,ele) { \\r\\nvar __name = \\'{variablenameUPPERCASE}\\';if(!event || event.keyCode == 13) {\\r\\n\\tvar ssObj = {dialog.object}.getControl(__name);\\r\\n\\tvar colName = this.data.columns[ssObj._msgColumn].name;\\r\\n\\tvar message = \\'Search for: \\' + ele.value + \\' Search field: \\' + colName;\\r\\n\\tssObj._colFilter[\\'C\\' + ssObj._msgColumn] = ele.value;\\r\\n\\tssObj._msg.hide();\\r\\n\\tvar data = [];\\r\\n\\tdata.push(A5.ajax.buildURLParam(\\'__searchFor\\',ele.value));\\r\\n\\tdata.push(A5.ajax.buildURLParam(\\'__searchField\\',colName));\\r\\n\\tdata.push(A5.ajax.buildURLParam(\\'__pagination\\',JSON.stringify(ssObj.pagination)));\\r\\n\\tdata = data.join(\\'&\\')\\r\\n\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'a5DialogHelper_spreadsheetSearchSort\\',\\'\\',data);\\r\\n}\\r\\n\\r\\n},\\r\\n\\t_columnSort: function(name,obj) {;var flagDirty = this._spreadsheetIsDirty();\\r\\nif(flagDirty) { \\r\\n\\tvar msg = \\'Cannot sort. Spreadsheet has unsaved edits.\\'\\r\\n\\talert(msg);\\r\\n\\treturn\\r\\n}\\r\\nvar currentSort = obj.currentSort;\\r\\nif(typeof currentSort == \\'undefined\\' || currentSort == null) {\\r\\n\\tcurrentSort = [\\'\\',1];\\r\\n}\\r\\nvar sort = null;\\r\\nif(currentSort[0] == name) { \\r\\n\\tif(currentSort[1] == 1) {\\r\\n\\t\\tsort = [currentSort[0],-1];\\r\\n\\t} \\r\\n} else { \\r\\n\\tsort = [name,1];\\r\\n}\\r\\nobj.currentSort = sort;\\r\\nvar data = [];\\r\\ndata.push(A5.ajax.buildURLParam(\\'__pagination\\',JSON.stringify(this.pagination)));\\r\\ndata.push(A5.ajax.buildURLParam(\\'__sortDefinition\\',JSON.stringify(sort)));\\r\\ndata = data.join(\\'&\\')\\r\\n\\t\\r\\n\\r\\n{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'A5DialogHelper_columnSort\\',\\'\\',data)\\r\\n//console.log(\\'resolved sort: \\' + sort);\\r\\n//alert(\\'resolved sort: \\' + sort);\\r\\nthis.refresh();\\r\\n },\\r\\n\\tlistIsDirty: function() { \\r\\n\\t\\tvar arr = this.valueObj;\\r\\n\\t\\t\\r\\n\\t\\tfor(var i = 0; i < arr.length; i++) { \\r\\n\\t\\t\\tif(arr[i].__dirty) return true;\\r\\n\\t\\t}\\r\\n\\t\\treturn false;\\r\\n\\t},\\r\\n\\t_setPageSize: function(pageSize) {\\r\\n\\t\\r\\n\\tvar data = []\\r\\n\\tdata.push(A5.ajax.buildURLParam(\\'__targetPageSize\\',pageSize));\\r\\n\\tdata.push(A5.ajax.buildURLParam(\\'__sspaginationJSON\\',JSON.stringify(this.pagination)));\\r\\n\\tdata = data.join(\\'&\\');\\r\\n\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'A5Helper_ssSetPageSize\\',\\'\\',data);\\r\\n}\\r\\n,\\r\\n\\tgetCell: function(row,column) {\\r\\n//get a pointer to the input control\\r\\nvar id = \\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+row+\\'.\\'+column;\\r\\nreturn $(id);\\r\\n\\r\\n},\\r\\n\\t_colResizeStart: function(col) { \\r\\nvar colObj = this.data.columns[col];\\r\\n\\r\\nvar s = A5.u.convertUnits(colObj.width,\\'px\\');\\r\\nvar min = s;\\r\\nvar max = -100000000;\\r\\nif(colObj.resize.min > 0) min = (s-colObj.resize.min);\\r\\nif(colObj.resize.max > 0) max = s-colObj.resize.max;\\r\\nvar id = \\'{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+col;\\r\\nvar ele = $(id);\\r\\nele.lastChild.style.display = \\'\\';\\r\\nA5.u.drag.start({\\r\\n\\tvb: this.variableName,\\r\\n\\tcol: col,\\r\\n\\tele: ele.lastChild,\\r\\n\\tsize: s,\\r\\n\\tmin: min,\\r\\n\\tmax: max,\\r\\n\\tonMove: function(i,d,e){\\r\\n\\t\\td.ele.style.right = Math.max(Math.min((0-i.customMoveX),d.min),d.max)+\\'px\\';\\r\\n\\t},\\r\\n\\tonEnd: function(i,d,e){\\r\\n\\t\\td.ele.style.display = \\'none\\';\\r\\n\\t\\tdelete d.ele;\\r\\n\\t\\tvar vb = {dialog.object}.getControl(d.vb);\\r\\n\\t\\tvar col = vb.data.columns[d.col];\\r\\n\\t\\tvar s = d.size+i.customMoveX;\\r\\n\\t\\tif(col.resize.max > 0) s = Math.min(s,col.resize.max);\\r\\n\\t\\tif(col.resize.min > 0) s = Math.max(s,col.resize.min);\\r\\n\\t\\tcol.width = s+\\'px\\';\\r\\n\\t\\tvb.refresh();\\r\\n\\t\\tvar cObj =vb.data.columns;\\r\\n\\t\\tvar obj2 = [];\\r\\n\\t\\tfor(i = 0; i < cObj.length; i++) { \\r\\n\\t\\t\\tobj2.push(cObj[i].width);\\r\\n\\t\\t}\\r\\n\\t\\tvar json = JSON.stringify(obj2);\\r\\n\\t\\tvar key = \\'COLUMNDEFINITIONWIDTHS_\\' +vb.pagination.__connectionstring + \\'_\\' + vb.pagination.__tableName;\\r\\n\\t\\tlocalStorage.setItem(key,json)\\r\\n\\t\\t\\r\\n\\t}\\r\\n});\\r\\n\\r\\n},\\r\\n\\t_colReorderStart: function(col,e) { \\r\\nvar crEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.COLREORDER\\');\\r\\nvar cEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+col);\\r\\nvar colObj = this.data.columns[col];\\r\\ncrEle.className = this.data.columnReorder.className+\\' \\'+colObj.header.className;\\r\\n$ss(crEle,colObj.header.style+\\'; position: absolute; display: none; box-sizing: border-box; overflow: hiden; text-overflow: ellipsis; cursor: move;\\');\\r\\ncrEle.style.width = cEle.offsetWidth+\\'px\\';\\r\\ncrEle.style.height = cEle.offsetHeight+\\'px\\';\\r\\ncrEle.style.top = cEle.offsetTop+\\'px\\';\\r\\ncrEle.style.left = cEle.offsetLeft+\\'px\\';\\r\\nvar colHTML = \\'\\';\\r\\nif(typeof colObj.header.html == \\'function\\') colHTML = colObj.header.html.call(this,colObj);\\r\\nelse colHTML = colObj.header.html;\\r\\ncrEle.innerHTML = colHTML;\\r\\n\\r\\n\\r\\nvar coor = $e.getCoors(e);\\r\\nvar ox = coor.clientX-cEle.getBoundingClientRect().left;\\r\\n\\r\\nA5.u.drag.start({\\r\\n\\tvb: this.variableName,\\r\\n\\tcontId: this.contId,\\r\\n\\tcol: col,\\r\\n\\tele: crEle,\\r\\n\\tcEle: cEle,\\r\\n\\tsx: cEle.offsetLeft,\\r\\n\\tox: ox,\\r\\n\\tinit: true,\\r\\n\\tonMove: function(i,d,e){\\r\\n\\t\\tif(d.init){\\r\\n\\t\\t\\td.ele.style.display = \\'\\';\\r\\n\\t\\t\\td.cEle.firstChild.style.opacity = \\'.1\\';\\r\\n\\t\\t\\td.init = false;\\r\\n\\t\\t}\\r\\n\\t\\td.ele.style.left = (d.sx+i.customMoveX)+\\'px\\';\\r\\n\\t},\\r\\n\\tonEnd: function(i,d,e){\\r\\n\\t\\tif(!d.init){\\r\\n\\t\\t\\td.ele.style.display = \\'none\\';\\r\\n\\t\\t\\tdelete d.ele;\\r\\n\\t\\t\\tvar vb = {dialog.object}.getControl(d.vb);\\r\\n\\t\\t\\tvar ele = null;\\r\\n\\t\\t\\tvar tx = d.sx+d.ox+i.customMoveX;\\r\\n\\t\\t\\tvar ti = vb.data.columns.length-1;\\r\\n\\t\\t\\tvar tl = 0;\\r\\n\\t\\t\\tfor(var i=0;i<vb.data.columns.length;i++){\\r\\n\\t\\t\\t\\tele = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.COL.\\'+i);\\r\\n\\t\\t\\t\\ttl = ele.offsetLeft;\\r\\n\\t\\t\\t\\tif(tl > tx){\\r\\n\\t\\t\\t\\t\\tti = i-1;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t} else if(tl+(ele.offsetWidth/2) > tx){\\r\\n\\t\\t\\t\\t\\tti = i;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(ti < 0) ti = 0;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tif(ti != col){\\r\\n\\t\\t\\t\\tvar colObj = vb.data.columns.splice(col,1);\\r\\n\\t\\t\\t\\tif(ti > col){\\r\\n\\t\\t\\t\\t\\tvb.data.columns.splice(ti,0,colObj[0]);\\r\\n\\t\\t\\t\\t} else{\\r\\n\\t\\t\\t\\t\\tvb.data.columns.splice(ti,0,colObj[0]);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdelete d.cEle;\\r\\n\\t\\t\\t\\tvb.errors = {};\\r\\n\\t\\t\\t\\tvb.refresh();\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvb.validateAll();\\r\\n\\t\\t\\t} else{\\r\\n\\t\\t\\t\\td.cEle.firstChild.style.opacity = \\'\\';\\r\\n\\t\\t\\t\\tdelete d.cEle;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\tvar obj2 = [];\\r\\n\\t\\tfor(var i = 0; i < vb.data.columns.length; i++) { \\r\\n\\t\\t\\tobj2.push(vb.data.columns[i].name);\\r\\n\\t\\t}\\r\\n\\t\\tvar key = \\'COLUMNDEFINITIONORDER_\\' +vb.pagination.__connectionstring + \\'_\\' + vb.pagination.__tableName;\\r\\n\\t\\tlocalStorage.setItem(key,JSON.stringify(obj2))\\r\\n\\t\\t\\r\\n\\t}\\r\\n});\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n},\\r\\n\\t_deleteRow: function(row){   var obj = this;\\r\\n  var d = this.valueObj;\\r\\n  var d2 = d[row];\\r\\n  if(typeof d2.__new != \\'undefined\\') {\\r\\n\\td.splice(row,1)\\r\\n\\tobj.refresh()\\r\\n  } else {\\r\\n\\td2.__deleted = true;\\r\\n\\tobj.refresh();\\r\\n  };\\r\\n  this._enableSave();\\r\\n  this.setPosition(null,0);\\r\\n },\\r\\n\\t_resetRow: function(row) {  var obj = this;\\r\\n  //alert(row)\\r\\n  var d = this.valueObj;\\r\\n  var d2 = d[row];\\r\\n  delete d2.__oldData;\\r\\n  delete d2.__dirty;\\r\\n  delete d2.__deleted;\\r\\n  obj.refresh();\\r\\n  \\r\\n  this.setPosition(null,0);\\r\\n  \\r\\n\\t\\r\\n\\r\\n},\\r\\n\\t_onInitialize: function() { {dialog.object}._buttons[\\'SAVE_{variablenameUPPERCASE}\\'] = new A5.Button({\\r\\n\\tlayout: \\'icon text\\',\\r\\n\\tstyle: \\'box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\\',\\r\\n\\ttip: \\'Save edits\\',\\r\\n\\thtml: \\'Save\\',\\r\\n\\ticon: \\'svgIcon=#alpha-icon-save:icon iconButton\\',\\r\\n\\tdisabledIcon: \\'svgIcon=#alpha-icon-save:icon iconDisabled iconButton\\',\\r\\n\\tonClick: function() { \\r\\n\\t\\t{dialog.object}.spreadsheet_saveEdits(\\'{variablenameUPPERCASE}\\');\\r\\n},\\r\\n\\ttheme: \\'{dialog.Style}\\'\\r\\n});\\r\\n{dialog.object}._buttons[\\'NEWRECORD_{variablenameUPPERCASE}\\'] = new A5.Button({\\r\\n\\tlayout: \\'icon text\\',\\r\\n\\tstyle: \\'box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\\',\\r\\n\\ttip: \\'Enter a new record\\',\\r\\n\\thtml: \\'New Record\\',\\r\\n\\ticon: \\'svgIcon=#alpha-icon-docAdd:icon iconButton\\',\\r\\n\\tdisabledIcon: \\'svgIcon=#alpha-icon-docAdd:icon iconButton\\',\\r\\n\\tonClick: function() { \\r\\n\\t\\tvar ssObj = {dialog.object}.getControl(\\'{variablenameUPPERCASE}\\');\\r\\n\\t\\tssObj.data.rows.virtual.location = 1000000;\\r\\n\\t\\tssObj.refresh();\\r\\n\\t\\tssObj.setPosition(null,0);\\r\\n},\\r\\n\\ttheme: \\'{dialog.style}\\'\\r\\n});\\r\\n{dialog.object}._buttons[\\'DELETERECORD_{variablenameUPPERCASE}\\'] = new A5.Button({\\r\\n\\tlayout: \\'icon text\\',\\r\\n\\tstyle: \\'box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\\',\\r\\n\\ttip: \\'Delete record\\',\\r\\n\\thtml: \\'Delete Record\\',\\r\\n\\ticon: \\'svgIcon=#alpha-icon-removeCircle:icon iconButton\\',\\r\\n\\tdisabledIcon: \\'svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\\',\\r\\n\\tonClick: function() { \\r\\n\\t\\t//alert(\\'delete\\');\\r\\n\\t\\tvar ssObj = {dialog.object}.getControl(\\'{variablenameUPPERCASE}\\');\\r\\n\\t\\tvar row = ssObj.position.row;\\r\\n\\t\\tif( row == null)  { \\r\\n\\t\\t\\tvar title = \\'<span style=\"color:red;\">Error</span>\\';\\r\\n\\t\\t\\tvar msgBody = \\'<span style=\"color:red;\">You have not specifield which row to delete. Click in a row before you click \"Delete Record\".</span>\\';\\r\\n\\t\\t\\tvar width = \\'400px\\';\\r\\n\\t\\t\\tvar loc = \\'top\\';\\r\\n\\t\\t\\tvar oKButtonLabel = \\'<span style=\"color:red;\">OK</span>\\';\\r\\n\\t\\t\\tvar cancelButtonLabel = \\'\\';\\r\\n\\t\\t\\tvar onOK = function() {  };\\r\\n\\t\\t\\t{dialog.object}.dropDownMessage(\\'message\\',title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,\\'\\',loc);\\r\\n\\r\\n\\t\\t} else { \\r\\n\\t\\t\\t//alert(\\'delete row: \\' + (row + 1));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar title = \\'Confirm Delete\\';\\r\\n\\t\\t\\tvar msgBody = \\'Are you sure you want to delete record \\' +(row+1);\\r\\n\\t\\t\\tvar width = \\'400px\\';\\r\\n\\t\\t\\tvar loc = \\'top\\';\\r\\n\\t\\t\\tvar oKButtonLabel = \\'Yes\\';\\r\\n\\t\\t\\tvar cancelButtonLabel = \\'No\\';\\r\\n\\t\\t\\tvar onOK = function() {var ssObj = {dialog.object}.getControl(\\'{variablenameUPPERCASE}\\'); ssObj._deleteRow(row)}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar onCancel = function() {};\\r\\n\\t\\t\\t{dialog.object}.dropDownMessage(\\'confirm\\',title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel,loc,\\'\\',\\'&nbsp;\\');\\r\\n\\t\\t}\\r\\n},\\r\\n\\ttheme: \\'{dialog.style}\\'\\r\\n});\\r\\n{dialog.object}._buttons[\\'RESET_{variablenameUPPERCASE}\\'] = new A5.Button({\\r\\n\\tlayout: \\'icon text\\',\\r\\n\\tstyle: \\'box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\\',\\r\\n\\ttip: \\'Undo edits to the List Detail View\\',\\r\\n\\thtml: \\'Reset\\',\\r\\n\\ticon: \\'svgIcon=#alpha-icon-undo:icon iconButton\\',\\r\\n\\tdisabledIcon: \\'svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\\',\\r\\n\\tonClick: function() {\\r\\n\\t\\tvar ssObj = {dialog.object}.getControl(\\'{variablenameUPPERCASE}\\');\\r\\n\\t\\tvar row = ssObj.position.row;\\r\\n\\t\\tif( row == null)  { \\r\\n\\t\\t\\tvar title = \\'<span style=\"color:red;\">Error</span>\\';\\r\\n\\t\\t\\tvar msgBody = \\'<span style=\"color:red;\">You have not specifield which row to reset. Click in a row before you click \"Reset\".</span>\\';\\r\\n\\t\\t\\tvar width = \\'400px\\';\\r\\n\\t\\t\\tvar loc = \\'top\\';\\r\\n\\t\\t\\tvar oKButtonLabel = \\'<span style=\"color:red;\">OK</span>\\';\\r\\n\\t\\t\\tvar cancelButtonLabel = \\'\\';\\r\\n\\t\\t\\tvar onOK = function() {  };\\r\\n\\t\\t\\t{dialog.object}.dropDownMessage(\\'message\\',title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,\\'\\',loc);\\r\\n\\r\\n\\t\\t} else { \\r\\n\\t\\t\\t//alert(\\'reset row: \\' + (row + 1));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar title = \\'Confirm Delete\\';\\r\\n\\t\\t\\tvar msgBody = \\'Are you sure you want to reset record \\' +(row+1);\\r\\n\\t\\t\\tvar width = \\'400px\\';\\r\\n\\t\\t\\tvar loc = \\'top\\';\\r\\n\\t\\t\\tvar oKButtonLabel = \\'Yes\\';\\r\\n\\t\\t\\tvar cancelButtonLabel = \\'No\\';\\r\\n\\t\\t\\tvar onOK = function() { var ssObj = {dialog.object}.getControl(\\'{variablenameUPPERCASE}\\'); ssObj._resetRow(row); ssObj._enableSave()}\\r\\n\\t\\t\\tvar onCancel = function() {  };\\r\\n\\t\\t\\t{dialog.object}.dropDownMessage(\\'confirm\\',title,msgBody,width,oKButtonLabel,cancelButtonLabel,onOK,onCancel,loc,\\'\\',\\'&nbsp;\\');\\r\\n\\t\\t} \\r\\n},\\r\\n\\ttheme: \\'{dialog.style}\\'\\r\\n});\\r\\n\\r\\n\\r\\n{dialog.object}._buttons[\\'SAVE_{variablenameUPPERCASE}\\'].bind(\\'{dialog.componentname}.SAVE_{variablenameUPPERCASE}\\');\\r\\n{dialog.object}._buttons[\\'NEWRECORD_{variablenameUPPERCASE}\\'].bind(\\'{dialog.componentname}.NEWRECORD_{variablenameUPPERCASE}\\');\\r\\n{dialog.object}._buttons[\\'DELETERECORD_{variablenameUPPERCASE}\\'].bind(\\'{dialog.componentname}.DELETERECORD_{variablenameUPPERCASE}\\');\\r\\n{dialog.object}._buttons[\\'RESET_{variablenameUPPERCASE}\\'].bind(\\'{dialog.componentname}.RESET_{variablenameUPPERCASE}\\');\\r\\n\\r\\n{dialog.object}._buttons[\\'SAVE_{variablenameUPPERCASE}\\'].setDisabled(true);\\r\\n{dialog.object}._buttons[\\'RESET_{variablenameUPPERCASE}\\'].setDisabled(true);\\r\\n\\t\\r\\nthis._navigator = {dialog.object}._navigationBar(\\'{variablenameUPPERCASE}.SSNAVBAR\\');\\r\\n\\r\\nvar ele = $(\\'{dialog.componentName}.DELETERECORD_{variablenameUPPERCASE}\\');\\r\\nif(ele) ele.style.display = \\'none\\';\\r\\n\\r\\nvar ele = $(\\'{dialog.componentName}.RESET_{variablenameUPPERCASE}\\');\\r\\nif(ele) ele.style.display = \\'none\\';\\r\\n $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); },\\r\\n\\tonChange: function() {\\r\\n\\tif(this.value.length > 0) {\\r\\n\\t\\tif(this.value[0] != \\'\\'){\\r\\n\\t\\t\\tthis.valueObj = JSON.parse(this.value[0]);\\r\\n\\t\\t\\tif(!this.isCommiting) this.errors = {};\\r\\n\\t\\t\\tthis.refresh();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\t\\r\\n}\\r\\n,\\r\\n\\tonDraw: function() { \\r\\nif(this.scroller) this.scroller.refresh();\\r\\nelse { \\r\\n\\tthis.position = {row: null, column: null};\\r\\n\\tvar ele = $(this.contId);\\r\\n\\tvar lEle = ele.querySelector(\\'[a5-layout-target]\\');\\r\\n\\tif(lEle) ele = lEle;\\r\\n\\tthis.scroller = new A5.Scroller(ele.id,{\\r\\n\\t\\ttheme: this.theme,\\r\\n\\t\\tmax: 0,\\r\\n\\t\\toffset: {top: \\'10px\\', bottom: \\'10px\\'},\\r\\n\\t\\tvbId: this.variableName,\\r\\n\\t\\tmessage: function(d){ return (d+1)+\\' - \\'+(d+this.page);},\\r\\n\\t\\tonSelect: function(v){\\r\\n\\t\\t\\tvar obj = {dialog.object}.getControl(this.vbId);\\r\\n\\t\\t\\tobj.data.rows.virtual.location = v;\\r\\n\\t\\t\\tobj.refresh();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\t\\r\\n\\t\\r\\n\\t$e.add(ele,\\'wheel\\',function(e){\\r\\n\\t\\tvar virt = this.data.rows.virtual;\\r\\n\\t\\tif(virt.allow && e.deltaY != 0){\\r\\n\\t\\t\\tif(e.deltaY < 0) virt.location--;\\r\\n\\t\\t\\telse if(e.deltaY > 0) virt.location++;\\r\\n\\t\\t\\t$e.stopEvent(e);\\r\\n\\t\\t\\tthis.refresh();\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t},this,true);\\r\\n}\\r\\nif(this.position.row != null){\\r\\n\\tvar ele = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+this.position.row+\\'.\\'+this.position.column);\\r\\n\\tif(ele) ele.focus();\\r\\n}\\r\\n}\\r\\n,\\r\\n\\tsetColumns: function(columns) { \\tvar _data = this.data;\\r\\n\\t$u.o.assign(_data,columns);\\r\\n\\tthis.populate(_data)\\r\\n}\\r\\n,\\r\\n\\tgetColumnDefinitionFromData: function(data) { \\tvar _cols = [];\\r\\n\\tvar _d1 = data[0];\\r\\n\\tvar o = \\'\\';\\r\\n\\tfor(var _n in _d1) {\\r\\n\\t\\to = {};\\r\\n\\t\\to.name = _n;\\r\\n\\t\\to.header = {};\\r\\n\\t\\to.header.html = _n;\\r\\n\\t\\to.header.className = \\'spreadSheetHeader\\';\\r\\n\\t\\tif(typeof _d1[_n] == \\'number\\') {\\r\\n\\t\\t\\to.style = \\'text-align:right;\\';\\r\\n\\t\\t} else {\\r\\n\\t\\t\\to.style = \\'text-align: left;\\';\\r\\n\\t\\t}\\r\\n\\t\\t_cols.push(o);\\r\\n\\t}\\r\\n\\tvar obj = {};\\r\\n\\tobj.columns = _cols\\r\\n\\treturn obj;\\r\\n}\\r\\n,\\r\\n\\tsetColumnsAndPopulate: function(data) { \\tvar _cols = this.getColumnDefinitionFromData(data);\\r\\n\\tthis.setColumns(_cols);\\r\\n\\tvar _dJSON = JSON.stringify(data);\\r\\n\\tvar varName = this.variableName;\\r\\n\\t{dialog.object}.setValue(varName,_dJSON);\\r\\n}\\r\\n,\\r\\n\\titems: {\\r\\n\\t\\t\\'colResize\\' : {\\r\\n\\t\\t\\titemName: \\'colResize\\',\\r\\n\\t\\t\\tselectable: false,\\r\\n\\t\\t\\tonDown: function(v,ia,i,ele) {this._colResizeStart(ia) }\\r\\n\\t\\t},\\r\\n\\t\\t\\'colReorder\\' : {\\r\\n\\t\\t\\titemName: \\'colReorder\\',\\r\\n\\t\\t\\tselectable: false,\\r\\n\\t\\t\\tonDown: function(v,ia,i,ele) { this._colReorderStart(ia,arguments[4]); }\\r\\n\\t\\t},\\r\\n\\t\\t\\'button\\': { \\r\\n\\t\\t\\titemName: \\'button\\',\\r\\n\\t\\t\\tselectable: false,\\r\\n\\t\\t\\tonClick: function(v,ia,item,ele) {\\r\\n\\t\\t\\t\\tvar p = ia.split(\\':\\');\\r\\n\\t\\t\\t\\tvar args = [ele];\\r\\n\\t\\t\\t\\tvar b = p.shift();\\r\\n\\t\\t\\t\\tvar btn = A5.u.object.get(this.data,b);\\r\\n\\t\\t\\t\\targs.unshift(p);\\r\\n\\t\\t\\t\\tif(btn) btn.onClick.apply(this,args);\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\\'picker\\': { \\r\\n\\t\\t\\titemName: \\'picker\\',\\r\\n\\t\\t\\tselectable: false,\\r\\n\\t\\t\\tonClick: function(v,ia,item,ele) {\\r\\n\\t\\t\\t\\tvar t = this._pickerTarget;\\r\\n\\t\\t\\t\\tif(t){\\r\\n\\t\\t\\t\\t\\tvar colObj = this.data.columns[t[1]];\\r\\n\\t\\t\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{variablenameUPPERCASE}.\\'+t[0]+\\'.\\'+t[1])\\r\\n\\t\\t\\t\\t\\tiEle.focus();\\r\\n\\t\\t\\t\\t\\tif(!this._picker){\\r\\n\\t\\t\\t\\t\\t\\tthis._picker = new A5.Picker({\\r\\n\\t\\t\\t\\t\\t\\t\\ttheme: this.theme,\\r\\n\\t\\t\\t\\t\\t\\t\\tssName: this.variableName,\\r\\n\\t\\t\\t\\t\\t\\t\\tlayout: \\'dropdown\\',\\r\\n\\t\\t\\t\\t\\t\\t\\tlayouts: {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\'dropdown\\': {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlocation: \\'dropdown\\',\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tstretch: \\'min-width\\'\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\\t\\t\\tonCommit: function(){\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar ele = $(this.state.binding.id);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t{dialog.object}.getControl(this.ssName).change(ele);\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tvar pObj = colObj.picker;\\r\\n\\t\\t\\t\\t\\tthis._picker.show(pObj.type,iEle.parentNode,iEle,null,pObj);\\r\\n\\t\\t\\t\\t}\\t\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n}\\r\\n,\\r\\n\\tgetColumnState: function() { \\tvar s = this.data.columns;\\r\\n\\tvar json = JSON.stringify(s,\\'\\',\\'\\\\t\\');\\r\\n\\treturn json;\\r\\n}\\r\\n,\\r\\n\\tsetColumnState: function(json) { \\tvar json = localStorage.getItem(\\'columns\\');\\r\\n\\tthis.data.columns = JSON.parse(json)\\r\\n\\tthis.refresh();\\r\\n}\\r\\n,\\r\\n\\twrapper: {\\r\\n\\t\\tallow: true,\\r\\n\\t\\thtml: \\'<div style=\"width: 100%; height: 100%; display:flex; flex-direction: column;\">\\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.SS\" style=\"flex: 1 1 auto; overflow:auto;\" a5-layout-target=\"true\"></div>\\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.SSNAVBAR\">ss nav bar</div> \\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.MESSAGE\"></div>\\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.CRUDBUTTONS\"><button id=\"{dialog.componentname}.SAVE_{variablenameUPPERCASE}\">{dialog.componentname}.SAVE_{variablenameUPPERCASE}</button>\\\\r\\\\n<button id=\"{dialog.componentname}.NEWRECORD_{variablenameUPPERCASE}\">{dialog.componentname}.NEWRECORD_{variablenameUPPERCASE}</button>\\\\r\\\\n<button id=\"{dialog.componentname}.DELETERECORD_{variablenameUPPERCASE}\">{dialog.componentname}.DELETERECORD_{variablenameUPPERCASE}</button>\\\\r\\\\n<button id=\"{dialog.componentname}.RESET_{variablenameUPPERCASE}\">{dialog.componentname}.RESET_{variablenameUPPERCASE}</button>\\\\r\\\\n</div>\\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.NORECORDS\" style=\"padding-top:50px;color:red;\">NO RECORDS FOUND</div>\\\\r\\\\n\\\\t<div id=\"{variablenameUPPERCASE}.VIEWPORT\" style=\"display:flex; flex-direction:row;\">\\\\r\\\\n\\\\t<div style=\"padding: 10px;\">Viewport size:</div>\\\\r\\\\n\\\\t<div>\\\\r\\\\n\\\\t\\\\t<select class=\"[theme:edit.base.className|class.dialogSelect] \"  onchange=\"var ssObj = {dialog.object}.getControl(\\\\\\'{variablenameUPPERCASE}\\\\\\');ssObj._setViewportSize(ssObj,this.value);\" >\\\\r\\\\n\\\\t  \\\\t<option value=\"10\">10</option>\\\\r\\\\n<option value=\"20\">20</option>\\\\r\\\\n<option value=\"50\">50</option>\\\\r\\\\n<option value=\"100\">100</option>\\\\r\\\\n<option value=\"200\">200</option>\\\\r\\\\n<option value=\"500\">500</option>\\\\r\\\\n<option value=\"1000\">1000</option>\\\\r\\\\n<option selected value=\"11\">11</option>\\\\r\\\\n\\\\r\\\\n \\\\t <select>\\\\r\\\\n \\\\t</div>\\\\r\\\\n </div>\\\\r\\\\n\\\\r\\\\n\\\\t\\\\r\\\\n</div>\\\\r\\\\n\\'\\r\\n\\t},\\r\\n\\tstyle: \\'overflow:hidden;\\'\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"columns\": [\\r\\n\\t{\\r\\n\\t\\t\"name\": \"dummy\",\\r\\n\\t\\t\"style\": \"\",\\r\\n\\t\\t\"header\": {\\r\\n\\t\\t\\t\"html\": \"&nbsp;\",\\r\\n\\t\\t\\t\"className\": \"spreadSheetHeader\",\\r\\n\\t\\t\\t\"style\": \"\",\\r\\n\\t\\t\\t\"hasButton\": true\\r\\n\\t\\t},\\r\\n\\t\\t\"resize\": {\\r\\n\\t\\t\\t\"allow\": true,\\r\\n\\t\\t\\t\"min\": -1,\\r\\n\\t\\t\\t\"max\": -1\\r\\n\\t\\t},\\r\\n\\t\\t\"width\": \"600px\",\\r\\n\\t\\t\"defaultValue\": \"\"\\r\\n\\t}],\\r\\n\\t\"className\": \"spreadSheet\",\\r\\n\\t\"columnReorder\": {\\r\\n\\t\\t\"allow\": true,\\r\\n\\t\\t\"className\": \"spreadSheetReorderCol\"\\r\\n\\t},\\r\\n\\t\"rows\": {\\r\\n\\t\\t\"className\": \"\",\\r\\n\\t\\t\"max\": -1,\\r\\n\\t\\t\"addition\": {\\r\\n\\t\\t\\t\"allow\": true,\\r\\n\\t\\t\\t\"max\": 1\\r\\n\\t\\t},\\r\\n\\t\\t\"focusClassName\": \"ssRowFocus\",\\r\\n\\t\\t\"virtual\": {\\r\\n\\t\\t\\t\"allow\": true,\\r\\n\\t\\t\\t\"size\": 11,\\r\\n\\t\\t\\t\"location\": 0\\r\\n\\t\\t},\\r\\n\\t\\t\"dirtyFlag\": \"__dirty\",\\r\\n\\t\\t\"newFlag\": \"__new\",\\r\\n\\t\\t\"onBeforeChange\": function(data,row,column,value,oldValue) {var rd = data[row]; if(!rd.__dirty ) { \\r\\n\\tif(typeof rd.__oldData == \\'undefined\\') { \\r\\n\\t\\trd.__oldData = A5.u.object.clone(rd);\\r\\n\\t}\\r\\n\\t\\r\\n}\\r\\n\\r\\n},\\r\\n\\t\\t\"onChange\": function(data,row,column,value,oldValue) {},\\r\\n\\t\\t\"prefix\": {\\r\\n\\t\\t\\t\"show\": true,\\r\\n\\t\\t\\t\"html\": function(row,data) { \\r\\nvar _offset = 0;\\r\\nif(this.pagination) { \\r\\n\\tvar p = this.pagination.__page;\\r\\n\\tvar s = this.pagination.__pageSize;\\r\\n\\tif(typeof p != \\'undefined\\' && typeof s != \\'undefined\\') { \\r\\n\\t\\t_offset = (Number(p)-1) * Number(s);\\r\\n\\t} \\r\\n}\\r\\nvar html = [];\\r\\nhtml.push(\\'<div style=\"padding: 4px 6px;\" oncontextmenu=\"ssMenu(\\'+row+\\');;$e.stopEvent(event);\">\\');\\r\\nvar flagEnableButtons = false;\\r\\nif(!data) { \\r\\n\\t//html.push(\\'*\\');\\r\\n\\thtml.push(\\'<img src=\"svgIcon=#alpha-icon-starSolid:iconSizeable,16{ fill: #363ff2;}\" />\\')\\r\\n} else if(typeof data[row] != \\'undefined\\' && (data[row].__error || data[row].__dirty || data[row].__deleted)) { \\r\\n\\tif(data[row].__new&& !data[row].__error)     {\\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: blue; stroke: blue;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t} else if(data[row].__deleted && !data[row].__error) { \\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: purple; stroke: purple;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t}  else if(data[row].__error) { \\r\\n\\t\\t//html.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:icon,24{ fill: red; stroke: red;}\" />\\');\\r\\n\\t\\thtml.push( \\'<span style=\"color:red;\">ERROR!</span>\\');\\r\\n\\t} else { \\r\\n\\t\\thtml.push( \\'<img src=\"svgIcon=#alpha-icon-chevronDblRight:iconSizeable,16{ fill: orange; stroke: orange;}\" />\\');\\r\\n\\t\\tflagEnableButtons = true;\\r\\n\\t}\\r\\n} else { \\r\\n\\tvar n = (row+1) + _offset;\\r\\n\\thtml.push(\\'<span style=\"opacity:.65;\">(\\' + (n) + \\')</span>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\')\\r\\nif(flagEnableButtons) { \\r\\n\\t\\r\\n\\t{dialog.object}._buttons[\\'SAVE_\\' + this.variableName].setDisabled(false);\\r\\n\\t{dialog.object}._buttons[\\'RESET_\\' + this.variableName].setDisabled(false);\\r\\n}\\r\\nvar _html = html.join(\\'\\');\\r\\n\\r\\n\\r\\n\\r\\nreturn _html;\\r\\n},\\r\\n\\t\\t\\t\"className\": \"spreadSheetHeader\",\\r\\n\\t\\t\\t\"width\": \"\",\\r\\n\\t\\t\\t\"style\": \"padding: 3px; \",\\r\\n\\t\\t\\t\"header\": {\\r\\n\\t\\t\\t\\t\"html\": \"&nbsp;\",\\r\\n\\t\\t\\t\\t\"className\": \"spreadSheetHeader\",\\r\\n\\t\\t\\t\\t\"style\": \"\"\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\t\"suffix\": {\\r\\n\\t\\t\\t\"show\": false\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"_hasNavigationBar\": true,\\r\\n\\t\"columnHeader\": {\\r\\n\\t\\t\"button\": {\\r\\n\\t\\t\\t\"icon\": \"svgIcon=#alpha-icon-filter:iconSizeable,18\",\\r\\n\\t\\t\\t\"indent\": \"26px\",\\r\\n\\t\\t\\t\"onClick\": function(col,ele) {if(!this._msg) {\\r\\n var t = {};\\r\\n  A5.themes.assign(t,this.theme + \\':primary\\',\\'edit\\');\\r\\n this._msg = new A5.Transient({\\r\\n  theme: this.theme,\\r\\n  content: {\\r\\n   type: \\'html\\',\\r\\n   html: \\'<div style=\"padding: 10px; width: 100%; min-width:200px; box-sizing: border-box;\"> \\tType filter value, then press Enter, or click the Filter icon, to search.<br><br> \\t<div style=\"display:flex; flex-direction:row;\"> \\t\\t<input  \\t\\t\\tclass=\"\\'+t.className+\\'\"  \\t\\t\\tplaceholder=\"Enter search text\" \\t\\t\\tstyle=\"flex: 1 1 auto; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  \\t\\t\\t\\t \\t\\t\\tid=\"\\'+this.contId+\\'.FILTER\"\\t \\t\\t\\tssname=\"\\'+this.contId+\\'\"  \\t\\t\\tonkeyup=\"var inputObj = this;var txt = $ga(this,\\\\\\'ssname\\\\\\'); txt = txt.split(\\\\\\'.\\\\\\'); txt = txt[txt.length-2]; var ssObj = {dialog.object}.getControl(txt);ssObj._doSearchSort(event,this);\" /> \\t\\t<div style=\"align-self:center;\"> \\t\\t\\t<img title=\"Clear search\" onclick=\"$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\').value = \\\\\\'\\\\\\'; var name = \\\\\\'\\'+this.variableName+\\'\\\\\\'; var ssObj = {dialog.object}.getControl(name);ssObj._doSearchSort(false,$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\'));\" style=\"cursor:pointer;\" src=\"svgIcon=#alpha-icon-x:icon iconButton\"/>  \\t\\t\\t<img title = \"Do search\" onclick=\"var name = \\\\\\'\\'+this.variableName+\\'\\\\\\'; var ssObj = {dialog.object}.getControl(name);ssObj._doSearchSort(false,$(\\\\\\'\\'+this.contId+\\'.FILTER\\\\\\'));\"      style=\"cursor:pointer;\"  src=\"svgIcon=#alpha-icon-filter:icon iconButton\" /> \\t\\t</div> \\t</div> \\t<br><br><span style=\"font-size:9pt;\">(<b>Tips:</b><br> \\t<ul> \\t\\t<li>You can search for multiple values by entering a comma delimited list of values.</li> \\t\\t<li>To search for a string that contains a comma, use the <span style=\"font-family:Courier New; color:blue;\">{comma}</span> directive in the string.</li> \\t\\t<li>You can use the wildcard character (<span style=\"color:blue;\">%</span>) in your search string.</li> \\t\\t<li>You can use <b>QBF</b> operators (<span style=\"font-family:Courier New;color:blue;\">..,&gt;,&gt;=,&lt;,&lt;=</span>) in your search string.</li> \\t</ul> \\t)</span> </div> \\'\\r\\n   },\\r\\n  layout: \\'dropdown\\',\\r\\n  layouts: {\\r\\n   \\'dropdown\\': {\\r\\n    stretch:\\'min-width\\',\\r\\n    location: \\'dropdown\\'\\r\\n    }\\r\\n   }\\r\\n   })\\r\\n  this._colFilter = { }\\r\\n}\\r\\nvar tEle = this._msg.getElement();\\r\\ntEle.style.zIndex = \\'1000\\';\\r\\nvar val = \\'\\';\\r\\nif(this._colFilter[\\'C\\' + col]) val = this._colFilter[\\'C\\' + col];\\r\\nvar pEle = ele.parentNode;\\r\\nvar iEle = $(this.contId+ \\'.FILTER\\')\\r\\niEle.value = val;\\r\\nthis._msg.show(pEle);\\r\\niEle.focus();\\r\\nthis._msgColumn = col;}\\r\\n\\t\\t},\\r\\n\\t\\t\"suffix\": {\\r\\n\\t\\t\\t\"className\": \"\",\\r\\n\\t\\t\\t\"style\": \"\"\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"cells\": {\\r\\n\\t\\t\"className\": \"\",\\r\\n\\t\\t\"errorClassName\": \"spreadsheetError\",\\r\\n\\t\\t\"editClassName\": \"\",\\r\\n\\t\\t\"stretch\": true\\r\\n\\t},\\r\\n\\t\"onNavigate\": function(row,col,value,ele) {\\r\\nvar name = this.variableName;\\r\\nvar ele = $(name + \\'.MESSAGE\\');\\r\\nele.innerHTML = \\'\\';\\r\\nvar d = this.valueObj[row];\\r\\nif (d && typeof d.__error != \\'undefined\\') {\\r\\n var error = d.__error;\\r\\n ele.innerHTML = \\'<span style=\"margin-top:10px;padding 14px; color:red;\">\\' + error + \\'</span>\\';\\r\\n}\\r\\nvar uxName = {dialog.object}.dialogId;\\r\\nvar vbName = this.variableName;\\r\\nvar ele = $(uxName + \\'.RESET_\\' + vbName);\\r\\nif(d && (typeof d.__dirty != \\'undefined\\' || typeof d.__deleted != \\'undefined\\')) {\\r\\n ele.style.display = \\'\\';\\r\\n} else {\\r\\n ele.style.display = \\'none\\';\\r\\n}\\r\\nif(row || row == 0) {\\r\\n if(d) {\\r\\n  var ele = $(uxName + \\'.DELETERECORD_\\' + vbName);\\r\\n  if(row>=0) {\\r\\n   var ele = $(uxName + \\'.DELETERECORD_\\' + vbName);\\r\\n   if(ele) ele.style.display = \\'\\';\\r\\n  }\\r\\n }\\r\\n if(typeof d == \\'undefined\\') {\\r\\n  var ele = $(uxName + \\'.DELETERECORD_\\' + vbName);\\r\\n  if(ele) ele.style.display = \\'none\\';\\r\\n  var ele = $(uxName + \\'.NEWRECORD_\\' + vbName);\\r\\n  if(ele) ele.style.display = \\'none\\';\\r\\n } else {\\r\\n  var ele = $(uxName + \\'.NEWRECORD_\\' + vbName);\\r\\n  if(typeof d.__dirty != \\'undefined\\' ) {\\r\\n   if(ele) ele.style.display = \\'none\\';\\r\\n  } else {\\r\\n   if(ele) ele.style.display = \\'\\';\\r\\n  }\\r\\n }\\r\\n}\\r\\nvar ele = $(uxName + \\'.DELETERECORD_\\' + vbName); if(ele) ele.style.display = \\'none\\';\\r\\nvar ele = $(uxName + \\'.RESET_\\' + vbName); if(ele) ele.style.display = \\'none\\';\\r\\nvar ele = $(uxName + \\'.NEWRECORD_\\' + vbName); if(ele) ele.style.display = \\'none\\';\\r\\nvar flagDeleted = false;\\r\\nvar flagNewClean = false;\\r\\nvar flagNewDirty = false;\\r\\nvar flagExistingDirty = false;\\r\\nvar ele = $(\\'pre2\\'); ele.innerHTML = \\'row: \\' +row;\\r\\nvar ele = $(\\'pre3\\'); ele.innerHTML = typeof d;\\r\\nif(d) {\\r\\n var ele = $(\\'pre3\\'); ele.innerHTML = \\'__dirty: \\' + d.__dirty\\r\\n var ele = $(\\'pre4\\'); ele.innerHTML = \\'__new: \\' + d.__new\\r\\n var ele = $(\\'pre5\\'); ele.innerHTML = \\'__deleted: \\' + d.__deleted\\r\\n if(typeof d.__deleted != \\'undefined\\') flagDeleted = true;\\r\\n if(typeof d.__dirty != \\'undefined\\' && typeof d.__new != \\'undefined\\') flagNewDirty = true;\\r\\n if(typeof d.__dirty != \\'undefined\\' && typeof d.__new == \\'undefined\\') flagNewExisting = true;\\r\\n if(typeof d.__dirty != \\'undefined\\' && typeof d.__new == \\'undefined\\') flagExistingDirty = true;\\r\\n if(typeof d.__dirty == \\'undefined\\' && typeof d.__new != \\'undefined\\') flagNewClean = true;\\r\\n} else {\\r\\n var ele = $(\\'pre3\\'); ele.innerHTML = \\'d not defined\\';\\r\\n if(true) flagNewClean = true;\\r\\n}\\r\\nvar ele = $(\\'pre4\\'); ele.innerHTML = \\'flagDeleted: \\' + flagDeleted;\\r\\nvar ele = $(\\'pre5\\'); ele.innerHTML = \\'flagNewClean:\\' + flagNewClean;\\r\\nvar ele = $(\\'pre6\\'); ele.innerHTML = \\'flagNewDirty:\\' + flagNewDirty;\\r\\nvar ele = $(\\'pre7\\'); ele.innerHTML = \\'flagExistingDirty:\\' + flagExistingDirty;\\r\\nif( (row || row == 0) && !flagNewClean)  var ele = $(uxName + \\'.DELETERECORD_\\' + vbName); if(ele) ele.style.display = \\'\\';\\r\\nif(flagDeleted || flagExistingDirty ) var ele = $(uxName + \\'.RESET_\\' + vbName); if(ele) ele.style.display = \\'\\';\\r\\nif(!flagNewClean) var ele = $(uxName + \\'.NEWRECORD_\\' + vbName); if(ele) ele.style.display = \\'\\';\\r\\nvar ele = $(\\'pre2\\'); ele.innerHTML = \\'row navigate\\' + new Date();\\r\\nvar that = this\\r\\nsetTimeout(function() {\\r\\n},100);\\r\\n},\\r\\n\\t\"pickers\": {\\r\\n\\t\\t\"button\": {\\r\\n\\t\\t\\t\"icon\": \"svgIcon=#alpha-icon-chevronDown:icon\"\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}',\n\tcss: '.ssRowFocus >div >input {background-color:#f7f8fa !important;}\\r\\n\\r\\n\\r\\n.spreadSheet {\\r\\n\\tdisplay:table;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tborder-left: 1px solid #ddd;\\r\\n}\\r\\n\\r\\n.spreadSheet > div {\\r\\n\\tdisplay: table-row;\\r\\n}\\r\\n\\r\\n\\r\\n.spreadSheet > div > div {\\r\\n\\tpadding: 0px;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-right: 1px solid #ddd;\\r\\n\\tdisplay: table-cell;\\r\\n}\\r\\n\\r\\n.spreadSheet input {\\r\\n\\tborder: 2px solid transparent;\\r\\n\\tmargin: -1px;\\r\\n\\tbackground:transparent;\\r\\n\\toutline:none;\\r\\n\\tpadding: 3px;\\r\\n}\\r\\n.spreadSheet input:focus {\\r\\n\\tborder-color: #3ba2f6;\\r\\n}\\r\\n\\r\\n.spreadSheet > div > div.spreadSheetHeader {\\r\\n\\tfont-size: 75%;\\r\\n\\tfont-weight: bold;\\r\\n\\tpadding: 4px 6px;\\r\\n\\tbackground: #eee;\\r\\n}\\r\\n.spreadSheet .spreadsheetError input {\\r\\n\\tcolor: #e01a1a;\\r\\n\\tborder: 1px solid #e01a1a;\\r\\n\\tpadding: 4px;\\r\\n}\\r\\n.spreadSheet .spreadSheetError input:focus {\\r\\n\\tborder: 2px solid #e01a1a;\\r\\n\\tpadding: 3px;\\r\\n}\\r\\n\\r\\n\\r\\n.spreadSheetReorderCol {\\r\\n\\tfont-size: 75%;\\r\\n\\tfont-weight: bold;\\r\\n\\tpadding: 4px 6px;\\r\\n\\tbackground: rgba(200,200,200,.75);\\r\\n\\tborder: 1px solid #ddd;\\r\\n\\tborder-top: none;\\r\\n}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now',\n\tcolumnAddIcon: 'svgIcon=#alpha-icon-add:icon,24',\n\tcolumnButtonsIndent: '26px'\n}",
                        "subtype": "SpreadsheetInput",
                        "class": "",
                        "style": ""
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 13,
                        "color": "",
                        "icon": "$$format.border.edge.all",
                        "displayText": "[ss]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue} 13{T=.3}{C=Black,White}{B=White,Light Blue} 13{T=.3}{C=Black,White}{B=White,Light Blue}{Data=f6072d8e-95df-4688-b462-b298ea7b0e60}{I:'$$format.border.edge.all'} [ss]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['SS'] = [[dialog.dataBoundCustomControlData.ss]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['SS'] = [[dialog.dataBoundCustomControlSettings.ss]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['SS'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['SS'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['SS'] }",
                        "_jsOnChangeFunction": "function onChange_ss_f6072d8e95df4688b462b298ea7b0e60(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SS');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'SS': {info: {controlType: 'SpreadsheetInput'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 75%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.SS\" for=\"{grid.componentname}.V.R{grid.rownumber}.SS\" title=\"\" class=\"[class.dialogFieldLabel]\" style=\"display:block;\">Ss1</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.SS\" name=\"V.R{grid.rownumber}.SS\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SS.CONTROL\"  class=\"{grid.componentName}_SS\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><div  style=\"height:1in; font: 0pt;\"></div><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "parentIsCollapsed": false
            }
        ],
        "builderType": "Dialog2",
        "guid": "7dd7c76d-45e7-4876-8b34-8bbe8d34c2a9",
        "componentName": "GenericSQLTableDataEditor",
        "componentFilename": "C:\\a5v12\\packages\\AJAX_webComponents.WebProjects\\spreadsheet.WebProject\\GenericSQLTableDataEditor.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": false,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": true,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "153885ff_403d_429e_ab13_62fca6b719bd\n",
        "designPaneIndex": 1,
        "masterPaneC": "controls",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 12,
        "clientSideEventIndexC": "12",
        "lastControlSelected": "insert_layout_directive_hyperlink",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5685",
        "addinBuildNumberHighestUsed": "5685",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "369",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.STATICTEXT_1\" title=\"\"  class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"   ><div id=\"div1\">This component allows you to maintain the data in a SQL table.<br>\nSelect the connection string and the table you want to edit. <br>\nYou can optionally select the fields from the table to display.<br>\nOnce you have selected a connection string and a table, you can filter the records by clicking on the <b>Add new search field</b> button.\n</div></div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.CONNECTIONSTRING\" for=\"{grid.componentname}.V.R{grid.rownumber}.CONNECTIONSTRING\" title=\"\" class=\"label\" style=\"display:block;\">Connectionstring</label>\n<!--LblE-->\n\t<!--FldS--><select \t\n\t\tsize=\"1\" \n\t\tclass=\"edit \"  \n\t\tname=\"V.R{grid.rownumber}.CONNECTIONSTRING\" \n\t\ttitle=\"\"\n\t\tstyle=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"\n\t\tid=\"{grid.componentname}.V.R{grid.rownumber}.CONNECTIONSTRING\"  \n\t\t onChange=\"var tfunc = function() {onChange_connectionstring_153885ff403d429eab1362fca6b719bd.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"  \n\t\t\n\t\t\n\t\t >\n{dialog.dropdownboxchoices.CONNECTIONSTRING}\n</select>\n<!--FldE-->\n</div>\n<div class=\"A5CWLayout\" style=\"width: 2in\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.TABLE\" for=\"{grid.componentname}.V.R{grid.rownumber}.TABLE\" title=\"\" class=\"label\" style=\"display:block;\">Table</label>\n<!--LblE-->\n\t<!--FldS--><select \t\n\t\tsize=\"1\" \n\t\tclass=\"edit \"  \n\t\tname=\"V.R{grid.rownumber}.TABLE\" \n\t\ttitle=\"\"\n\t\tstyle=\"width: 100%; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"\n\t\tid=\"{grid.componentname}.V.R{grid.rownumber}.TABLE\"  \n\t\t onChange=\"var tfunc = function() {onChange_table_533b60ef71c44e74aab41d88887d15dd.call(this,{dialog.object});;}; var tscope = this; setTimeout(function() { if(tscope) { tfunc.call(tscope);} delete tscope;},1 );\"  \n\t\t\n\t\t\n\t\t >\n{dialog.dropdownboxchoices.TABLE}\n</select>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.FIELDLIST\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"A5CWLayout \"  style=\"width: 100%; \"  ><!--DIV for Container control-->\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.SEARCH\" for=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH\" title=\"\" class=\"label\" style=\"display:block;\">Search</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH\" name=\"V.R{grid.rownumber}.SEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCH.CONTROL\"  class=\"{grid.componentName}_SEARCH\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<a id=\"{dialog.componentName}.V.R{dialog.rownumber}.HYPERLINK_1\" title=\"\" href=\"#\"  class=\"link\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"  onClick=\"$e.stopEvent(event);\"  >(Optional) Select fields....</a>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.CONTAINER_FIELDSLIST\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"A5CWLayout \"  style=\"display: none; width: 100%; \"  ><!--DIV for Container control-->\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.STATICTEXT_2\" title=\"\"  class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\"   >Select the fields you wish to view, then click the <b>Refresh</b> button.</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.FIELDS\" for=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS\" title=\"\" class=\"label\" style=\"display:block;\">Fields</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS\" name=\"V.R{grid.rownumber}.FIELDS\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.FIELDS.CONTROL\"  class=\"{grid.componentName}_FIELDS\" style=\"overflow: auto; width: 100%; height: 3in; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<button type=\"button\" id=\"{dialog.componentName}.V.R{dialog.rownumber}.BUTTON_1\"    ></button>\n</div>\n<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n\n<div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n<!--breakbegin--><br  id=\"{dialog.componentname}.V.R1.FIELDLIST.BREAK\"  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 75%\" >\n\t<!--LblS--><label id=\"{grid.componentname}.LBL.R{grid.rownumber}.SS\" for=\"{grid.componentname}.V.R{grid.rownumber}.SS\" title=\"\" class=\"label\" style=\"display:block;\">Ss1</label>\n<!--LblE-->\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.SS\" name=\"V.R{grid.rownumber}.SS\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SS.CONTROL\"  class=\"{grid.componentName}_SS\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><div  style=\"height:1in; font: 0pt;\"></div><!--breakend-->\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:edit.base.className|class.dialogSelect]=*if_error(p.edit.base.className,\"[class.dialogSelect]\")\n[theme:listBox.base.className]=*if_error(p.listBox.base.className,\"\")\n[theme:listBox.base.item.className]=*if_error(p.listBox.base.item.className,\"\")\n[theme:listBox.base.item.hoverClassName]=*if_error(p.listBox.base.item.hoverClassName,\"\")\n[theme:ux.base.labelClassName]=*if_error(p.ux.base.labelClassName,\"[class.dialogFieldLabel]\")\n[theme:edit.base.className]=*if_error(p.edit.base.className,\"[class.gridNavigatorInput]\")\n[theme:edit.primary.className|{dialog.style}Edit]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"{dialog.style}Edit\")\n[theme:menu.base.className]=*if_error(p.menu.base.className,\"\")\n[theme:menu.base.innerClassName]=*if_error(p.menu.base.innerClassName,\"\")\n[theme:menu.base.item.className]=*if_error(p.menu.base.item.className,\"\")\n[theme:menu.base.item.hoverClassName]=*if_error(p.menu.base.item.hoverClassName,\"\")\n[theme:menu.base.item.selectedClassName]=*if_error(p.menu.base.item.selectedClassName,\"\")\n[theme:button.base.className]=*if_error(p.button.base.className,\"[class.gridButton]\")\n[theme:grid.base.grid.dataClassName|class.dialogLabel]=*if_error(p.grid.base.grid.dataClassName,\"[class.dialogLabel]\")\n[theme:edit....]=*if_error(*if_error(p.edit....,p.edit.base.base.base.base),\"[class.gridNavigatorInput]\")\n[theme:edit.primary.className]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"\")\n[theme:edit.primary.className|class.dialogInput]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"[class.dialogInput]\")\n[theme:edit.primary.className|editPrimary]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"[editPrimary]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\nFIELDLIST: ['search','container:CONTAINER_FIELDSLIST'],\nCONTAINER_FIELDSLIST: ['fields']\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "_jsOnChangeFunctions": "function onChange_connectionstring_153885ff403d429eab1362fca6b719bd(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('CONNECTIONSTRING'); data = '__cs=' + this.value; _dlgObj.ajaxCallback('','','xb_getTables','',data);};",
            "_jsOnClickFunctions": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": true,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": true,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": true,
            "__freeformLayoutsJS": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: 'ce210f92-bcac-4050-9667-ceb16a24a615',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tbeforePrepare: function(e) {\n{Dialog.object}.setControlDisplay('table',false)\nvar ele = {dialog.object}.getPointer('FIELDLIST')\nele.style.display = 'none';\n\t\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.CONNECTIONSTRING=\"\"\nvalue.TABLE=\"\"\nvalue.SEARCH=\"\"\nvalue.FIELDS=\"\"\nvalue.SS=\"\"",
            "setValueProperties2": "value.CONNECTIONSTRING=\"\"\nvalue.TABLE=\"\"\nvalue.SEARCH=\"\"\nvalue.FIELDS=\"\"\nvalue.SS=\"\"",
            "setValueUnformattedProperties": "value.CONNECTIONSTRING=convert_type(\"\",\"C\")\nvalue.TABLE=convert_type(\"\",\"C\")\nvalue.SEARCH=convert_type(\"\",\"C\")\nvalue.FIELDS=convert_type(\"\",\"C\")\nvalue.SS=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentValues": "",
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": true,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/core.js\"></script>\n\n<script type=\"text/javascript\" src=\"javascript/utilCore.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/utilDOM.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/utilIcon.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/utilTemplate.js\"></script>\n\n<script type=\"text/javascript\" src=\"javascript/AjaxFormLibrary.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/aui.js\"></script>\n<script type=\"text/javascript\" language=\"javascript\" src=\"javascript/a5_html_calendar.js\"></script>\n<script type=\"text/javascript\" language=\"javascript\" src=\"javascript/a5_html_layout.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/gridCompHelper.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/dialogCompHelper.js\"></script>\n\n<script type=\"text/javascript\" src=\"javascript/customComponentCompHelper.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "bumpFilename": false,
        "A5SaveTimeStamp": "20231008163856126",
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "showPulseEffect": true,
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "suppressJavascriptCodeWarning": false,
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "restorePanelSizes": true,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "simulatedcultureNumber": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": false,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": false,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "populateArgumentsFromQueryString": false,
        "__LPhostName": "Chrome",
        "_style_isInherited": false,
        "_analyzecontainersjs": true,
        "__idinternalCurrentControl": "153885ff_403d_429e_ab13_62fca6b719bd",
        "__nameCurrentControl": "connectionstring",
        "_containerstorecalc": "",
        "_repeatingSectionPendingRecalc": "\n",
        "cachecomponent": false,
        "_crcXbEvents": 4294909316,
        "_crcJSFunctions": 43605,
        "_crcJSEvents": 4294936768,
        "_treeErrors": "",
        "__flagHasMacro": false,
        "__staticMode": "",
        "__componentnotfound": false,
        "__flagRecursive": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "__isStaticHTML": false,
        "_passwordReset": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "_flagDoTreeview": true,
        "_move": {
            "index": 11,
            "targetIndex": 10,
            "count": 1
        },
        "livePreview_permissions_friendly": "",
        "showJavascriptActions": false,
        "showResponsiveLayoutHelp": false,
        "favoriteControls": "",
        "a_UnboundActionJavascript": [
            {
                "idInternal": "",
                "name": ""
            }
        ],
        "_choices": "base\nprimary\n",
        "__allowCascadingRecalc": true,
        "versionNumber": 1,
        "_flagForceRecalcChildren": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC7XSTUvDQBAGYM+C/6HmXnPylhakWiq0FMT7Mm6GdOPsB7OzbfLvjeSgqJeQ9foOPPPBVFGzCbKQPuCqEOykbOEMY1osIutV8RWU2jPetbFYV+WYrG+uq2lEEkObPMzj8ZBBedbeZWBe0QYCmbvXQwvd1rPdmzcG7mdqkMxEgcA1CRr8zvzh3quTWFIaCF0N/K9NCHqfZOYlGjb1xtuwQwo4dd6fWG2AfJON0ymKt5+cd+gkmzscMDH9Qm6Xew/1UyfIDmh8NINxOdSUYhy+WCPIS3JiLCqlY4zSE8oF4T0qdfUBdvclOTQEAAA=",
                    "CSS_Link": "*gzip:H4sIAAAAAAAAC81abU/bShber1Tqf5iFogsrHJzkhoJduKJAb5G4u1ekd7vSalVN7HEyF8fjHU8INOK/75kX22PHDgn0wwoVPGfOnLc585x56YdMPMYEiceUnG4L8iAOgyzbPnv7ZiKmMVogZ05Gd1Q4AqfOhI4nMfwTTsBixj3ExyO85x6on32/4J1lhDsZiUkgPJSwhEDXNHMEmwUTBweCssTQn96+oRHHU4IWjYOlQZKpcz4IWCIwTQhHiyhmWHgxiYSf4jCkydhz0wfDd/H1Bj+ymUCLvA/9DJ1ID0JqFBqxByej31XviPEQVAJJmsm+O+2dWXufsb6lX5v2K6fhZxqSK84Zv2AxMrSivQhplsb40dNBK0fdsrliuoYo1Lgs0TjL+dDKcTSJIZDOKGbBnV9R8k9K5r+xkJS8DUxXIRVVppohwHOdFFyrpK85cFljg1mXlIvHVaIvYoKXolDTnmkprVLXG1TTVJhC5Fx8gZxGC72COAn9CBJb5gzxjlNRZfucLzjIeck1J7LhjVjcPoymtvARDu7GnM2S0NuJoghHGM14vPcTneIxyQ7fQXIevpNSDo8fjg/fRTSOD/9IdwefLikeswTH3tcJFWS3f77b6/cGg93eRa9/on930mTcwQMl6qd9X6e7100fUMZiGqKd6PjYn2I+pgms/dTrwTLM16T8bvHgOklnlQAtCZZELVcSayOtmC2J6DWJKKFjqFCHhB9nQsj1wlIcUPHodQY+BEaAABynE7xn6KcDAD098jq5pxkdxeQG0hItrKjXMVLzKzCSWQJohgL5V8KFmABMFUFB0jA0p6GYmO+Jnn7dYPeEg5i5hyY0DEniowLvVL/xTjeM/xpWlKk0lp7lQ7VVNzQTv4LZ6WeCgT1Di+8OTULy4A38rZRlVCE3JzEW9F5ltP6RqJuj8znEPrkgiZBAXUVgkwoSgT08EyzPDa68UhSJ9w6WIjwUKCGtWP3UoPcGRLdobVGyshw8oQYdtzq3nnHN1qFUr/KjPYJnyKpoB6jZ4eeYtMXPcdkai1q7UuUqLktnWbhLRESVEpTXZguyL2mGYTmF5SJEncFTkW6f5ACI5A0ekVhqRosyQVGRoVsW+qBeudArw6+TDGryCiGrx1AJOioCbRx6M7OSRaYL5gRLC3RilTajv9JpyrjAiSiSpSKnTTIkKaNyUh1yD5Ob6eVvuYhHAIYzATQryP6W0jxwd/0tlc+oKwPnb+kVZFpIcJxkEeNTT39CsMgedB04g+7uPgiRRKOn4EV9151mBwg05J8F3mlC0wSpxpKPECoLK5VV2nL1VTjUNaY0mtp13d399VXmYX214qP0Yb+Yy99xQuJbomKwQGXpMJtsq350ugNdQSzgPQ8CwBII8xcqYvKPRCVDjRhFDdRyhRWLUq9GUyuQVchPTk6Kyo1k6VbwFhKQh63dfDDjmTwWmLTL8R0Km2BTPRDZYp6qHshAQO1sVm8QUwVaKWsQbq92p1es9i949IWlJjSmYUKiW62hsM8Mq+3KzbBNMwvG3vZsELyq7WhR89fplmILYt/2+aMilm6bdum5JrzG+R/raG5wngPWZFdAseKlLEelj6pVeiibm+Z5Q169xiltXzF9JlSV2TM06ZZx3FCsegiSVEktXdXN0lfV3tRZo0/jfNuyeo37xujCf62p4r4m9WvLVYJBNVFtioyq3VZqVuJHBXj8cichxeMkXGOcW1lcMAb+WKvLEKzlpSnllDTsLTaapWcwprLXedm0zeVZz8mghBHJMec4bXD5JVgEY4ckxaCd8TLWygh7sdcczw88fdsd1xwd5ZdAmFMcVxXJ5BgGnMXxOjGvhGldx5rDufYia5rQigsqn/8PfbCB6VknrORvKLZNGN2IZc3lauWOxt7OInN0R5Wzu9zg7mtrv8IRl83Rwtz9aT9xSGeZjpN1t7fUZ0uQR/8mFHFd176GQTu9Xs8vLewVlwt1C3uDcpNY3+Z5E3n+b97sWX0VYKrS9S6oSjPls0rMC01NbL6b0OTFUjaBr4Tnl2XKh99IMrsWZIqWmCsHPxyz8e1wCS1KgAhBNczyThAEPlLHSIMTA+sorg8xxRTlYj8xpm4mbK6um5bH8POETm+ZgJ36iavDaxEuLr7WaN3jOhdQgK3tqLviWGQstfX9Gw+cYEKCOxKesuQ/ELjyRMEVz96JG5LxfsNYMGKN4U7LePBijdHA1TZ6TfXLEoZznNZcQWfob16MMwHiaByu50eDHDkvz4t6XhIYvY5Ja/hmkuV5Yc2yVteGFySeEgrWGBMMv0GkVu6K7Q3XC8XpWJdA+VWAnFuTV08aKT6ivJS/0UjbMOtkbh2hPxyqB7Az9Q3xuoMNX0wAYE63t2VMT7dVfzYhRGzXn8nQhJPodBs+D88ldmtZHWj/MpqB0gAQX3zrHx3LB7UPWcAp7Fg4mQJi0ogmc8bvoCqnnNxTMreF/4nvsWbfRhkPllX8uawBPFEjznJHNrD+WzbBnIRDxbzSC+lHy4thhwYsGdLvRFZhtHj7BiGoDIIGOM6vQqc0DGPiy658b6euSyXB3HQXbfkW4enyKZuZ4OyOGIK6sJbqypovecqq+n5Q8jxritHcO4LEtE1TBCVm8ce/fr+9ur36+yX8ujy/uT4fPn0bXp3fXnxGnf/OCH/8KCOl7k9Deq81VnZlm4mRN/FaSH01C+mubbW8w/Ir6mp3hi/QbDlR6FeKHc7mLxfYLjYgcew3zRJAh/8jYmkZUIWTeiRf6VyTi1FMNrXZvIGpZQCjHdg7ziVwScIU9i15xrru6nAMUSeTj8KfWDDLChNpKX3puhHtRO+j4wivmUFSAeAXDocSYprmVtnccsYLw9DuNtfN1f71lb84axvlNC1k1wBE7ejT7lF+Z77M0LQA1jfRnkFz4ijfNlXpht0zgalTCWNeAtVJsDrp3hIzmwmJM+Y8V/G+/3yu1U30IpV4lqFFmvVHuBcdvWxabLp+qzRrpbyXfz/QqGi/myP1cF7x6WeI2lFDWHYIIRvYZhqqzur/gGHNUO4xcbu4i3170qzEsHqrb4ubGjGsGbE8B3ayNOrdaKZviRKq/v/Kj50E9fQBGHeAyl8ulPb9thjWVl95fyydKXd6H4qPgvSX/wHqf25RCCUAAA==",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVAoKM0pTlWyAwC29a3YGgAAAA==",
                    "dialog2_html": "*gzip:"
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}