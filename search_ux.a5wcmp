{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "LocalCss": "<style type=\"text/css\">\n\n\n\n</style>",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "JavaScriptFunctionDeclarations": "\n\n\n\n",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "XbasicFunctionDeclarations": "function getSchemaAjaxCallback as c (e as p)\n\tdim schemaInfo as p\n\tdim info as c\n\tschemaInfo = require(\"schemaInfo\")\n\tinfo = schemaInfo.getConnectionSchemaJSON(\"conn\", e.tableName)\n\t\n\tgetSchemaAjaxCallback = \"{dialog.object}.stateInfo.schema = \" + info + \";\"\n\t\nend function\n\nfunction getAllDataForTable as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tgetAllDataForTable = stdQueries.getTableData(e)\nend function\n\nfunction updateData as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tupdateData = stdQueries.updateTableData(e)\n\t\nend function\n\nfunction countRows as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tcountRows = stdQueries.countRowsWithFilter(e)\nend function\n\nfunction fetch as c (e as p)\n\tdim stdQueries as p\n\tdim result as c\n\tstdQueries = require(\"standardQueries\")\n\tresult = stdQueries.performFetch(e)\n\tfetch = \"{dialog.object}.stateInfo.fetchResult = \" + result + \";\"\n\t\nend function",
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "beforePrepare": "",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "MM/dd/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "info": {
            "createdBy": "lukes",
            "dateCreated": "2024-4-25",
            "dateLastEdited": "2024-7-26",
            "revisionnumber": 126
        },
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": ""
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>",
                "idInternal": "72228034-2134-4681-ba14-4d2ac137f203",
                "crc": "4294912487",
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "formbox",
                    "variableName": "SearchForm",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Jform1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "formbox": {
                        "height": "3in",
                        "width": "4in",
                        "fillPanelContainer": true,
                        "definitionJSON": "{\n\t\"_state\": {\n\t\t\"showPane\": {\n\t\t\t\"css\": false,\n\t\t\t\"javascript\": false,\n\t\t\t\"items\": true,\n\t\t\t\"preview\": true\n\t\t},\n\t\t\"tabPage\": \"FormLayout\",\n\t\t\"flagShowLineNumbers\": false,\n\t\t\"LayoutSelected_n\": 1,\n\t\t\"fieldSelected_n\": 0,\n\t\t\"layoutGenieFieldSelected_c\": \"\",\n\t\t\"fieldselected_c\": \"\",\n\t\t\"itemSelected_c\": \"\",\n\t\t\"groupSelected_c\": \"\",\n\t\t\"cssMode\": 1,\n\t\t\"jsmode\": 1,\n\t\t\"selected_javascriptLocal_c\": \"\",\n\t\t\"flagPreviewOpen\": false\n\t},\n\t\"formview\": {\n\t\t\"datasource\": {\n\t\t},\n\t\t\"formProperties\": {\n\t\t\t\"hasMultipleLayouts\": false,\n\t\t\t\"theme\": \"{dialog.style}\",\n\t\t\t\"item\": {\n\t\t\t\t\"className\": \"listItem\",\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t},\n\t\t\t\t\"description\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"javascript\": {\n\t\t\t\t\"onChange\": \"\",\n\t\t\t\t\"onInitialize\": \"\"\n\t\t\t},\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"namedLayoutsJSON\": \"\"\n\t\t},\n\t\t\"fields\": [],\n\t\t\"items\": [],\n\t\t\"groups\": [],\n\t\t\"layouts\": [\n\t\t{\n\t\t\t\"layoutName\": \"default\",\n\t\t\t\"defaultLayout\": false,\n\t\t\t\"layoutDataType\": \"Data\",\n\t\t\t\"layoutDefinition\": \"\",\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"defaultTemplate\": \"\",\n\t\t\t\"postProcessJavascript\": \"\",\n\t\t\t\"layoutType\": \"Genie\",\n\t\t\t\"last_layoutGenieFieldSelected_c\": \"\",\n\t\t\t\"itemsArray\": []\n\t\t}],\n\t\t\"javascriptLocal\": [],\n\t\t\"css\": \"\",\n\t\t\"Javascript\": \"\"\n\t}\n}"
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "",
                        "icon": "$$control.form",
                        "displayText": "[SearchForm]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "_jsOnChangeFunction": "function onChange_SearchForm_7222803421344681ba144d2ac137f203(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SEARCHFORM');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "listview": {
                        "allchildren": ""
                    }
                },
                "precalc": {
                    "columnInfo": "'SEARCHFORM': {info: {controlType: 'formbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>",
                "idInternal": "9bd03259-4af8-4e24-8ed7-8c025938bf3b",
                "crc": "4294915120",
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "AdvancedSearch",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Advanced List Search1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "customControl": {
                        "height": "100%",
                        "width": "500px",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\tfields: {\n\t\tfirstname: {\n\t\t\tlabel: '',\n\t\t\tcontrol: {\n\t\t\t\ttype: 'combolist',\n\t\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\t\thtml: '',\n\t\t\t\t\tvalue: ''\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t},\n\tbuttons: {\n\t\tadd: 'Add new search field...',\n\t\tremove: '<img src=\"svgIcon=#alpha-icon-trash:icon\" />',\n\t\tfilter: '<img src=\"svgIcon=#alpha-icon-filter:icon\" />',\n\t\tdate: '<img src=\"svgIcon=#alpha-icon-calendar:icon\" />',\n\t\tlist: '<img src=\"svgIcon=#alpha-icon-chevronDown:icon\" />',\n\t\tnumber: {\n\t\t\tplus: '<img src=\"svgIcon=#alpha-icon-add:icon\" />',\n\t\t\tminus: '<img src=\"svgIcon=#alpha-icon-remove:icon\" />'\n\t\t},\n\t\tsave: '<img src=\"svgIcon=#alpha-icon-save:icon\" />Save query',\n\t\tload: '<img src=\"svgIcon=#alpha-icon-load:icon\" /> Load query',\n\t\trun: '<img src=\"svgIcon=#alpha-icon-filter:icon\" /> Run query',\n\t\tmenu: '<img src=\"svgIcon=#alpha-icon-ellipsisVertical:icon\" />',\n\t\tdaterangepicker: {\n\t\t\tok: '&nbsp;OK&nbsp;',\n\t\t\tcancel: 'Cancel'\n\t\t},\n\t\tcancel: '<img src=\"svgIcon=#alpha-icon-x:icon\" /> Cancel',\n\t\tclearsearch: '<img src=\"svgIcon=#alpha-icon-filterOff:icon\" /> Clear search',\n\t\tstringloadquery: 'Specify saved query to load',\n\t\tstringsavequery: 'Specify name for query',\n\t\tstringquerynamewatermark: 'Query name'\n\t},\n\tsearchOptions: {\n\t\tdisplayDebuggingInfo: false,\n\t\tloadQuery: false,\n\t\tsaveQuery: false,\n\t\tplaceHolder: '',\n\t\tuniqueKey: '',\n\t\tloadType: 'All',\n\t\tlistName: 'dummy_list'\n\t},\n\tsearchMode: 1,\n\tlistName: 'dummy_list',\n\tsubtype: 'AdvancedListSearch',\n\tvariableName: '',\n\tsettingsJSON: '{\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"inputId\": \"{variablename}\",\\r\\n\\t\"variableName\": \"{VARIABLENAME}\",\\r\\n\\t\"theme\": \"{dialog.style}\",\\r\\n\\t\"autoRefreshOnResize\": false,\\r\\n\\t\"datasource\": {\\r\\n\\t\\t\"lowLevel\": \"Data\",\\r\\n\\t\\t\"type\": \"Static JSON\"\\r\\n\\t},\\r\\n\\t\"multiple\": true,\\r\\n\\t\"selectionMode\": \"default\",\\r\\n\\t\"loopNavigate\": false,\\r\\n\\t\"loopNavigateNullSelection\": true,\\r\\n\\t\"allowNullSelection\": false,\\r\\n\\t\"allowTextSelection\": false,\\r\\n\\t\"allowNullDeselection\": false,\\r\\n\\t\"autoRefresh\": false,\\r\\n\\t\"allowAnyValue\": true,\\r\\n\\t\"captureFocus\": false,\\r\\n\\t\"scroll\": false,\\r\\n\\t\"parseValue\": function() {this.data._parsed = [];\\r\\nvar val = this.value[0];\\r\\nif(val){\\r\\n if(val != \\'\\') {\\r\\n  try {\\r\\n   var obj = JSON.parse(val);\\r\\n   this.data._parsed = obj;\\r\\n  } catch(err){\\r\\n   console.log(\\'ERROR: query builder \"\\'+this.variableName+\\'\" could not parse value.\\');\\r\\n  }\\r\\n }\\r\\n}\\r\\nthis.refresh();},\\r\\n\\t\"addItem\": function(v) {var f = this.data.fields[v];\\r\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\r\\nif(typeof f.defaults != \\'undefined\\'){\\r\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\r\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\r\\n}\\r\\nthis.data._parsed.push(d);\\r\\nthis.setValue(JSON.stringify(this.data._parsed));},\\r\\n\\t\"showPicker\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'\\';\\r\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\r\\n this._pickerVBEle.style.display = \\'\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n}\\r\\nif(type == \\'add\\' || type == \\'filter\\') {\\r\\n this._pickerEle.style.width = \\'300px\\';\\r\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\r\\n this._pickerEle.style.width = \\'\\';\\r\\n} else {\\r\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\r\\n}\\r\\nthis._pickerEle.style.display = \\'\\';\\r\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\r\\nsetTimeout(function(){\\r\\n this._pickerShown = true;\\r\\n}.bind(this),0);\\r\\nthis._pickerType = type;\\r\\nthis._pickerIndex = index;},\\r\\n\\t\"hidePicker\": function() {this._pickerEle.style.display = \\'none\\';\\r\\nthis._pickerShown = false;},\\r\\n\\t\"pick\": function(v) {if(this._pickerType == \\'add\\'){\\r\\n this.addItem(v);\\r\\n} else if(this._pickerType == \\'filter\\'){\\r\\n this.data._parsed[this._pickerIndex].op = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n} else{\\r\\n this.data._parsed[this._pickerIndex].value = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n}},\\r\\n\\t\"suggest\": function(index,data) {if(this._pickerIndex != index){\\r\\n this.hidePicker();\\r\\n}\\r\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\r\\nif(!ele) return false;\\r\\nif(data){\\r\\n if(data.length == 0){\\r\\n  this.hidePicker();\\r\\n } else{\\r\\n  this._picker.layout = \\'list\\';\\r\\n  this._picker.populate(data);\\r\\n  this._picker.setValue(ele.value);\\r\\n  try{\\r\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\r\\n   if(f.data.cacheData) f.data = data;\\r\\n  }catch(e) { };\\r\\n }\\r\\n} else{\\r\\n this._picker.layout = \\'loading\\';\\r\\n this._picker.refresh();\\r\\n}\\r\\nif(!this._pickerShown){\\r\\n this.showPicker(ele,\\'suggest\\',index);\\r\\n}},\\r\\n\\t\"_suggestGet\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\r\\nif(ci._pickerShown){\\r\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\r\\n if(ele){\\r\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\r\\n  if(f){\\r\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\r\\n    if(f.control.data.constructor == Array) {\\r\\n     var _d = f.control.data;\\r\\n     var val = ele.value.toLowerCase();\\r\\n     var data = [];\\r\\n     for(var i = 0; i < _d.length; i++) {\\r\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\r\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\r\\n      }\\r\\n     }\\r\\n     ci._picker.layout = \\'list\\';\\r\\n     ci._picker.populate(data);\\r\\n     return\\r\\n    } else {\\r\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\r\\n      var val = ele.value;\\r\\n      var o = {};\\r\\n      var data = [];\\r\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\n      o.searchType = f.control.data.searchType;\\r\\n      o.staticData = f.control.data.staticchoices ;\\r\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n      data = data.join(\\'&\\');\\r\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n      return;\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n   var val = ele.value;\\r\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\r\\n   var data = [];\\r\\n   var o = {};\\r\\n   o.type = f.control.data.type;\\r\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\no.searchType = f.control.data.searchType;\\r\\n   o.connectionString = f.control.data.connectionString;\\r\\n   o.searchField = f.control.data.field;\\r\\n   o.searchTable = f.control.data.table;\\r\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\r\\n    o.searchFieldStored = \\'\\';\\r\\n   } else {\\r\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\r\\n   }\\r\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n   data = data.join(\\'&\\');\\r\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n  }\\r\\n }\\r\\n}},\\r\\n\\t\"getQueryNames\": function(mode) {var data = this.__savedQueries;\\r\\nvar html = [\\'<div class=\"[theme:listBox.base.className]\" style=\"max-height: 300px; overflow:auto;\">\\'];\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n html.push(\\'<div a5-item=\"\\'+mode+\\'NamedQuery\"  a5-value=\"\\'+i+\\'\" class=\"[theme:listBox.base.item.className]\" onmouseover=\"$acn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  onmouseout=\"$rcn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  >\\' + data[i] + \\'</div>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\');\\r\\nvar _html = \\'\\';\\r\\nif(data.length > 0) {\\r\\n _html = html.join(\\'\\');\\r\\n} else {\\r\\n if(mode.toLowerCase() == \\'load\\') {\\r\\n  _html = \\'There are no Saved Queries\\';\\r\\n } else {\\r\\n  _html = \\'\\';\\r\\n }\\r\\n}\\r\\nreturn _html;},\\r\\n\\t\"_fixButtons\": function(data) {var res = [];\\r\\nvar addHTML = \\'<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\';\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\r\\n}\\r\\nreturn res;},\\r\\n\\t\"layout\": \"Default\",\\r\\n\\t\"layouts\": {\\r\\n\\t\\t\\'Default\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'<div class=\"queryBuilder\">\\',\\r\\n\\t\\t\\t\\'\\t<div class=\"queryBuilderList\">\\',\\r\\n\\t\\t\\t\\'\\t{_parsed}\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div><label class=\"[theme:ux.base.labelClassName]\">{[root].fields[field].label}</label></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type == \\\\\\'switch\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0; width: 100px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\'{dialog.style}\\\\\\'}>>,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\'+[count]+\\\\\\'\" a5-item=\"switch\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'list\\\\\\' || [root].fields[field].control.type == \\\\\\'combolist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" {*if [root].fields[field].control.type == \\\\\\'list\\\\\\'}readonly=\"readonly\" a5-item=\"list\" a5-value=\"{[count]}\"{*endif} class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.list},\\\\\\' a5-item=\"list\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"daterange\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendly\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'datepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"date\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendlysingle\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'step\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" style=\"text-align: center;\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.minus},\\\\\\' a5-item=\"step:-\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.plus},\\\\\\' a5-item=\"step:+\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'buttonlist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*if [root].fields[field].control.multiple}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\',\\\\\\'),\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'suggest\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type != \\\\\\'switch\\\\\\' && [root].fields[field].control.type != \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', style: \\\\\\'white-space:nowrap;\\\\\\', html: [root].buttons.filter + \\\\\\' \\\\\\' + op},\\\\\\' a5-item=\"filter\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.remove},\\\\\\' a5-item=\"remove\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"white-space:nowrap;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [count] < [root]._parsed.length-1}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\',button: {style: \\\\\\'width: 60px;\\\\\\'}},[{html: \\\\\\'AND<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.and.\\\\\\'},{html: \\\\\\'OR<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.or.\\\\\\'}],andor,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"andor:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t{/_parsed}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.add},\\\\\\' a5-item=\"add\"\\\\\\')>>}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if [root].searchOptions.loadQuery}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.load},\\\\\\' a5-item=\"loadQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"saveQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.run},\\\\\\' a5-item=\"runQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.clearsearch},\\\\\\' a5-item=\"clearSearch\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Wait\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'Wait....\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Load\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.LOADSAVEDQUERIES\">{[root].buttons.stringloadquery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t{@[scope].getQueryNames(\\\\\\'load\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Save\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY\" >{[root].buttons.stringsavequery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY2\" style=\"margin-top:10px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t<div><input id=\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\" style=\"width:100%\" placeholder=\"{[root].buttons.stringquerynamewatermark}\" class=\"[theme:edit.primary.className|{dialog.style}Edit]\" /></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t{@[scope].getQueryNames(\\\\\\'set\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"save\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t}\\r\\n\\t\\r\\n\\t},\\r\\n\\t\"onBeforeDraw\": function(html) { \\r\\nif(typeof this.data._parsed == \\'undefined\\') { \\r\\n\\tthis.data._parsed = [];\\r\\n}},\\r\\n\\t\"onBeforePopulate\": function(data) { \\r\\nvar ld = [];\\r\\nif(data.fields){\\r\\n\\tfor(var f in data.fields){\\r\\n\\t\\tld.push({value: f, html: data.fields[f].label});\\r\\n\\t\\tif(typeof data.fields[f].control == \\'undefined\\'){\\r\\n\\t\\t\\tdata.fields[f].control = {type: \\'default\\'};\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nthis._fieldMenu = ld;},\\r\\n\\t\"onChange\": function(v) { \\r\\nif(!this._stopRepaint){\\r\\n\\tthis.parseValue();\\r\\n}},\\r\\n\\t\"_onInitialize\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\r\\nthis.parseValue();\\r\\nvar cEle = $(this.contId);\\r\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\r\\n  if(watch){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\r\\n   if(f){\\r\\n    if(f.control.type == \\'suggest\\' ){\\r\\n     var len = ele.value.length;\\r\\n     var min = 3;\\r\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\r\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\r\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\r\\n    }\\r\\n    var keyCode = e.charCode || e.keyCode;\\r\\n    if(ci._pickerShown){\\r\\n     if(keyCode == 13){\\r\\n      if(ci._picker.value.length > 0){\\r\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\r\\n      }\\r\\n     } else if(keyCode == 38){\\r\\n      ci._picker.navigate(\\'prev\\');\\r\\n     } else if(keyCode == 40){\\r\\n      ci._picker.navigate(\\'next\\');\\r\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\r\\n      if(f.control.data.constructor != Array ) {\\r\\n       clearTimeout(ci._suggestTO);\\r\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\r\\n      } else {\\r\\n       ci._suggestGet();\\r\\n      }\\r\\n     }\\r\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\r\\n     if(keyCode == 40 && e.ctrlKey){\\r\\n      ci.items.list.onClick.call(ci,indx)\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var tag = ele.tagName || \\'\\';\\r\\n  tag = tag.toLowerCase();\\r\\n  if(tag == \\'input\\'){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   if(typeof indx == \\'number\\'){\\r\\n    ci._stopRepaint = true;\\r\\n    ci.data._parsed[indx].value = ele.value;\\r\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\r\\n    ci._stopRepaint = false;\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\nvar pEle = document.createElement(\\'div\\');\\r\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\r\\npEle.className = \\'[theme:menu.base.className]\\';\\r\\npEle.id = this.contId+\\'.picker\\';\\r\\nvar html = [];\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickervb\" class=\"[theme:menu.base.innerClassName]\" style=\"max-height: 300px; overflow: auto;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdate\" class=\"[theme:menu.base.innerClassName]\" style=\"display: none;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterange\" class=\"[theme:menu.base.innerClassName]\" style=\"white-space:nowrap; padding: 2px; display: none;\">\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangestart\" style=\"display:inline-block;margin-right:2px;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangeend\" style=\"display:inline-block;\"></div>\\');\\r\\nhtml.push(\\'<div style=\"text-align:center; margin-top:2px;\">\\');\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\r\\nhtml.push(\\'</div>\\');\\r\\nhtml.push(\\'</div>\\');\\r\\npEle.innerHTML = html.join(\\'\\');\\r\\ncEle.parentNode.appendChild(pEle);\\r\\nthis._pickerEle = pEle;\\r\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\r\\n parentControl: this.variableName,\\r\\n captureFocus: false,\\r\\n loopNavigate: true,\\r\\n loopNavigateNullSelection: true,\\r\\n allowNullSelection: true,\\r\\n allowAnyValue: false,\\r\\n layout: \\'list\\',\\r\\n layouts: {\\r\\n  loading: {\\r\\n   type: \\'static\\',\\r\\n   html: \\'<div class=\"[theme:menu.base.item.className]\">Loading...</div>\\'\\r\\n  },\\r\\n  list: {\\r\\n   type: \\'template\\',\\r\\n   template: [\\r\\n    \\'{*if typeof [value] == \\\\\\'string\\\\\\'}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{[value]}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{[value]}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*else}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{value}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{html}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*endif}\\'\\r\\n   ].join(\\'\\')\\r\\n  }\\r\\n },\\r\\n items: {\\r\\n  listItem: {\\r\\n   selectable: true,\\r\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\r\\n   onClick: function(v){\\r\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n    pvb.pick(v)\\r\\n    pvb.hidePicker();\\r\\n   }\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\r\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onClick: function(v){\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  pvb.pick(v)\\r\\n  pvb.hidePicker();\\r\\n }\\r\\n});\\r\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\r\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onSelect: function() {\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  var _drobj = pvb._pickerDateRangeEnd;\\r\\n  if(this.date > _drobj.date) {\\r\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\r\\n  } else {\\r\\n   _drobj.refresh();\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n disabledDates: {\\r\\n  low: function() {\\r\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n   if(pvb._pickerDateRangeStart) {\\r\\n    return pvb._pickerDateRangeStart.date;\\r\\n   }\\r\\n   return false;\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\r\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\r\\n  this.pick(v);\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\r\\n if(this._pickerShown){\\r\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\r\\n }\\r\\n},this,true); },\\r\\n\\t\"items\": {\\r\\n\\t\\t\\'remove\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed.splice(Number(v),1);\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\tif(this.data._parsed.length == 0 ) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar listName = this.data.searchOptions.listName;\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryData = [];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'add\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(this._fieldMenu);\\r\\n\\t\\t\\tthis.showPicker($(tid),\\'add\\',-1);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'filter\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tvar _filterMenu = [\\r\\n\\t\\t\\t\\t{html: \\'Equals\\', value: \\'=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than\\', value: \\'<\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than\\', value: \\'>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\r\\n\\t\\t\\t];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar type = this.data.fields[f].control.type;\\r\\n\\t\\t\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\r\\n\\t\\t\\tif(exclude.indexOf(type) == -1 ) {\\r\\n\\t\\t\\t\\t _filterMenu = _filterMenu.concat(\\r\\n\\t\\t\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Contains\\', value: \\'..x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Starts with\\', value: \\'x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Ends with\\', value: \\'..x\\'}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(_filterMenu);\\r\\n\\t\\t\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\r\\n\\t\\t\\tthis.showPicker(ele,\\'filter\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'switch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = this.data._parsed[Number(v)];\\r\\n\\t\\tvar f = this.data.fields[d.field];\\r\\n\\t\\tif(f){\\r\\n\\t\\t\\tvar vals = f.control.data;\\r\\n\\t\\t\\tif(vals){\\r\\n\\t\\t\\t\\tif(d.value == vals[0]) d.value = vals[1];\\r\\n\\t\\t\\t\\telse d.value = vals[0];\\r\\n\\t\\t\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'list\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\t\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\r\\n\\t\\t\\tif(d.constructor == Array) { \\r\\n\\t\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\t\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\t\\tthis.showPicker(iEle,\\'list\\',v);\\r\\n\\t\\t\\t\\tiEle.focus();\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\t\\tif(this._pickerIndex != v){\\r\\n\\t\\t\\t\\t\\tthis.hidePicker();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\r\\n\\t\\t\\t\\tif(!ele) return false;\\r\\n\\t\\t\\t\\tthis._picker.layout = \\'loading\\';\\r\\n\\t\\t\\t\\tthis._picker.refresh();\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif(!this._pickerShown){\\r\\n\\t\\t\\t\\t\\tthis.showPicker(ele,\\'list\\',v);\\r\\n\\t\\t\\t\\t\\tthis._pickerShown = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis._suggestGet();\\r\\n\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'date\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDate.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDate.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'date\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'step\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\tvar val = this.data._parsed[v].value;\\r\\n\\t\\tval = $u.s.toNum(val);\\r\\n\\t\\tif(ia == \\'-\\') val -= d.step || 1;\\r\\n\\t\\telse val += d.step || 1;\\r\\n\\t\\t\\r\\n\\t\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\r\\n\\t\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed[v].value = val;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'buttonlist\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[ia].field;\\r\\n\\t\\tvar obj = this.data.fields[f];\\r\\n\\t\\tif(obj.control.multiple) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar v2 = this.data._parsed[ia].value;\\r\\n\\t\\t\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\r\\n\\t\\t\\tif(v2 == \\'\\') v2 = [];\\r\\n\\t\\t\\telse v2 = v2.split(\\',\\');\\r\\n\\t\\t\\tvar vi = v2.indexOf(v)\\r\\n\\t\\t\\tif(vi == -1) { \\r\\n\\t\\t\\t\\tv2.push(v);\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\t\\tv2.splice(vi,1)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tv = v2.join(\\',\\');\\r\\n\\t\\t} \\r\\n\\t\\tthis.data._parsed[ia].value = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t}catch(err){ }\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'saveQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'runQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tlistName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') { \\r\\n\\t\\t\\talert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tvar query = this.value\\r\\n\\t\\t\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.queryData = this.value[0];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar m = []; \\r\\n\\t\\t\\tfor(var n in this.data.fields) { \\r\\n\\t\\t\\t\\tvar flag = this.data.fields[n].control.multiple; \\r\\n\\t\\t\\t\\tif(flag) { m.push(n);}\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.allowMultiple = m ;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar searchMode = 1;\\r\\n\\t\\t\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _d = [];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\r\\n\\t\\t\\tif(searchMode == 2) { \\r\\n\\t\\t\\t\\tvar ss = {dialog.object}.getControl(this.listName);\\r\\n\\t\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t_data = _d.join(\\'&\\')\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'cancel\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tthis.setLayout(\\'Default\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t try{\\r\\n\\t\\t  uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t }catch(err){ }\\r\\n\\t\\t var queryName = this.__savedQueries[v]\\r\\n\\t\\t var data = [];\\r\\n\\t\\t data.push( \\'_mode=loadQueryFromRepo\\');\\r\\n\\t\\t data.push(\\'_queryToLoad=\\' + queryName);\\r\\n\\t\\t data.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t data = data.join(\\'&\\')\\r\\n\\t\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'setNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\r\\n\\t\\tif(ele) ele.value = this.__savedQueries[v];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'clearSearch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t mode = this.data.searchOptions.mode;\\r\\n\\t\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t listName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') {\\r\\n\\t\\t alert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else {\\r\\n\\t\\t var query = this.value\\r\\n\\t\\t var obj = {};\\r\\n\\t\\t this.setValue(\\'\\');\\r\\n\\t\\t obj.queryData = [];\\r\\n\\t\\t obj.listName = listName;\\r\\n\\t\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t obj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'save\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar queryDef = this.value[0];\\r\\n\\t\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\r\\n\\t\\t\\r\\n\\t\\tif(queryName == \\'\\') { \\r\\n\\t\\t\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\"color:red;\">You have not specified the query name</span>\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryName = queryName \\r\\n\\t\\t\\tobj.queryDefinition = queryDef \\r\\n\\t\\t\\tdebugger;\\r\\n\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar data = [];\\r\\n\\t\\t\\tdata.push(\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\r\\n\\t\\t\\tdata.push( \\'_mode=saveQueryToRepo\\');\\r\\n\\t\\t\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t\\tdata = data.join(\\'&\\')\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'andor\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tthis.data._parsed[ia].andor = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendly\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar d = [];\\r\\n\\t\\td.push(\\'This Week\\');\\r\\n\\t\\td.push(\\'This Week-to-date\\');\\r\\n\\t\\td.push(\\'Next Week\\');\\r\\n\\t\\td.push(\\'Next 7 days\\');\\r\\n\\t\\td.push(\\'This Month\\');\\r\\n\\t\\td.push(\\'This Month-to-date\\');\\r\\n\\t\\td.push(\\'Last Week\\');\\r\\n\\t\\td.push(\\'Last 7 days\\');\\r\\n\\t\\td.push(\\'Last Month\\');\\r\\n\\t\\td.push(\\'Last 30 days\\');\\r\\n\\t\\td.push(\\'Next Month\\');\\r\\n\\t\\td.push(\\'Next 30 days\\');\\r\\n\\t\\td.push(\\'This Year\\');\\r\\n\\t\\td.push(\\'Last Year\\');\\r\\n\\t\\td.push(\\'Next Year\\');\\r\\n\\t\\td.push(\\'This Year-to-date\\');\\r\\n\\t\\td.push(\\'This Quarter\\');\\r\\n\\t\\td.push(\\'This Quarter-to-date\\');\\r\\n\\t\\td.push(\\'Last Quarter\\');\\r\\n\\t\\td.push(\\'Next Quarter\\');\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t var f = this.data._parsed[v].field;\\r\\n\\t\\t this._picker.layout = \\'list\\';\\r\\n\\t\\t this._picker.populate(d);\\r\\n\\t\\t this._picker.setValue(\\'\\');\\r\\n\\t\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t this.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t iEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'daterange\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDateRangeStart.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart.format = frm;\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvar range = this.data._parsed[v].value || \\'\\';\\r\\n\\t\\t\\trange = range.split(\\'..\\');\\r\\n\\t\\t\\tif(range.length == 1) { \\r\\n\\t\\t\\t\\trange.push(\\'\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDateRangeStart.setValue(range[0]);\\r\\n\\t\\t\\tthis._pickerDateRangeEnd.setValue(range[1]);\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'daterange\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendlysingle\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = [];\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\td.push(\\'Today\\');\\r\\n\\t\\td.push(\\'Yesterday\\');\\r\\n\\t\\td.push(\\'Tomorrow\\');\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\tthis._picker.setValue(\\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t\\tiEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t},\\r\\n\\t\"wrapper\": {\\r\\n\\t\\t\"allow\": false\\r\\n\\t}\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"fields\": {\\r\\n\\t\\t\"firstname\": {\\r\\n\\t\\t\\t\"label\": \"\",\\r\\n\\t\\t\\t\"control\": {\\r\\n\\t\\t\\t\\t\"type\": \"combolist\",\\r\\n\\t\\t\\t\\t\"data\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\"html\": \"\",\\r\\n\\t\\t\\t\\t\\t\"value\": \"\"\\r\\n\\t\\t\\t\\t}]\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"buttons\": {\\r\\n\\t\\t\"add\": \"Add new search field...\",\\r\\n\\t\\t\"remove\": \"<img src=\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\" />\",\\r\\n\\t\\t\"filter\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" />\",\\r\\n\\t\\t\"date\": \"<img src=\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\" />\",\\r\\n\\t\\t\"list\": \"<img src=\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\" />\",\\r\\n\\t\\t\"number\": {\\r\\n\\t\\t\\t\"plus\": \"<img src=\\\\\"svgIcon=#alpha-icon-add:icon\\\\\" />\",\\r\\n\\t\\t\\t\"minus\": \"<img src=\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\" />\"\\r\\n\\t\\t},\\r\\n\\t\\t\"save\": \"<img src=\\\\\"svgIcon=#alpha-icon-save:icon\\\\\" />Save query\",\\r\\n\\t\\t\"load\": \"<img src=\\\\\"svgIcon=#alpha-icon-load:icon\\\\\" /> Load query\",\\r\\n\\t\\t\"run\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" /> Run query\",\\r\\n\\t\\t\"menu\": \"<img src=\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\" />\",\\r\\n\\t\\t\"daterangepicker\": {\\r\\n\\t\\t\\t\"ok\": \"&nbsp;OK&nbsp;\",\\r\\n\\t\\t\\t\"cancel\": \"Cancel\"\\r\\n\\t\\t},\\r\\n\\t\\t\"cancel\": \"<img src=\\\\\"svgIcon=#alpha-icon-x:icon\\\\\" /> Cancel\",\\r\\n\\t\\t\"clearsearch\": \"<img src=\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\" /> Clear search\",\\r\\n\\t\\t\"stringloadquery\": \"Specify saved query to load\",\\r\\n\\t\\t\"stringsavequery\": \"Specify name for query\",\\r\\n\\t\\t\"stringquerynamewatermark\": \"Query name\"\\r\\n\\t},\\r\\n\\t\"searchOptions\": {\\r\\n\\t\\t\"displayDebuggingInfo\": false,\\r\\n\\t\\t\"loadQuery\": false,\\r\\n\\t\\t\"saveQuery\": false,\\r\\n\\t\\t\"placeHolder\": \"\",\\r\\n\\t\\t\"uniqueKey\": \"\",\\r\\n\\t\\t\"loadType\": \"All\",\\r\\n\\t\\t\"listName\": \"dummy_list\"\\r\\n\\t},\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"subtype\": \"AdvancedListSearch\",\\r\\n\\t\"variableName\": \"\",\\r\\n\\t\"settingsJSON\": \"{\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"inputId\\\\\": \\\\\"{variablename}\\\\\",\\\\r\\\\n\\\\t\\\\\"variableName\\\\\": \\\\\"{VARIABLENAME}\\\\\",\\\\r\\\\n\\\\t\\\\\"theme\\\\\": \\\\\"{dialog.style}\\\\\",\\\\r\\\\n\\\\t\\\\\"autoRefreshOnResize\\\\\": false,\\\\r\\\\n\\\\t\\\\\"datasource\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"lowLevel\\\\\": \\\\\"Data\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"type\\\\\": \\\\\"Static JSON\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"multiple\\\\\": true,\\\\r\\\\n\\\\t\\\\\"selectionMode\\\\\": \\\\\"default\\\\\",\\\\r\\\\n\\\\t\\\\\"loopNavigate\\\\\": false,\\\\r\\\\n\\\\t\\\\\"loopNavigateNullSelection\\\\\": true,\\\\r\\\\n\\\\t\\\\\"allowNullSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowTextSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowNullDeselection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"autoRefresh\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowAnyValue\\\\\": true,\\\\r\\\\n\\\\t\\\\\"captureFocus\\\\\": false,\\\\r\\\\n\\\\t\\\\\"scroll\\\\\": false,\\\\r\\\\n\\\\t\\\\\"parseValue\\\\\": function() {this.data._parsed = [];\\\\r\\\\nvar val = this.value[0];\\\\r\\\\nif(val){\\\\r\\\\n if(val != \\'\\') {\\\\r\\\\n  try {\\\\r\\\\n   var obj = JSON.parse(val);\\\\r\\\\n   this.data._parsed = obj;\\\\r\\\\n  } catch(err){\\\\r\\\\n   console.log(\\'ERROR: query builder \\\\\"\\'+this.variableName+\\'\\\\\" could not parse value.\\');\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nthis.refresh();},\\\\r\\\\n\\\\t\\\\\"addItem\\\\\": function(v) {var f = this.data.fields[v];\\\\r\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\r\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\r\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\r\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\r\\\\n}\\\\r\\\\nthis.data._parsed.push(d);\\\\r\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\r\\\\n\\\\t\\\\\"showPicker\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\r\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\r\\\\n this._pickerVBEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n}\\\\r\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\r\\\\n this._pickerEle.style.width = \\'300px\\';\\\\r\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\r\\\\n this._pickerEle.style.width = \\'\\';\\\\r\\\\n} else {\\\\r\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\r\\\\n}\\\\r\\\\nthis._pickerEle.style.display = \\'\\';\\\\r\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\r\\\\nsetTimeout(function(){\\\\r\\\\n this._pickerShown = true;\\\\r\\\\n}.bind(this),0);\\\\r\\\\nthis._pickerType = type;\\\\r\\\\nthis._pickerIndex = index;},\\\\r\\\\n\\\\t\\\\\"hidePicker\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\r\\\\nthis._pickerShown = false;},\\\\r\\\\n\\\\t\\\\\"pick\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\r\\\\n this.addItem(v);\\\\r\\\\n} else if(this._pickerType == \\'filter\\'){\\\\r\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n} else{\\\\r\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"suggest\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\r\\\\n this.hidePicker();\\\\r\\\\n}\\\\r\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\r\\\\nif(!ele) return false;\\\\r\\\\nif(data){\\\\r\\\\n if(data.length == 0){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n } else{\\\\r\\\\n  this._picker.layout = \\'list\\';\\\\r\\\\n  this._picker.populate(data);\\\\r\\\\n  this._picker.setValue(ele.value);\\\\r\\\\n  try{\\\\r\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\r\\\\n   if(f.data.cacheData) f.data = data;\\\\r\\\\n  }catch(e) { };\\\\r\\\\n }\\\\r\\\\n} else{\\\\r\\\\n this._picker.layout = \\'loading\\';\\\\r\\\\n this._picker.refresh();\\\\r\\\\n}\\\\r\\\\nif(!this._pickerShown){\\\\r\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_suggestGet\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\r\\\\nif(ci._pickerShown){\\\\r\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\r\\\\n if(ele){\\\\r\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\r\\\\n  if(f){\\\\r\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\r\\\\n    if(f.control.data.constructor == Array) {\\\\r\\\\n     var _d = f.control.data;\\\\r\\\\n     var val = ele.value.toLowerCase();\\\\r\\\\n     var data = [];\\\\r\\\\n     for(var i = 0; i < _d.length; i++) {\\\\r\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\r\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n     ci._picker.layout = \\'list\\';\\\\r\\\\n     ci._picker.populate(data);\\\\r\\\\n     return\\\\r\\\\n    } else {\\\\r\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\r\\\\n      var val = ele.value;\\\\r\\\\n      var o = {};\\\\r\\\\n      var data = [];\\\\r\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\n      o.searchType = f.control.data.searchType;\\\\r\\\\n      o.staticData = f.control.data.staticchoices ;\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n      data = data.join(\\'&\\');\\\\r\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n      return;\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n   var val = ele.value;\\\\r\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\r\\\\n   var data = [];\\\\r\\\\n   var o = {};\\\\r\\\\n   o.type = f.control.data.type;\\\\r\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\no.searchType = f.control.data.searchType;\\\\r\\\\n   o.connectionString = f.control.data.connectionString;\\\\r\\\\n   o.searchField = f.control.data.field;\\\\r\\\\n   o.searchTable = f.control.data.table;\\\\r\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\r\\\\n    o.searchFieldStored = \\'\\';\\\\r\\\\n   } else {\\\\r\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\r\\\\n   }\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n   data = data.join(\\'&\\');\\\\r\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"getQueryNames\\\\\": function(mode) {var data = this.__savedQueries;\\\\r\\\\nvar html = [\\'<div class=\\\\\"[theme:listBox.base.className]\\\\\" style=\\\\\"max-height: 300px; overflow:auto;\\\\\">\\'];\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n html.push(\\'<div a5-item=\\\\\"\\'+mode+\\'NamedQuery\\\\\"  a5-value=\\\\\"\\'+i+\\'\\\\\" class=\\\\\"[theme:listBox.base.item.className]\\\\\" onmouseover=\\\\\"$acn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  onmouseout=\\\\\"$rcn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\r\\\\n}\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nvar _html = \\'\\';\\\\r\\\\nif(data.length > 0) {\\\\r\\\\n _html = html.join(\\'\\');\\\\r\\\\n} else {\\\\r\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\r\\\\n  _html = \\'There are no Saved Queries\\';\\\\r\\\\n } else {\\\\r\\\\n  _html = \\'\\';\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nreturn _html;},\\\\r\\\\n\\\\t\\\\\"_fixButtons\\\\\": function(data) {var res = [];\\\\r\\\\nvar addHTML = \\'<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\';\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\r\\\\n}\\\\r\\\\nreturn res;},\\\\r\\\\n\\\\t\\\\\"layout\\\\\": \\\\\"Default\\\\\",\\\\r\\\\n\\\\t\\\\\"layouts\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'Default\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div class=\\\\\"queryBuilder\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div class=\\\\\"queryBuilderList\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div><label class=\\\\\"[theme:ux.base.labelClassName]\\\\\">{[root].fields[field].label}</label></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\'switch\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'}>>,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-item=\\\\\"switch\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\'combolist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\'}readonly=\\\\\"readonly\\\\\" a5-item=\\\\\"list\\\\\" a5-value=\\\\\"{[count]}\\\\\"{*endif} class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\' a5-item=\\\\\"list\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"daterange\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendly\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'datepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"date\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendlysingle\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'step\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" style=\\\\\"text-align: center;\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\' a5-item=\\\\\"step:-\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\' a5-item=\\\\\"step:+\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'buttonlist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.multiple}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\',\\\\\\\\\\'),\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'suggest\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\'switch\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', style: \\\\\\\\\\'white-space:nowrap;\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\' \\\\\\\\\\' + op},\\\\\\\\\\' a5-item=\\\\\"filter\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\' a5-item=\\\\\"remove\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"white-space:nowrap;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\',button: {style: \\\\\\\\\\'width: 60px;\\\\\\\\\\'}},[{html: \\\\\\\\\\'AND<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.and.\\\\\\\\\\'},{html: \\\\\\\\\\'OR<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.or.\\\\\\\\\\'}],andor,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"andor:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{/_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.add},\\\\\\\\\\' a5-item=\\\\\"add\\\\\"\\\\\\\\\\')>>}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.load},\\\\\\\\\\' a5-item=\\\\\"loadQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"saveQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.run},\\\\\\\\\\' a5-item=\\\\\"runQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\' a5-item=\\\\\"clearSearch\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Wait\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'Wait....\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Load\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{@[scope].getQueryNames(\\\\\\\\\\'load\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\" style=\\\\\"margin-top:10px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div><input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\" style=\\\\\"width:100%\\\\\" placeholder=\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\" class=\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\" /></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{@[scope].getQueryNames(\\\\\\\\\\'set\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"save\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"onBeforeDraw\\\\\": function(html) { \\\\r\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\r\\\\n\\\\tthis.data._parsed = [];\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"onBeforePopulate\\\\\": function(data) { \\\\r\\\\nvar ld = [];\\\\r\\\\nif(data.fields){\\\\r\\\\n\\\\tfor(var f in data.fields){\\\\r\\\\n\\\\t\\\\tld.push({value: f, html: data.fields[f].label});\\\\r\\\\n\\\\t\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\r\\\\n\\\\t\\\\t\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t}\\\\r\\\\n}\\\\r\\\\nthis._fieldMenu = ld;},\\\\r\\\\n\\\\t\\\\\"onChange\\\\\": function(v) { \\\\r\\\\nif(!this._stopRepaint){\\\\r\\\\n\\\\tthis.parseValue();\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_onInitialize\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\r\\\\nthis.parseValue();\\\\r\\\\nvar cEle = $(this.contId);\\\\r\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\r\\\\n  if(watch){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\r\\\\n   if(f){\\\\r\\\\n    if(f.control.type == \\'suggest\\' ){\\\\r\\\\n     var len = ele.value.length;\\\\r\\\\n     var min = 3;\\\\r\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\r\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\r\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\r\\\\n    }\\\\r\\\\n    var keyCode = e.charCode || e.keyCode;\\\\r\\\\n    if(ci._pickerShown){\\\\r\\\\n     if(keyCode == 13){\\\\r\\\\n      if(ci._picker.value.length > 0){\\\\r\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\r\\\\n      }\\\\r\\\\n     } else if(keyCode == 38){\\\\r\\\\n      ci._picker.navigate(\\'prev\\');\\\\r\\\\n     } else if(keyCode == 40){\\\\r\\\\n      ci._picker.navigate(\\'next\\');\\\\r\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\r\\\\n      if(f.control.data.constructor != Array ) {\\\\r\\\\n       clearTimeout(ci._suggestTO);\\\\r\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\r\\\\n      } else {\\\\r\\\\n       ci._suggestGet();\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\r\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\r\\\\n      ci.items.list.onClick.call(ci,indx)\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var tag = ele.tagName || \\'\\';\\\\r\\\\n  tag = tag.toLowerCase();\\\\r\\\\n  if(tag == \\'input\\'){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   if(typeof indx == \\'number\\'){\\\\r\\\\n    ci._stopRepaint = true;\\\\r\\\\n    ci.data._parsed[indx].value = ele.value;\\\\r\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\r\\\\n    ci._stopRepaint = false;\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\nvar pEle = document.createElement(\\'div\\');\\\\r\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\r\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\r\\\\npEle.id = this.contId+\\'.picker\\';\\\\r\\\\nvar html = [];\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickervb\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"max-height: 300px; overflow: auto;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdate\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"display: none;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\">\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\" style=\\\\\"display:inline-block;margin-right:2px;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\" style=\\\\\"display:inline-block;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div style=\\\\\"text-align:center; margin-top:2px;\\\\\">\\');\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\npEle.innerHTML = html.join(\\'\\');\\\\r\\\\ncEle.parentNode.appendChild(pEle);\\\\r\\\\nthis._pickerEle = pEle;\\\\r\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n captureFocus: false,\\\\r\\\\n loopNavigate: true,\\\\r\\\\n loopNavigateNullSelection: true,\\\\r\\\\n allowNullSelection: true,\\\\r\\\\n allowAnyValue: false,\\\\r\\\\n layout: \\'list\\',\\\\r\\\\n layouts: {\\\\r\\\\n  loading: {\\\\r\\\\n   type: \\'static\\',\\\\r\\\\n   html: \\'<div class=\\\\\"[theme:menu.base.item.className]\\\\\">Loading...</div>\\'\\\\r\\\\n  },\\\\r\\\\n  list: {\\\\r\\\\n   type: \\'template\\',\\\\r\\\\n   template: [\\\\r\\\\n    \\'{*if typeof [value] == \\\\\\\\\\'string\\\\\\\\\\'}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{[value]}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{[value]}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*else}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{value}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{html}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*endif}\\'\\\\r\\\\n   ].join(\\'\\')\\\\r\\\\n  }\\\\r\\\\n },\\\\r\\\\n items: {\\\\r\\\\n  listItem: {\\\\r\\\\n   selectable: true,\\\\r\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\r\\\\n   onClick: function(v){\\\\r\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n    pvb.pick(v)\\\\r\\\\n    pvb.hidePicker();\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\r\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onClick: function(v){\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  pvb.pick(v)\\\\r\\\\n  pvb.hidePicker();\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\r\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onSelect: function() {\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\r\\\\n  if(this.date > _drobj.date) {\\\\r\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\r\\\\n  } else {\\\\r\\\\n   _drobj.refresh();\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n disabledDates: {\\\\r\\\\n  low: function() {\\\\r\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n   if(pvb._pickerDateRangeStart) {\\\\r\\\\n    return pvb._pickerDateRangeStart.date;\\\\r\\\\n   }\\\\r\\\\n   return false;\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\r\\\\n  this.pick(v);\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true); },\\\\r\\\\n\\\\t\\\\\"items\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'remove\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed.splice(Number(v),1);\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\tif(this.data._parsed.length == 0 ) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = [];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'add\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(this._fieldMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'filter\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _filterMenu = [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\r\\\\n\\\\t\\\\t\\\\t];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar type = this.data.fields[f].control.type;\\\\r\\\\n\\\\t\\\\t\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\r\\\\n\\\\t\\\\t\\\\tif(exclude.indexOf(type) == -1 ) {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t _filterMenu = _filterMenu.concat(\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t[\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t]\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(_filterMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'switch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = this.data._parsed[Number(v)];\\\\r\\\\n\\\\t\\\\tvar f = this.data.fields[d.field];\\\\r\\\\n\\\\t\\\\tif(f){\\\\r\\\\n\\\\t\\\\t\\\\tvar vals = f.control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(vals){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\telse d.value = vals[0];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'list\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\r\\\\n\\\\t\\\\t\\\\tif(d.constructor == Array) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(this._pickerIndex != v){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.hidePicker();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!ele) return false;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'loading\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.refresh();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!this._pickerShown){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.showPicker(ele,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis._pickerShown = true;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._suggestGet();\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'date\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDate.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'step\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\tvar val = this.data._parsed[v].value;\\\\r\\\\n\\\\t\\\\tval = $u.s.toNum(val);\\\\r\\\\n\\\\t\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\r\\\\n\\\\t\\\\telse val += d.step || 1;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\r\\\\n\\\\t\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed[v].value = val;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'buttonlist\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[ia].field;\\\\r\\\\n\\\\t\\\\tvar obj = this.data.fields[f];\\\\r\\\\n\\\\t\\\\tif(obj.control.multiple) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar v2 = this.data._parsed[ia].value;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\r\\\\n\\\\t\\\\t\\\\tif(v2 == \\'\\') v2 = [];\\\\r\\\\n\\\\t\\\\t\\\\telse v2 = v2.split(\\',\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar vi = v2.indexOf(v)\\\\r\\\\n\\\\t\\\\t\\\\tif(vi == -1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.push(v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.splice(vi,1)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tv = v2.join(\\',\\');\\\\r\\\\n\\\\t\\\\t} \\\\r\\\\n\\\\t\\\\tthis.data._parsed[ia].value = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'saveQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'runQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tlistName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\talert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\tvar query = this.value\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = this.value[0];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar m = []; \\\\r\\\\n\\\\t\\\\t\\\\tfor(var n in this.data.fields) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar flag = this.data.fields[n].control.multiple; \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(flag) { m.push(n);}\\\\r\\\\n\\\\t\\\\t\\\\t};\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.allowMultiple = m ;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar searchMode = 1;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _d = [];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\r\\\\n\\\\t\\\\t\\\\tif(searchMode == 2) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t_data = _d.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'cancel\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Default\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t try{\\\\r\\\\n\\\\t\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t }catch(err){ }\\\\r\\\\n\\\\t\\\\t var queryName = this.__savedQueries[v]\\\\r\\\\n\\\\t\\\\t var data = [];\\\\r\\\\n\\\\t\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\r\\\\n\\\\t\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t data = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'setNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\r\\\\n\\\\t\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'clearSearch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t mode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') {\\\\r\\\\n\\\\t\\\\t alert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else {\\\\r\\\\n\\\\t\\\\t var query = this.value\\\\r\\\\n\\\\t\\\\t var obj = {};\\\\r\\\\n\\\\t\\\\t this.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t obj.queryData = [];\\\\r\\\\n\\\\t\\\\t obj.listName = listName;\\\\r\\\\n\\\\t\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar queryDef = this.value[0];\\\\r\\\\n\\\\t\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(queryName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\"color:red;\\\\\">You have not specified the query name</span>\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryName = queryName \\\\r\\\\n\\\\t\\\\t\\\\tobj.queryDefinition = queryDef \\\\r\\\\n\\\\t\\\\t\\\\tdebugger;\\\\r\\\\n\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar data = [];\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\r\\\\n\\\\t\\\\t\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t\\\\tdata = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'andor\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.data._parsed[ia].andor = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendly\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\td.push(\\'This Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Week-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Quarter\\');\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t var f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t this._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t this._picker.populate(d);\\\\r\\\\n\\\\t\\\\t this._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t iEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'daterange\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDateRangeStart.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\trange = range.split(\\'..\\');\\\\r\\\\n\\\\t\\\\t\\\\tif(range.length == 1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\trange.push(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendlysingle\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\td.push(\\'Today\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Yesterday\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Tomorrow\\');\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\\"wrapper\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t}\\\\r\\\\n}\",\\r\\n\\t\"dataJSON\": \"{\\\\r\\\\n\\\\t\\\\\"fields\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"firstname\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"label\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"control\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"type\\\\\": \\\\\"combolist\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"data\\\\\": [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"html\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"value\\\\\": \\\\\"\\\\\"\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}]\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"buttons\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"add\\\\\": \\\\\"Add new search field...\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"remove\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"filter\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"date\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"list\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"number\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"plus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"minus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\" />\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"save\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\" />Save query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"load\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\" /> Load query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"run\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" /> Run query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"menu\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"daterangepicker\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"ok\\\\\": \\\\\"&nbsp;OK&nbsp;\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"Cancel\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\" /> Cancel\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"clearsearch\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\" /> Clear search\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringloadquery\\\\\": \\\\\"Specify saved query to load\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringsavequery\\\\\": \\\\\"Specify name for query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringquerynamewatermark\\\\\": \\\\\"Query name\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchOptions\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"displayDebuggingInfo\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"loadQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"saveQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"placeHolder\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"uniqueKey\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"loadType\\\\\": \\\\\"All\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"subtype\\\\\": \\\\\"AdvancedListSearch\\\\\",\\\\r\\\\n\\\\t\\\\\"variableName\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\\"settingsJSON\\\\\": \\\\\"{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\": 1,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"inputId\\\\\\\\\\\\\": \\\\\\\\\\\\\"{variablename}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"variableName\\\\\\\\\\\\\": \\\\\\\\\\\\\"{VARIABLENAME}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"theme\\\\\\\\\\\\\": \\\\\\\\\\\\\"{dialog.style}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"autoRefreshOnResize\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"datasource\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"lowLevel\\\\\\\\\\\\\": \\\\\\\\\\\\\"Data\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"type\\\\\\\\\\\\\": \\\\\\\\\\\\\"Static JSON\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"multiple\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"selectionMode\\\\\\\\\\\\\": \\\\\\\\\\\\\"default\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"loopNavigate\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"loopNavigateNullSelection\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowNullSelection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowTextSelection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowNullDeselection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"autoRefresh\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowAnyValue\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"captureFocus\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"scroll\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"parseValue\\\\\\\\\\\\\": function() {this.data._parsed = [];\\\\\\\\r\\\\\\\\nvar val = this.value[0];\\\\\\\\r\\\\\\\\nif(val){\\\\\\\\r\\\\\\\\n if(val != \\'\\') {\\\\\\\\r\\\\\\\\n  try {\\\\\\\\r\\\\\\\\n   var obj = JSON.parse(val);\\\\\\\\r\\\\\\\\n   this.data._parsed = obj;\\\\\\\\r\\\\\\\\n  } catch(err){\\\\\\\\r\\\\\\\\n   console.log(\\'ERROR: query builder \\\\\\\\\\\\\"\\'+this.variableName+\\'\\\\\\\\\\\\\" could not parse value.\\');\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis.refresh();},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"addItem\\\\\\\\\\\\\": function(v) {var f = this.data.fields[v];\\\\\\\\r\\\\\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\\\\\r\\\\\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\\\\\r\\\\\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\\\\\r\\\\\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis.data._parsed.push(d);\\\\\\\\r\\\\\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"showPicker\\\\\\\\\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = \\'300px\\';\\\\\\\\r\\\\\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = \\'\\';\\\\\\\\r\\\\\\\\n} else {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis._pickerEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\\\\\r\\\\\\\\nsetTimeout(function(){\\\\\\\\r\\\\\\\\n this._pickerShown = true;\\\\\\\\r\\\\\\\\n}.bind(this),0);\\\\\\\\r\\\\\\\\nthis._pickerType = type;\\\\\\\\r\\\\\\\\nthis._pickerIndex = index;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"hidePicker\\\\\\\\\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\nthis._pickerShown = false;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"pick\\\\\\\\\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\\\\\r\\\\\\\\n this.addItem(v);\\\\\\\\r\\\\\\\\n} else if(this._pickerType == \\'filter\\'){\\\\\\\\r\\\\\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\\\\\r\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n} else{\\\\\\\\r\\\\\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\\\\\r\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"suggest\\\\\\\\\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\\\\\r\\\\\\\\n this.hidePicker();\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\\\\\r\\\\\\\\nif(!ele) return false;\\\\\\\\r\\\\\\\\nif(data){\\\\\\\\r\\\\\\\\n if(data.length == 0){\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n } else{\\\\\\\\r\\\\\\\\n  this._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n  this._picker.populate(data);\\\\\\\\r\\\\\\\\n  this._picker.setValue(ele.value);\\\\\\\\r\\\\\\\\n  try{\\\\\\\\r\\\\\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\\\\\r\\\\\\\\n   if(f.data.cacheData) f.data = data;\\\\\\\\r\\\\\\\\n  }catch(e) { };\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n} else{\\\\\\\\r\\\\\\\\n this._picker.layout = \\'loading\\';\\\\\\\\r\\\\\\\\n this._picker.refresh();\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nif(!this._pickerShown){\\\\\\\\r\\\\\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_suggestGet\\\\\\\\\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\\\\\r\\\\\\\\nif(ci._pickerShown){\\\\\\\\r\\\\\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\\\\\r\\\\\\\\n if(ele){\\\\\\\\r\\\\\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\\\\\r\\\\\\\\n  if(f){\\\\\\\\r\\\\\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\\\\\r\\\\\\\\n    if(f.control.data.constructor == Array) {\\\\\\\\r\\\\\\\\n     var _d = f.control.data;\\\\\\\\r\\\\\\\\n     var val = ele.value.toLowerCase();\\\\\\\\r\\\\\\\\n     var data = [];\\\\\\\\r\\\\\\\\n     for(var i = 0; i < _d.length; i++) {\\\\\\\\r\\\\\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\\\\\r\\\\\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n     ci._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n     ci._picker.populate(data);\\\\\\\\r\\\\\\\\n     return\\\\\\\\r\\\\\\\\n    } else {\\\\\\\\r\\\\\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\\\\\r\\\\\\\\n      var val = ele.value;\\\\\\\\r\\\\\\\\n      var o = {};\\\\\\\\r\\\\\\\\n      var data = [];\\\\\\\\r\\\\\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\r\\\\\\\\n      o.searchType = f.control.data.searchType;\\\\\\\\r\\\\\\\\n      o.staticData = f.control.data.staticchoices ;\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\r\\\\\\\\n      data = data.join(\\'&\\');\\\\\\\\r\\\\\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\r\\\\\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\r\\\\\\\\n      return;\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   var val = ele.value;\\\\\\\\r\\\\\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\\\\\r\\\\\\\\n   var data = [];\\\\\\\\r\\\\\\\\n   var o = {};\\\\\\\\r\\\\\\\\n   o.type = f.control.data.type;\\\\\\\\r\\\\\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\r\\\\\\\\no.searchType = f.control.data.searchType;\\\\\\\\r\\\\\\\\n   o.connectionString = f.control.data.connectionString;\\\\\\\\r\\\\\\\\n   o.searchField = f.control.data.field;\\\\\\\\r\\\\\\\\n   o.searchTable = f.control.data.table;\\\\\\\\r\\\\\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\\\\\r\\\\\\\\n    o.searchFieldStored = \\'\\';\\\\\\\\r\\\\\\\\n   } else {\\\\\\\\r\\\\\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\r\\\\\\\\n   data = data.join(\\'&\\');\\\\\\\\r\\\\\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\r\\\\\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"getQueryNames\\\\\\\\\\\\\": function(mode) {var data = this.__savedQueries;\\\\\\\\r\\\\\\\\nvar html = [\\'<div class=\\\\\\\\\\\\\"[theme:listBox.base.className]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"max-height: 300px; overflow:auto;\\\\\\\\\\\\\">\\'];\\\\\\\\r\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\r\\\\\\\\n html.push(\\'<div a5-item=\\\\\\\\\\\\\"\\'+mode+\\'NamedQuery\\\\\\\\\\\\\"  a5-value=\\\\\\\\\\\\\"\\'+i+\\'\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:listBox.base.item.className]\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"$acn(this,\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\"  onmouseout=\\\\\\\\\\\\\"$rcn(this,\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\nvar _html = \\'\\';\\\\\\\\r\\\\\\\\nif(data.length > 0) {\\\\\\\\r\\\\\\\\n _html = html.join(\\'\\');\\\\\\\\r\\\\\\\\n} else {\\\\\\\\r\\\\\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\\\\\r\\\\\\\\n  _html = \\'There are no Saved Queries\\';\\\\\\\\r\\\\\\\\n } else {\\\\\\\\r\\\\\\\\n  _html = \\'\\';\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nreturn _html;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_fixButtons\\\\\\\\\\\\\": function(data) {var res = [];\\\\\\\\r\\\\\\\\nvar addHTML = \\'<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\';\\\\\\\\r\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\r\\\\\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nreturn res;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"layout\\\\\\\\\\\\\": \\\\\\\\\\\\\"Default\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"layouts\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Default\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div class=\\\\\\\\\\\\\"queryBuilder\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div class=\\\\\\\\\\\\\"queryBuilderList\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{_parsed}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div><label class=\\\\\\\\\\\\\"[theme:ux.base.labelClassName]\\\\\\\\\\\\\">{[root].fields[field].label}</label></div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'}>>,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"switch\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'combolist\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\'}readonly=\\\\\\\\\\\\\"readonly\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"list\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\"{*endif} class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\"true\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"list\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"daterange\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"datefriendly\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'datepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"date\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"datefriendlysingle\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'step\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"text-align: center;\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"step:-\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"step:+\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'buttonlist\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.multiple}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\'),\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*else}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'suggest\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\"true\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*else}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', style: \\\\\\\\\\\\\\\\\\'white-space:nowrap;\\\\\\\\\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\\\' + op},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"filter\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"remove\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"white-space:nowrap;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\',button: {style: \\\\\\\\\\\\\\\\\\'width: 60px;\\\\\\\\\\\\\\\\\\'}},[{html: \\\\\\\\\\\\\\\\\\'AND<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\'.and.\\\\\\\\\\\\\\\\\\'},{html: \\\\\\\\\\\\\\\\\\'OR<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\'.or.\\\\\\\\\\\\\\\\\\'}],andor,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"andor:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{/_parsed}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\">{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.add},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"add\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.load},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*if _parsed.length > 0}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.run},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"runQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"clearSearch\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Wait\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'Wait....\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Load\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div style=\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\\\\\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\'load\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Save\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div style=\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY\\\\\\\\\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"margin-top:10px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div><input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:100%\\\\\\\\\\\\\" placeholder=\\\\\\\\\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\\\\\\\\\" /></div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\'set\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"save\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onBeforeDraw\\\\\\\\\\\\\": function(html) { \\\\\\\\r\\\\\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\tthis.data._parsed = [];\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onBeforePopulate\\\\\\\\\\\\\": function(data) { \\\\\\\\r\\\\\\\\nvar ld = [];\\\\\\\\r\\\\\\\\nif(data.fields){\\\\\\\\r\\\\\\\\n\\\\\\\\tfor(var f in data.fields){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tld.push({value: f, html: data.fields[f].label});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t}\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis._fieldMenu = ld;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onChange\\\\\\\\\\\\\": function(v) { \\\\\\\\r\\\\\\\\nif(!this._stopRepaint){\\\\\\\\r\\\\\\\\n\\\\\\\\tthis.parseValue();\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_onInitialize\\\\\\\\\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\\\\\r\\\\\\\\nthis.parseValue();\\\\\\\\r\\\\\\\\nvar cEle = $(this.contId);\\\\\\\\r\\\\\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\\\\\r\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\r\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\r\\\\\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\\\\\r\\\\\\\\n  if(watch){\\\\\\\\r\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\r\\\\\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\\\\\r\\\\\\\\n   if(f){\\\\\\\\r\\\\\\\\n    if(f.control.type == \\'suggest\\' ){\\\\\\\\r\\\\\\\\n     var len = ele.value.length;\\\\\\\\r\\\\\\\\n     var min = 3;\\\\\\\\r\\\\\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\\\\\r\\\\\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\\\\\r\\\\\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n    var keyCode = e.charCode || e.keyCode;\\\\\\\\r\\\\\\\\n    if(ci._pickerShown){\\\\\\\\r\\\\\\\\n     if(keyCode == 13){\\\\\\\\r\\\\\\\\n      if(ci._picker.value.length > 0){\\\\\\\\r\\\\\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     } else if(keyCode == 38){\\\\\\\\r\\\\\\\\n      ci._picker.navigate(\\'prev\\');\\\\\\\\r\\\\\\\\n     } else if(keyCode == 40){\\\\\\\\r\\\\\\\\n      ci._picker.navigate(\\'next\\');\\\\\\\\r\\\\\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\\\\\r\\\\\\\\n      if(f.control.data.constructor != Array ) {\\\\\\\\r\\\\\\\\n       clearTimeout(ci._suggestTO);\\\\\\\\r\\\\\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\\\\\r\\\\\\\\n      } else {\\\\\\\\r\\\\\\\\n       ci._suggestGet();\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\\\\\r\\\\\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\\\\\r\\\\\\\\n      ci.items.list.onClick.call(ci,indx)\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this);\\\\\\\\r\\\\\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\\\\\r\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\r\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\r\\\\\\\\n  var tag = ele.tagName || \\'\\';\\\\\\\\r\\\\\\\\n  tag = tag.toLowerCase();\\\\\\\\r\\\\\\\\n  if(tag == \\'input\\'){\\\\\\\\r\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\r\\\\\\\\n   if(typeof indx == \\'number\\'){\\\\\\\\r\\\\\\\\n    ci._stopRepaint = true;\\\\\\\\r\\\\\\\\n    ci.data._parsed[indx].value = ele.value;\\\\\\\\r\\\\\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\\\\\r\\\\\\\\n    ci._stopRepaint = false;\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this);\\\\\\\\r\\\\\\\\nvar pEle = document.createElement(\\'div\\');\\\\\\\\r\\\\\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\\\\\r\\\\\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\\\\\r\\\\\\\\npEle.id = this.contId+\\'.picker\\';\\\\\\\\r\\\\\\\\nvar html = [];\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"max-height: 300px; overflow: auto;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdate\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display: none;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\\\\\\\\\">\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display:inline-block;margin-right:2px;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div style=\\\\\\\\\\\\\"text-align:center; margin-top:2px;\\\\\\\\\\\\\">\\');\\\\\\\\r\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\\\\\r\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\npEle.innerHTML = html.join(\\'\\');\\\\\\\\r\\\\\\\\ncEle.parentNode.appendChild(pEle);\\\\\\\\r\\\\\\\\nthis._pickerEle = pEle;\\\\\\\\r\\\\\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n captureFocus: false,\\\\\\\\r\\\\\\\\n loopNavigate: true,\\\\\\\\r\\\\\\\\n loopNavigateNullSelection: true,\\\\\\\\r\\\\\\\\n allowNullSelection: true,\\\\\\\\r\\\\\\\\n allowAnyValue: false,\\\\\\\\r\\\\\\\\n layout: \\'list\\',\\\\\\\\r\\\\\\\\n layouts: {\\\\\\\\r\\\\\\\\n  loading: {\\\\\\\\r\\\\\\\\n   type: \\'static\\',\\\\\\\\r\\\\\\\\n   html: \\'<div class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\">Loading...</div>\\'\\\\\\\\r\\\\\\\\n  },\\\\\\\\r\\\\\\\\n  list: {\\\\\\\\r\\\\\\\\n   type: \\'template\\',\\\\\\\\r\\\\\\\\n   template: [\\\\\\\\r\\\\\\\\n    \\'{*if typeof [value] == \\\\\\\\\\\\\\\\\\'string\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{[value]}\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<span style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\">{[value]}</span>\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n    \\'{*else}\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<span style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\">{html}</span>\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n    \\'{*endif}\\'\\\\\\\\r\\\\\\\\n   ].join(\\'\\')\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n },\\\\\\\\r\\\\\\\\n items: {\\\\\\\\r\\\\\\\\n  listItem: {\\\\\\\\r\\\\\\\\n   selectable: true,\\\\\\\\r\\\\\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\\\\\r\\\\\\\\n   onClick: function(v){\\\\\\\\r\\\\\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n    pvb.pick(v)\\\\\\\\r\\\\\\\\n    pvb.hidePicker();\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\\\\\r\\\\\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n onClick: function(v){\\\\\\\\r\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n  pvb.pick(v)\\\\\\\\r\\\\\\\\n  pvb.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\\\\\r\\\\\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n onSelect: function() {\\\\\\\\r\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\\\\\r\\\\\\\\n  if(this.date > _drobj.date) {\\\\\\\\r\\\\\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\\\\\r\\\\\\\\n  } else {\\\\\\\\r\\\\\\\\n   _drobj.refresh();\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n disabledDates: {\\\\\\\\r\\\\\\\\n  low: function() {\\\\\\\\r\\\\\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n   if(pvb._pickerDateRangeStart) {\\\\\\\\r\\\\\\\\n    return pvb._pickerDateRangeStart.date;\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   return false;\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\\\\\r\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true);\\\\\\\\r\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\\\\\r\\\\\\\\n  this.pick(v);\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true);\\\\\\\\r\\\\\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true); },\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"items\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'remove\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed.splice(Number(v),1);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this.data._parsed.length == 0 ) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar listName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryData = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'add\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"drag\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(this._fieldMenu);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'filter\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _filterMenu = [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar type = this.data.fields[f].control.type;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(exclude.indexOf(type) == -1 ) {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t _filterMenu = _filterMenu.concat(\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t[\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(_filterMenu);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'switch\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = this.data._parsed[Number(v)];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data.fields[d.field];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(f){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar vals = f.control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(vals){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\telse d.value = vals[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'list\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(d.constructor == Array) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tiEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerIndex != v){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.hidePicker();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(!ele) return false;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'loading\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.refresh();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(!this._pickerShown){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'list\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerShown = true;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._suggestGet();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'date\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerDate.format != frm){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar td = new Date();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'step\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar val = this.data._parsed[v].value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tval = $u.s.toNum(val);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\telse val += d.step || 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed[v].value = val;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'buttonlist\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[ia].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar obj = this.data.fields[f];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(obj.control.multiple) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar v2 = this.data._parsed[ia].value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(v2 == \\'\\') v2 = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\telse v2 = v2.split(\\',\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar vi = v2.indexOf(v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(vi == -1) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tv2.push(v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tv2.splice(vi,1)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tv = v2.join(\\',\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed[ia].value = v;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'loadQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'saveQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'runQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar listName = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tlistName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(listName == \\'\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\talert(\\'Error. List to search not defined.\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar query = this.value\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryData = this.value[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar m = []; \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tfor(var n in this.data.fields) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar flag = this.data.fields[n].control.multiple; \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(flag) { m.push(n);}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.allowMultiple = m ;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar searchMode = 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(searchMode == 2) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_data = _d.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'cancel\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Default\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'loadNamedQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t try{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t }catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var queryName = this.__savedQueries[v]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var data = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data = data.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'setNamedQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'clearSearch\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t mode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar listName = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t listName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(listName == \\'\\') {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t alert(\\'Error. List to search not defined.\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var query = this.value\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.queryData = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'save\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar queryDef = this.value[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(queryName == \\'\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\\\\\\\\\"color:red;\\\\\\\\\\\\\">You have not specified the query name</span>\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryName = queryName \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryDefinition = queryDef \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdebugger;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar data = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\\\\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata = data.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'andor\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.data._parsed[ia].andor = v;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'datefriendly\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"drag\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Week-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next 7 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Month-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last 7 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last 30 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next 30 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Year-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Quarter-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t iEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'daterange\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerDateRangeStart.format != frm){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar td = new Date();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\trange = range.split(\\'..\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(range.length == 1) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\trange.push(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'datefriendlysingle\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Today\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Yesterday\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Tomorrow\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tiEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"wrapper\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t}\\\\\\\\r\\\\\\\\n}\\\\\",\\\\r\\\\n\\\\t\\\\\"dataJSON\\\\\": \\\\\"{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"fields\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"firstname\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"label\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"control\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"type\\\\\\\\\\\\\": \\\\\\\\\\\\\"combolist\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"data\\\\\\\\\\\\\": [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"html\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"value\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"buttons\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"add\\\\\\\\\\\\\": \\\\\\\\\\\\\"Add new search field...\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"remove\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"filter\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"date\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"list\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"number\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"plus\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"minus\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"save\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />Save query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"load\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Load query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"run\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Run query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"menu\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"daterangepicker\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"ok\\\\\\\\\\\\\": \\\\\\\\\\\\\"&nbsp;OK&nbsp;\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\": \\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Cancel\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"clearsearch\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Clear search\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringloadquery\\\\\\\\\\\\\": \\\\\\\\\\\\\"Specify saved query to load\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringsavequery\\\\\\\\\\\\\": \\\\\\\\\\\\\"Specify name for query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringquerynamewatermark\\\\\\\\\\\\\": \\\\\\\\\\\\\"Query name\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchOptions\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"displayDebuggingInfo\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"placeHolder\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"uniqueKey\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"loadType\\\\\\\\\\\\\": \\\\\\\\\\\\\"All\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\": 1,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"subtype\\\\\\\\\\\\\": \\\\\\\\\\\\\"AdvancedListSearch\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n}\\\\\",\\\\r\\\\n\\\\t\\\\\"css\\\\\": \\\\\".queryBuilder > div {padding: 2px;}\\\\\\\\r\\\\\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div {display: table-row;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\\\\\r\\\\\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\\\\\r\\\\\\\\n\\\\\\\\r\\\\\\\\n\\\\\\\\r\\\\\\\\n\\\\\",\\\\r\\\\n\\\\t\\\\\"localsvg\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\\"javascript\\\\\": \\\\\";\\\\\",\\\\r\\\\n\\\\t\\\\\"methodForDefiningControl\\\\\": \\\\\"Specify Now\\\\\"\\\\r\\\\n}\",\\r\\n\\t\"css\": \".queryBuilder > div {padding: 2px;}\\\\r\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\r\\\\n.queryBuilderList > div {display: table-row;}\\\\r\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\r\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\r\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\r\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\",\\r\\n\\t\"localsvg\": \"\",\\r\\n\\t\"javascript\": \";\",\\r\\n\\t\"methodForDefiningControl\": \"Specify Now\"\\r\\n}',\n\tcss: '.queryBuilder > div {padding: 2px;}\\r\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\r\\n.queryBuilderList > div {display: table-row;}\\r\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\r\\n.queryBuilderList > div > div:first-child {width:100%;}\\r\\n.queryBuilderList > div > div > div {display: flex;}\\r\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now'\n}",
                        "subtype": "AdvancedListSearch",
                        "class": "",
                        "style": ""
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "",
                        "icon": "$$table.query",
                        "displayText": "[AdvancedSearch]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlData.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlSettings.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['ADVANCEDSEARCH'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] }",
                        "_jsOnChangeFunction": "function onChange_AdvancedSearch_9bd032594af84e248ed78c025938bf3b(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('ADVANCEDSEARCH');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'ADVANCEDSEARCH': {info: {controlType: 'AdvancedListSearch'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 500px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; height: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>",
                "idInternal": "dd1800d6-0bbb-4428-9802-771982029090",
                "crc": "4294936429",
                "v": {
                    "controlType": "list",
                    "variableName": "dummy_list",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptClientSideWatches": "{dialog.object}.dialogWatches['ENABLE_DUMMY_LIST'] = {\n\t\twatch: [],\n\t\tvariables: [],\n\t\tonChange: function(data) {\n\t\n\tvar dialog = {};\n\tvar summary = {};;\n\t;\n\tvar enable = (false);\n\tvar eles = $cetp($n('V.R' + data.rowNumber + '.DUMMY_LIST'),$('{dialog.componentName}.R'+data.rowNumber));\n\tif(typeof eles.length == 'undefined' || eles.length == 0) eles = [$('{grid.componentname}.'+'V.R' + data.rowNumber + '.DUMMY_LIST')];\n\tvar pObj = {dialog.object}.getControl('dummy_list'); if(pObj) { if(typeof pObj.setDisabled != 'undefined') {  pObj.setDisabled(!enable,eles); return true;  } }\n\tif(typeof {dialog.object}._buttons['dummy_list'] != 'undefined') {\n\t{dialog.object}._buttons['dummy_list'].setDisabled(!enable,eles)\n\t} else {\n\tfor(var i=0; i<eles.length;i++) eles[i].disabled = !enable;\n\t}\n\t;;\n\t{dialog.object}._executeEvent('onWatchEvent',{type: 'enable', control: 'dummy_list', flag: enable});}\n}\n\n",
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_dummy_list_dd1800d60bbb44289802771982029090(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('DUMMY_LIST');};",
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_listViewData": "{dialog.object}._listViewData['DUMMY_LIST'] = [[dialog.listViewData.dummy_list]]; ",
                        "javascript_listViewSettings": "{dialog.object}._listViewSettings['DUMMY_LIST'] = [[dialog.listViewSettings.dummy_list]]; ",
                        "javascript_listview": "{dialog.object}._controls['DUMMY_LIST'] =  { type: 'list',  data: {dialog.object}._listViewData['DUMMY_LIST'],  onInitialize: function() {\n\t\tvar pe = $(this.contId).parentElement;\n\t\tif(typeof this.listVariableName != 'undefined') { \n\t\t\tvar _cn = '{dialog.componentName}_' + this.listVariableName.toUpperCase() + '_2';\n\t\t\t$acn(pe,_cn);\n\t\t}\n\t\n\n\n\nvar flagCordova = true;\nif (typeof window['cordova'] == 'undefined') {\n\tvar flagCordova = false;\n}\nif(flagCordova) { \n\tif(this.__flagPersist) { \n\t\tif(this.__persistWhere.toLowerCase() == 'indexdb') { \n\t\t\talert('Error. App is running as a Cordova app. You cannot set the persist location to \\'IndexedDB\\' for Cordova applictions. You must set the persist location to \\'FileSystem\\'');\n\t\t}\n\t}\n}\n\n;var that = this;\ntry{\n\t\n\tif(this._hasDetailView) { \n\t\tif(this._JSONForm) { \n\t\n\t\t\tsetTimeout(function() { \n\t\t\tthat.resize();\n\t\n\t\t\t},10);\n\t\t}\n\t}\n}catch(e){};\n\t\n\n\nif(typeof this.__flagHasFixedColumnFooters != 'undefined') { \n\tif(this.__flagHasFixedColumnFooters) { \n\t\tthis.refresh();\n\t}\n}\n\n; if(this.initializeVirtualizedColumns) this.initializeVirtualizedColumns(); if(this._setupAlphabetSearch) this._setupAlphabetSearch.call(this)},  settings: {dialog.object}._listViewSettings['DUMMY_LIST'] }"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "List1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "enableExpression": "javascript:false",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "color": "",
                        "icon": "$$control.browse",
                        "displayText": "[dummy_list]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>"
                    },
                    "listView": {
                        "listGUID": "549ec0a5-de69-4089-8d1e-8158efcaecbb",
                        "compressList": false,
                        "class": "<Default>",
                        "style": "",
                        "dataSourceType": "Static",
                        "overrides": "",
                        "flagIsDefined": true,
                        "staticData": "firstname",
                        "staticJSONData": "",
                        "height": "0px",
                        "width": "0px",
                        "hasParentList": false,
                        "parentListId": "",
                        "preLoadData": false,
                        "emptyListWhenParentChanges": false,
                        "objectNameInParentListForData": "",
                        "linkingFields": {
                            "parent": "",
                            "this": ""
                        },
                        "hasDataHeader": false,
                        "readonlyList": false,
                        "captureFocus": true,
                        "allowKeyboardNavigationToGiveFocus": true,
                        "headerHTML": "",
                        "noRecordsMessage": {
                            "has": false,
                            "HTML": "No records in list.",
                            "addrecordwhenmessageiclicked": true,
                            "centerH": true,
                            "centerV": true
                        },
                        "templateItemsJSON": "[]",
                        "hasDataFooter": false,
                        "footerHTML": "",
                        "headerStyle": "",
                        "footerStyle": "",
                        "hasFixedHeader": false,
                        "fixedHeaderHTML": "",
                        "fixedHeaderStyle": "",
                        "fixedHeaderClassName": "",
                        "hasFixedFooter": false,
                        "fixedFooterHTML": "",
                        "fixedFooterStyle": "",
                        "fixedFooterClassName": "",
                        "fillPanelContainer": false,
                        "static": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "jsFuncDS": {
                            "functionName": "",
                            "columnNames": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "sampleData": ""
                        },
                        "transform": {
                            "apikey": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "formId": "",
                            "fetchFormDefinition": false,
                            "allfields": true,
                            "fieldlist": "",
                            "paginate": false,
                            "pagesize": "",
                            "hasNavigationBar": false,
                            "navigationBarJson": ""
                        },
                        "excelfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "csvfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "jsonfile": {
                            "filename": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "firestore": {
                            "executeWhere": "Server",
                            "databaseURL": "",
                            "serviceAccountConnString": "",
                            "collectionName": "",
                            "queryDefinition": "",
                            "maxRowCount": 10000,
                            "cs": {
                                "apikey": "",
                                "authDomain": "",
                                "databaseURL": "",
                                "projectId": "",
                                "method": "ConnectionString",
                                "connectionString": ""
                            },
                            "trackChanges": false,
                            "enablePersistence": true,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "mongodb": {
                            "connectionstring": "",
                            "database": "",
                            "collection": "",
                            "fields": "",
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "filter": "",
                            "order": ""
                        },
                        "clientSideFilterExpression": "",
                        "clientSideOrderExpression": "",
                        "custom": {
                            "xbasicfunctionname": "",
                            "xbasicdefinition": "",
                            "localXbasic": false,
                            "localXbasicDef": "",
                            "javascriptfunctionname": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": ""
                        },
                        "dataSeriesSeriesName": "",
                        "dataSeries": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "sql": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "refreshSchemaOnEdit": true,
                            "storedSchemaJSON": "",
                            "flagTableInfoHasBeenUpdated": false,
                            "connectionString": "",
                            "selectType": "FieldsFromTable",
                            "tablename": "",
                            "fieldlist": "",
                            "filter": "",
                            "distinct": false,
                            "order": "",
                            "sqlstatement": "",
                            "portableSQL": true,
                            "sqlstatementforfieldlist": "",
                            "first": -1,
                            "primaryKey": "",
                            "serverSideAfterQueryEvent": "",
                            "serversidePostProcessJSONEvent": "",
                            "serverSideBeforeQueryEvent": "",
                            "getCountOfRecordsInQuery": true,
                            "sqlSecurityJSON": "",
                            "serversidedatenumberformatjson": "",
                            "useSubselectsForNestedQueries": true,
                            "useTransactions": true,
                            "stripCurlyBracketsFromGUIDS": false,
                            "allowIncrementalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "setrowcounttoargument": false,
                            "rowcountargumentname": "",
                            "sanitizedata": false,
                            "optimizedDetailViewSync": false,
                            "captureDebuggingInfoForOptimizedSync": false,
                            "captureDebuggingInfoS3ConnectionString": "<default>",
                            "optimizedDetailViewSyncWriteConflicts": false
                        },
                        "dbf": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": "",
                            "isDefined": false,
                            "fieldmap": "",
                            "filter": "",
                            "order": ""
                        },
                        "variablename": "",
                        "showTitleRow": false,
                        "titleText": "",
                        "hasFreeformTemplate": false,
                        "freeformTemplate": "",
                        "javascript": {
                            "onBeforePopulate": "",
                            "onPopulate": "",
                            "onBeforeAddRows": "",
                            "onBeforeRemoveRows": "",
                            "onBeforeUpdateRow": "",
                            "onAddRows": "",
                            "onChange": "",
                            "onRemoveRows": "",
                            "onUpdateRow": "",
                            "onBeforeDestroy": "",
                            "onDestroy": "",
                            "onBeforeListDraw": "",
                            "onBeforeListClear": "",
                            "onInitialize": "",
                            "onBeforeItemDraw": "",
                            "onListDraw": "",
                            "onItemDraw": "",
                            "onNavigate": "",
                            "onSelect": "",
                            "onBeforeSelect": "",
                            "afterSelect": "",
                            "onDblClick": "",
                            "onClick": "",
                            "onRightClick": "",
                            "onTap": "",
                            "onDblTap": "",
                            "onDownHold": "",
                            "onFocus": "",
                            "onFieldClick": "",
                            "onRowCheck": "",
                            "onFieldDblClick": "",
                            "onFieldRightClick": "",
                            "onFocusOut": "",
                            "onBlur": "",
                            "beforeFetchMore": "",
                            "afterFetchMore": "",
                            "beforePageNavigate": "",
                            "afterPageNavigate": "",
                            "beforeRefreshRow": "",
                            "afterRefreshRow": "",
                            "afterRefreshData": "",
                            "afterRenderComplete": "",
                            "afterAjaxCallback": "",
                            "beforeClientSideFilter": "",
                            "afterClientSideFilter": "",
                            "beforeServerSideSort": "",
                            "afterServerSideSort": "",
                            "afterServerSideSummaryCompute": "",
                            "afterClientSideSummaryCompute": "",
                            "onListColumnSelectorChanged": "",
                            "beforeClientSideSort": "",
                            "afterClientSideSort": "",
                            "onInplaceEditStart": "",
                            "oninplaceeditdeleterow": "",
                            "oninplaceeditdeleterowAfter": "",
                            "onInplaceeditSave": "",
                            "onInplaceEditCancel": "",
                            "oninplaceeditAddRow": "",
                            "afterinplaceeditAddRow": "",
                            "afterinplaceeditAddRowWasSaved": "",
                            "afterRefreshListIncremental": "",
                            "beforeMenuOpen": "",
                            "onMenuClose": "",
                            "showeditrowicon": "",
                            "showaddrowicon": "",
                            "onSwipe": "",
                            "onScroll": "",
                            "onPullRelease": "",
                            "onPullEnd": "",
                            "onPull": "",
                            "afterSearchComplete": "",
                            "beforeSearch": "",
                            "onSearchResultTooLarge": "",
                            "onSearchResultTooLargeForLocalStorage": "",
                            "onBeforePersistToLocalStorage": "",
                            "onPersistToLocalStorage": "",
                            "onRestoreFromLocalStorage": "",
                            "onListReady": "",
                            "onResize": ""
                        },
                        "inplaceedit": {
                            "editrowsecuritygroups": "",
                            "addrowsecuritygroups": "",
                            "deleterowsecuritygroups": ""
                        },
                        "_hasIntegerControl": false,
                        "pullpastEnd": {
                            "YSetting": "auto",
                            "XSetting": "auto",
                            "Duration": 1000
                        },
                        "displayTextForNulls": "",
                        "hasMoreEventsDefined": false,
                        "hasMultipleLayouts": false,
                        "autoselectLayoutOnOrientationChange": false,
                        "autoSelectLandscape": "",
                        "autoSelectPortrait": "",
                        "subTheme": "",
                        "dragScrollDirection": "Both",
                        "scrolling": {
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "hasSearchPart": false,
                        "hasAlphabetbuttonsearch": false,
                        "alphabetbuttonsearchjson": "",
                        "hasquicksearch": false,
                        "qyucjsearchjson": "",
                        "searchPart": {
                            "fieldMap": "",
                            "searchFieldProperties": "",
                            "searchStyle": "IndividualControls",
                            "combineMultipleConditionsUsing": "AND",
                            "keywordsearchControl": "",
                            "keywordSearchFields": "",
                            "showDebugInfo": false,
                            "debugInfoPlaceholder": "",
                            "delayPopulateListTillActiveSearch": false,
                            "searchErrorPlaceholder": "",
                            "setMaxProperties": false,
                            "maxSearchSizeJSON": ""
                        },
                        "controlCSS": "",
                        "includeCRC": false,
                        "userDefinedMethodsJSON": "{\n\t\"functions\": []\n}",
                        "reverseColumnOrder": false,
                        "enableHorizontalScrolling": false,
                        "mincolumnwidth": "150px",
                        "maxcolumnwidth": "",
                        "enablewordwrap": true,
                        "persistDataToLocalStorage": false,
                        "persistWhere": "LocalStorage",
                        "persistMode": "Full",
                        "persisListLayout": false,
                        "loadPersistedLayout": false,
                        "incrementalRefreshAfterLoad": false,
                        "versionNumber": 1,
                        "hasDetailView": false,
                        "detailView": {
                            "method": "FieldMap",
                            "fieldMap": "",
                            "jsonformname": "",
                            "propertygridname": "",
                            "viewboxname": "",
                            "jsonformdefinition": "Pre-defined",
                            "propertygriddefinition": "Pre-defined",
                            "container": "",
                            "serverSideUpdateRules": "DirtyFieldsOnly",
                            "showDebuggingInfo": false,
                            "placeholderForDebuggingInfo": "",
                            "placeholderGlobalErrors": "",
                            "suppressGlobalErrorAlerts": false,
                            "globalErrorStyle": "font-family: Arial; font-size: 10pt; color: red; border: solid 1px red; width: 100%;",
                            "showFadeOutConfirmationMessage": false,
                            "fadeOutMessagePlaceholder": "",
                            "fadeOutMessageText": "",
                            "fadeOutMessageDuration": 2000,
                            "fadeOutMessageStyle": "Default",
                            "submitLocationInformation": false,
                            "noRecordInListIsSelectedSetting": "None",
                            "newRecordPolicy": "UseControlDefault",
                            "useServerSideSyncLog": false,
                            "clearServerSideSyncLog": true,
                            "updateServerSideSyncLogAfterEachInsert": false,
                            "convertInsertToUpsert": false,
                            "useTimestampfieldForIncrmentalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "synchronizationHandler": "",
                            "synchronizationRefreshHandler": "",
                            "refreshListIncrementalHandler": "",
                            "synchronizationLevel": "EachListInHierarchy",
                            "phoneGap": {
                                "mediaFilesSettingsJSON": ""
                            },
                            "__doNotshowsynclogPrompt": true,
                            "firestore": {
                                "primarykeyfornewrecords": "<auto>"
                            },
                            "customization": {
                                "clientSideErrorWarning": "Cannot save because there are validation errors.",
                                "dirtyDetailViewRecord": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "You must first save or undo the changes you have made to the List's Detail View."
                                },
                                "confirmFormResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to the List's Detail View?"
                                },
                                "confirmRowResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to this record?"
                                },
                                "confirmDeleteWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to delete this record?"
                                },
                                "writeConflict": {
                                    "message": "Write conflict. Tap here to resolve.",
                                    "useMineMessage": "Use mine ('{myvalue}')",
                                    "useTheirsMessage": "Use theirs ('{theirvalue}')",
                                    "useMineAll": "Use mine for all fields",
                                    "useTheirsAll": "Use theirs for all fields"
                                },
                                "databaseError": {
                                    "update": "Record was not updated.|More...|Less",
                                    "insert": "Record was not inserted.|More...|Less",
                                    "delete": "Record was not deleted.|More...|Less"
                                },
                                "useCustomClasses": false,
                                "customClasses": "",
                                "setClassonEditedRows": true,
                                "css": {
                                    "dirtyRecord": "",
                                    "newRecord": "",
                                    "serverSideError": "",
                                    "deletedRecord": "",
                                    "dirtyRecordRow": "",
                                    "newRecordRow": "",
                                    "serverSideErrorRow": "",
                                    "deletedRecordRow": "",
                                    "hasUnSyncedMediaFiles": ""
                                }
                            },
                            "refreshRowOnSelect": false,
                            "synchronizeImmediately": false,
                            "pushServerUpdatesToClientOnCommit": false,
                            "tablePropertiesDefined": false,
                            "autoCommitDetailViewEdits": true,
                            "syncBatchSize": 0,
                            "synchProgressPlaceholder": "",
                            "synchProgressProperties": "",
                            "dirtyControlClassName": "",
                            "linkedfreeformcontrols": "",
                            "detailviewposition": "OnPage",
                            "containerName": "",
                            "inListSettingsJSON": "",
                            "javascript": {
                                "canUpdateList": "",
                                "afterUpdateList": "",
                                "canSynchronizeList": "",
                                "afterSynchronizeList": "",
                                "afterSynchronizeListCompleted": "",
                                "afterRefreshListIncremental": "",
                                "hasClientSideValidationErrors": "",
                                "afterSynchronizeListBatch": "",
                                "beforeSynchronizeListBatchStart": "",
                                "afterDetailViewSave": "",
                                "afterSynchronizeListBatchEnd": "",
                                "canCancelBatch": "",
                                "afterCancelBatch": "",
                                "afterListRowSelectCancelled": "",
                                "canResetRow": "",
                                "canDeleteRow": "",
                                "afterDeleteRow": "",
                                "canUndoEdits": "",
                                "afterResetRow": "",
                                "afterUndoEdits": "",
                                "canNewRecord": "",
                                "afterNewRecord": "",
                                "modeChanged": "",
                                "onStateChanged": "",
                                "afterDetailViewPopulate": "",
                                "beforeDetailViewPopulate": "",
                                "beforeMediaFilesUploaded": "",
                                "afterMediaFilesUploaded": "",
                                "listReadyToPersist": "",
                                "beforeCRUDExecute": "",
                                "onMediaFilesUploadErrors": "",
                                "onNoMediaFilesToFetch": "",
                                "beforeMediaFilesDownloaded": "",
                                "afterMediaFilesDownloaded": "",
                                "beforeDeleteOrphanMediaFiles": "",
                                "afterDeleteOrphanMediaFiles": "",
                                "onSynchronizationStep": ""
                            },
                            "hasClientSideEventsDefined": false,
                            "serverSideEvent": {
                                "validate": "",
                                "errorMessageTranslate": "",
                                "onsynchronize": "",
                                "aftersynchronize": "",
                                "aftersynchronizeRecord": ""
                            }
                        },
                        "dragScrollMomentum": true,
                        "dragScroll": {
                            "hasCustomSnapSettings": false,
                            "snap": {
                                "x": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                },
                                "y": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                }
                            },
                            "momentum": {
                                "friction": 4,
                                "duration": 1000
                            }
                        },
                        "behavior": {
                            "pulltorefresh": false,
                            "pulltoRefreshSettingsJSON": "",
                            "drag": {
                                "has_side_to_side_rowdragbehavior": false,
                                "settingsJSON": "",
                                "has_reorder": false,
                                "reorderSettingsJSON": ""
                            }
                        },
                        "hasCheckBoxSelectColumn": false,
                        "checkboxSelectColumnCustomzationJSON": "",
                        "searchHighlighting": false,
                        "searchHighlightClass": "",
                        "searchHighlightStyle": "color: red;",
                        "useDragScrolling": "Auto",
                        "customSettingsJSON": "",
                        "clientSideVirtualColumns": "",
                        "clientSideLookupColumnsJSON": "",
                        "allowInplaceediting": false,
                        "inplaceEditingSettingsJSON": "",
                        "clientSideGroupBreaksHas": false,
                        "clientSideGroupBreakJSON": "",
                        "listNavigatorHas": false,
                        "listNavigatorJSON": "",
                        "serverSideRowStyle": "",
                        "clientSideRowStyle": "",
                        "alternatingRowColor": false,
                        "evenRowColor": "",
                        "oddRowColor": "",
                        "defaults": {
                            "indexLayout": 1
                        },
                        "fieldsArray": {
                            "fields": [
                                {
                                    "name": "firstname",
                                    "type": "C",
                                    "displayFormat": "",
                                    "serverSideInlineStyle": "",
                                    "serverSideConditionalStyle": "",
                                    "clientSideConditionalStyle": "",
                                    "clientSideConditionalCellStyle": "",
                                    "encryptfield": false,
                                    "encryptionkey": "",
                                    "decodeValue": false,
                                    "decodeValueLookupListJSON": "",
                                    "securityGroups": "",
                                    "javascriptAddressible": false,
                                    "serversideShowhideExpn": "",
                                    "clientSideShowHideExpn": "",
                                    "controlType": "Label",
                                    "clientsideInlineStyle": "",
                                    "wordwrap": false,
                                    "wordwrapOption": "normal",
                                    "clientsideClass": "",
                                    "baseExpression": "",
                                    "searchPropertiesJSON": "",
                                    "image": {
                                        "base64Encode": false,
                                        "type": "JPG",
                                        "scale": "",
                                        "fileNameTransformation": "",
                                        "imageDataType": "Name",
                                        "base64Prefix": "data:image/jpg;base64,",
                                        "noImageFoundImage": ""
                                    },
                                    "sourceTableType": "",
                                    "detailview": {
                                        "serversidevalidation": "",
                                        "defaultValueJavascript": "",
                                        "onDetailViewPopulateJavascript": "",
                                        "onListUpdateFromDetailView": "",
                                        "updateable": true,
                                        "checkforwriteConflicts": true,
                                        "blankIsNull": false,
                                        "updatePermissionSecurityGroups": "",
                                        "serverSidePermissionExpression": "",
                                        "imageCapturePropertiesJSON": "",
                                        "ExifCapturePropertiesJSON": ""
                                    },
                                    "hide": false,
                                    "button": {
                                        "type": "Text",
                                        "image": "",
                                        "label": "Button",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "hyperlink": {
                                        "label": "Hyperlink",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "actionType": "Javascript",
                                        "href": "",
                                        "target": "New Window",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "unboundtype": "",
                                    "dynamicImage": {
                                        "definition": "",
                                        "class": "",
                                        "style": "",
                                        "bubbleHelp": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false,
                                        "twoStateImage": false,
                                        "swapImageName": "",
                                        "toggleOnClick": true,
                                        "rotationType": "90"
                                    },
                                    "menu": {
                                        "definitionJSON": "",
                                        "buttonType": "Image",
                                        "text": "Menu",
                                        "image": "svgIcon=#alpha-icon-bars:icon,24",
                                        "image_rotate": true,
                                        "bubblehelp": "",
                                        "inlinestyle": "",
                                        "className": "",
                                        "focusrow": false,
                                        "imageOpen": "svgIcon=#alpha-icon-xLarge:icon,24",
                                        "fireEventsWhenRowGetsFocus": false,
                                        "image_rotate_duraction": 300
                                    },
                                    "virtualJavascript": {
                                        "javascript": ""
                                    },
                                    "serverSideSummaryFieldsHas": false,
                                    "horizontalwidth": "200px",
                                    "serverSideSummaryFields": "",
                                    "clientSideSummaryFieldsHas": false,
                                    "clientSideTypeTransform": "None",
                                    "clientSideDateTemplate": "MM-dd-yyyy",
                                    "clientSideDateFormat": "<None>",
                                    "clientSideNumericFormat": "",
                                    "inplaceEditing": {
                                        "template": "",
                                        "javascript": {
                                            "validation": "",
                                            "initialvalue": ""
                                        },
                                        "serverside": {
                                            "validation": ""
                                        },
                                        "controltype": "Textbox",
                                        "controljson": "",
                                        "allow": true,
                                        "conditionalalloweditJSfunction": "",
                                        "securitygroups": ""
                                    },
                                    "customControl": {
                                        "definition": ""
                                    },
                                    "chartPropertiesJSON": "",
                                    "isComputedColumn": false,
                                    "ink": {
                                        "width": "300",
                                        "height": "",
                                        "sizeMethod": "Width-Height",
                                        "scale": 0.25,
                                        "zoom": "50%",
                                        "boundsType": "Page",
                                        "boundsMargin": 10,
                                        "boundsX": 0,
                                        "boundsY": 0,
                                        "boundsWidth": 100,
                                        "boundsHeight": 100
                                    },
                                    "star": {
                                        "maxstars": 5,
                                        "selectedColor": "Gold",
                                        "unselectedColor": "Gray",
                                        "width": "26px",
                                        "height": "26px",
                                        "readonly": false
                                    },
                                    "integer": {
                                        "min": "0",
                                        "max": "100",
                                        "buttonClass": "[theme:button.base.className]",
                                        "valueClass": "[class.dialogInput]",
                                        "ValueStyle": "width: 40px;",
                                        "hasIncrementBy10": false,
                                        "hasIncrementBy100": false
                                    },
                                    "javascript": {
                                        "methodName": ""
                                    },
                                    "map": {
                                        "height": "300",
                                        "width": "300",
                                        "markerColor": "green",
                                        "markerSize": "<default>",
                                        "zoom": "8"
                                    },
                                    "radiobuttons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "checkboxButtons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "switch": {
                                        "onvalue": "On",
                                        "offValue": "Off",
                                        "width": "100px",
                                        "direction": "ltr",
                                        "readonly": false,
                                        "displaystyle": "Switch",
                                        "htmlOn": "On",
                                        "htmlOff": "Off",
                                        "iconOn": "svgIcon=#alpha-icon-checkRounded:icon,24",
                                        "iconOff": "svgIcon=#alpha-icon-squareRounded:icon,24",
                                        "behavior": "ComboBox",
                                        "groupName": "Group1"
                                    },
                                    "unboundField": false,
                                    "display": "{data=1}{I:'$$control.smartField'} firstname (C)",
                                    "xbfunction": "",
                                    "onItemDrawSystemJavascript": "",
                                    "onItemDrawInlineStyle": "",
                                    "onItemDrawConditionalStyle": "",
                                    "controlHTML": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "controlHTMLFreeformLayout": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "baseName": "firstname",
                                    "_templateEditingFreeform": "{firstname}"
                                }
                            ]
                        },
                        "layoutsArray": {
                            "layouts": [
                                {
                                    "Name": "Default",
                                    "Type": "Column",
                                    "isDefaultLayout": true,
                                    "friendlyName": "",
                                    "kanbansettingsjson": "",
                                    "customsettingsjson": "",
                                    "chartsettingsjson": "",
                                    "mapsettingsjson": "",
                                    "calendarsettingsjson": "",
                                    "showColumnTitles": true,
                                    "hasColumnActions": false,
                                    "columnActionsJSON": "",
                                    "template": "",
                                    "snakingLayoutWidth": "1in",
                                    "itemHeight": "",
                                    "contentclassname": "",
                                    "clientSideGroupBreaksHas": false,
                                    "clientsidegroupBreaksMode": "<Use Default>",
                                    "clientSideGroupBreakJSON": "",
                                    "freeformType": "Vertical",
                                    "className": "",
                                    "hoverclassName": "",
                                    "selectedClassName": "",
                                    "style": "",
                                    "titleClassName": "",
                                    "hasListItemFooter": false,
                                    "listItemFooter": "",
                                    "HaslistColumnSeparator": false,
                                    "listFixedColumnsSettingsJSON": "",
                                    "hasVirtualizedColumns": false,
                                    "listItemFooterInitialState": "Open",
                                    "listColumnSeparatorHas": false,
                                    "listColumnSeparator": {
                                        "propertiesJSON": ""
                                    },
                                    "dragScroll": {
                                        "hasCustomSnapSettings": false,
                                        "snap": {
                                            "x": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            },
                                            "y": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            }
                                        },
                                        "momentum": {
                                            "friction": 4,
                                            "duration": 1000
                                        }
                                    },
                                    "dragScrollMomentum": true,
                                    "columns": [
                                        {
                                            "heading": "Firstname",
                                            "headingInlineStyle": "",
                                            "headingClassName": "",
                                            "Template": "{firstname}",
                                            "footerTemplate": "",
                                            "dataInlineStyle": "",
                                            "canSort": true,
                                            "sortColumnName": "firstname",
                                            "initialsortdirection": "Ascending",
                                            "columnWidth": "flex(1)",
                                            "sortWhere": "ClientSide",
                                            "sortJavascript": "",
                                            "serverSideSortExpression": "",
                                            "javascript": {
                                                "onclick": "",
                                                "onrightclick": ""
                                            },
                                            "hideColumnIfFieldHidden": true,
                                            "initialStateHidden": false,
                                            "hideColumnReferenceField": "firstname",
                                            "columnIsResizeable": false,
                                            "responsiveColumnWidth": "",
                                            "hidecolumnactions": false,
                                            "hasFixedFooter": false,
                                            "hasDataFooter": false,
                                            "fixedFooterjSON": "",
                                            "datafooterJSON": "",
                                            "hasColumnFooter": false,
                                            "columnFooterJSON": "",
                                            "unboundtype": "",
                                            "hasIconsIncolumnHeader": false,
                                            "columnIconsJSON": "",
                                            "name": "firstname",
                                            "display": "{I:'$$control.smartField'} firstname",
                                            "enableCanSort": true,
                                            "enableShowInitialSortDirection": true,
                                            "enableShowSortField": true
                                        }
                                    ]
                                }
                            ]
                        },
                        "odata": {
                            "url": "http://services.odata.org/V4/Northwind/Northwind.svc",
                            "serviceType": "OData",
                            "requiresAuthentication": false,
                            "usesCSRFToken": false,
                            "authType": "Basic",
                            "authUsername": "",
                            "authPassword": "",
                            "containerName": "",
                            "columns": "",
                            "filter": "",
                            "order": "",
                            "max_rows": -1,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "primarykey": "",
                            "primaryKeyType": ""
                        },
                        "paginateData": false,
                        "pageSize": 20,
                        "paginateMethod": "FetchMore",
                        "fetchMoreButtonHTML": "More records...",
                        "fetchMoreButtonType": "Button",
                        "fetchMoreButtonStyle": "",
                        "fetchMoreButtonContainerStyle": "text-align: center;",
                        "hasNavigationBar": false,
                        "navigationBarJson": "",
                        "serverSideSorting": false,
                        "breaks": {
                            "has": false,
                            "field": "",
                            "sortDescending": false,
                            "sortOnBreakField": true,
                            "fieldChars": -1,
                            "template": "",
                            "stringDictionary": "",
                            "caseSensitive": false,
                            "breakType": "Automatic",
                            "userDefinedBreakGroups": "",
                            "geographyUnits": "Meters|Meters"
                        },
                        "allowNullSelection": true,
                        "allowAnyValue": false,
                        "allowTextSelection": false,
                        "allowNullDeselection": false,
                        "loopNavigate": false,
                        "loopNavigateNullSelection": false,
                        "delayRenderTillVisible": false,
                        "delayRenderTillRefresh": false,
                        "delayRenderTillUserLogsIn": false,
                        "multiSelect": false,
                        "multiSelectMode": "Control-click",
                        "separator": ",",
                        "localCSS": "",
                        "virtualization": {
                            "type": "None",
                            "onNavigateBehavior": "Navigate",
                            "size": 50,
                            "maxSize": 0,
                            "offset": 10,
                            "navigation": {
                                "pull": true,
                                "pullSize": 40,
                                "prevHTML": "Previous",
                                "prevClassName": "",
                                "prevPressedClassName": "",
                                "nextHTML": "Next",
                                "nextClassName": "",
                                "nextPressedClassName": ""
                            }
                        },
                        "scroller": {
                            "has": false,
                            "messageType": "Template",
                            "messageTemplate": "",
                            "messageJS": "",
                            "customizationIsDefined": false,
                            "flow": "ttb",
                            "location": "after",
                            "className": "",
                            "focusClassName": "",
                            "dialClassName": "",
                            "style": "",
                            "offset": {
                                "top": "0px",
                                "bottom": "0px",
                                "left": "0px",
                                "right": "0px"
                            },
                            "slider": {
                                "className": "",
                                "innerClassName": "",
                                "handle": {
                                    "className": "",
                                    "style": ""
                                },
                                "shadow": {
                                    "show": true,
                                    "className": "",
                                    "style": ""
                                },
                                "message": {
                                    "show": "auto",
                                    "className": "",
                                    "topClassName": "",
                                    "bottomClassName": "",
                                    "leftClassName": "",
                                    "rightClassName": "",
                                    "style": "",
                                    "lowSwitch": 75,
                                    "highSwitch": 75
                                }
                            },
                            "dial": {
                                "show": "drag",
                                "invertDrag": false,
                                "className": "",
                                "message": {
                                    "className": ""
                                },
                                "style": "",
                                "pixelStep": 4,
                                "size": 2
                            }
                        },
                        "precalc": {
                            "javascriptOnOrientationChange": ""
                        },
                        "previewMode": false,
                        "__xbjs": "ps.__checkedImage = \"svgIcon=#alpha-icon-checkCircle:icon,24\"\nps.__uncheckedImage = \"svgIcon=#alpha-icon-circle:icon,24\"",
                        "_templateCSS": "\n",
                        "allchildren": "",
                        "optimizeJSONSize": true
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'DUMMY_LIST': {info: {controlType: 'list'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "listviewData": "[[%%[[dummy_list]]%%]]",
                    "listviewSearchReplace": "[[dialog.listViewData.dummy_list]] = tmpl.page_fields[3].precalc.listViewData",
                    "listViewHasBeenRendered": false,
                    "js_afterListInitialize": "var listObj = {UXPRERENDEREDALIAS}_DlgObj.getControl('DUMMY_LIST');\nif(listObj) listObj._state.recordCount = 0;\nif(listObj) listObj._state.recordCountFormatted = '0';\nif(listObj) listObj._state.lastBreakValue = '<None>';\nif(listObj) listObj._state.pageCount = 0;\nif(listObj) listObj._state.pageSize = 20;\nif(listObj) {var ele = $('{UXPRERENDEREDALIAS}.dummy_list.RECORDCOUNT'); if(ele) ele.innerHTML = listObj._state.recordCountFormatted;};\nif(listObj) listObj._state.paginated = false;\n\nif(listObj) listObj._state.highlight = {  };\nif(listObj) listObj._state.whereClause = '';\nif(listObj) listObj._state.whereParameters = '';\nlistObj._state.order = '';\n\t\t\n\t\tvar flagPersist = false;\n\t\tif(typeof listObj._flagPersistDataOK != 'undefined') { \n\t\t\tif(listObj._flagPersistDataOK) { \n\t\t\t\tvar data = listObj._data;\n\t\t\t\tlistObj.persistToStorage({mode:'populate', data: data, submode: 'ListViewData'});\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n;\n{UXPRERENDEREDALIAS}_DlgObj._list_executeEvent('DUMMY_LIST','afterRenderComplete',{});\n\nif(listObj._refreshStateMessages) listObj._refreshStateMessages();",
                    "list_CapturedFieldValueFromFirstRow": ""
                },
                "containerStartIndex": 0
            }
        ],
        "builderType": "Dialog2",
        "guid": "8f9ce967-74a0-4f32-b442-47c7dea05051",
        "componentName": "SEARCH_UX",
        "componentFilename": "C:\\Users\\lukes\\Documents\\AlphaAnywhere\\Phase 1 Project\\Phase 1 Project.WebProjects\\Default.WebProject\\search_ux.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": false,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": false,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "72228034-2134-4681-ba14-4d2ac137f203\n",
        "designPaneIndex": 1,
        "masterPaneC": "controls",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 12,
        "clientSideEventIndexC": "12",
        "lastControlSelected": "insert_dialog_list",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5691",
        "addinBuildNumberHighestUsed": "5691",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "125",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 500px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; height: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:listBox.base.className]=*if_error(p.listBox.base.className,\"\")\n[theme:listBox.base.item.className]=*if_error(p.listBox.base.item.className,\"\")\n[theme:listBox.base.item.hoverClassName]=*if_error(p.listBox.base.item.hoverClassName,\"\")\n[theme:ux.base.labelClassName]=*if_error(p.ux.base.labelClassName,\"[class.dialogFieldLabel]\")\n[theme:edit.base.className]=*if_error(p.edit.base.className,\"[class.gridNavigatorInput]\")\n[theme:edit.primary.className|{dialog.style}Edit]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"{dialog.style}Edit\")\n[theme:menu.base.className]=*if_error(p.menu.base.className,\"\")\n[theme:menu.base.innerClassName]=*if_error(p.menu.base.innerClassName,\"\")\n[theme:menu.base.item.className]=*if_error(p.menu.base.item.className,\"\")\n[theme:menu.base.item.hoverClassName]=*if_error(p.menu.base.item.hoverClassName,\"\")\n[theme:menu.base.item.selectedClassName]=*if_error(p.menu.base.item.selectedClassName,\"\")\n[theme:button.base.className]=*if_error(p.button.base.className,\"[class.gridButton]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\n\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": true,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": true,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": false,
            "__freeformLayoutsJS": "",
            "_jsOnChangeFunctions": "function onChange_SearchForm_7222803421344681ba144d2ac137f203(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SEARCHFORM');};",
            "_jsOnClickFunctions": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: '8f9ce967-74a0-4f32-b442-47c7dea05051',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueProperties2": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueUnformattedProperties": "value.SEARCHFORM=convert_type(\"\",\"C\")\nvalue.ADVANCEDSEARCH=convert_type(\"\",\"C\")\nvalue.DUMMY_LIST=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentValues": "",
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": false,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/a5.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "A5SaveTimeStamp": "20240726162009062",
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "showPulseEffect": true,
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": false,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": false,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "__LPhostName": "Chrome",
        "_style_isInherited": false,
        "_analyzecontainersjs": true,
        "_repeatingSectionPendingRecalc": "\n",
        "cachecomponent": false,
        "_crcXbEvents": 4294903431,
        "_crcJSFunctions": 4294921817,
        "_crcJSEvents": 43605,
        "_treeErrors": "",
        "__flagHasMacro": false,
        "__staticMode": "",
        "__componentnotfound": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "_passwordReset": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "suppressJavascriptCodeWarning": false,
        "restorePanelSizes": true,
        "populateArgumentsFromQueryString": false,
        "livePreview_permissions_friendly": "",
        "simulatedcultureNumber": "",
        "_alphasoftwareBucketName": "",
        "staticHTMLFileJSON": "",
        "__flagRecursive": false,
        "_flagForceRecalcChildren": true,
        "__idinternalCurrentControl": "72228034-2134-4681-ba14-4d2ac137f203",
        "__nameCurrentControl": "SearchForm",
        "_containerstorecalc": "",
        "a_UnboundActionJavascript": [
            {
                "idInternal": "",
                "name": ""
            }
        ],
        "favoriteControls": "",
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC5WMsQ6CQBAFexP/Aa/Hq+gOOjsqf2Cznq84PPGyuyD8vSQUFlaWM5NM0CipWGVrQesMi/mBZ96tq1Ri677Cc3Me1HXB79wdD+HfAU2Sfyanun/x/bIYZOTcp5uwJGi9NSJByRzBdp1GS08QRVW1NcPe4IcSfQAk7ywxxgAAAA==",
                    "CSS_Link": "*gzip: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",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVAoKM0pTlWyAwC29a3YGgAAAA==",
                    "dialog2_html": "*gzip:H4sIAAAAAAAAC+x9+3fbxrHwz805+R8o3fsJRATRcnLb3pKGfRzbaX3rPI7ttPc7NL8cPkAJMUWgBETbpfi/f/PaF7AAKVl2nDY9jUXsc3Z2dnZmdnb23ixdd6aLcVHEh/n4LOl08stFkXQO798ryneLpFO+y5P4sEzelnemRXF4//PPeuk0W3Y2n3/W6ayTVZlOx4uT8SI9W/Y7F+lstkgGmPUmnZXn/c6Xf8jf0vd5kp6dl1bCPF0s+p3/OD09pc+iXGWvE0nobKWbF+k/k/EEwNjVXVtrdvfjyzKz4aNv3d3jtMDeZtxdlo+nafmu3+n98fdcZvPj//7w/MnzJ989hn8eP3z29OGL7U8PH//t4XePnjx+8eTh80d/6fT+cZms3n19mS5myapzv4MIpuby8WyWLs8ABYCBmzX3LC1KbmyWFvliDLCly0W6TE5KhNse2N3T0/8zcLo9zd92DtKLPFuV42X5PhBYg9JwEAAnq+zN+zfc3Pw0WSwGPkoos3xwmzi2AOnP01VRnkzPIZeBsjF8S4P1DXm+SG46hqfL/FIIBVs5OYN5AYAJRRfp8kQtztNTQdO9O7TaYXXf0z8k6V46X40vkg59xYcKvGW2TAaHnXQWH/rA6/3009Nvnj/89sld4CR3uAlsNCXImKmcw/JNloed9XhxCZ8tjf3wEJt6+eT51z8++uuTl4d3qk3B8k8OFYh5VqRlmi3740mRLS7LZID00T+BCcPxrtMinaQLXNkMAQxjPJ0meRkfphfAA+980TauPz95+cNfvn/5PQBxqyAsAUPcSjEcHXYuLhdlmgPnizttmEFwvnn67Mm3Pz57+fQDg7QTCJoXmBlrT0lWq2z1Ms01GBfj1RlQ4CQry+xC1qkmeSIqtb7+O10OOi29/vnZ918/fPbk+fPvn79AIoNeqXsBoLHe87u4i9lAPvz9o78/G7/LLksNprXGDztQ/He/+117q3+Ddnu8Fr/5/vm3h6pt79q1ymnAf/c7XHP4+95k1VFwTBfJeNUHbJ0jLu7sDfjvcVIZcu+aax+Hy1sUIXizNEjU1W4UufV7j77/7uXz758ddlrxVe1UxprBNjBfIGvjbdxhzGrH5y+DZ0Mot4ft98H14x+//fb//vTs6YuXDp7tZA2IBlTtc8S/AXl7It80uifibSiug3SG64Y4N+Wq3OSwugsJx2jB8eMnX//45x9/ePzw5ZNH33/77cPvHjvM4iMsjg9HEgq7xXSV5qUtqv88Xo859bCzGC/PLmFbiw+tVBr8nTvAjV93vsTf6byL9bN55+Hve/NsdfF19rYTx53gcjlL5iBizoJwAyzqzheff/Yoy9+tcKI73WmIUsTdCP798qvOw0V+Pu68yOblm/Eq6TzKViBtjnHX+fyzh4tF5zlWKjrPkyJZrZNZ7/PPXp6nRed/AK4XPIZFOlmNV+86kLpIp8myAGE8eTtdXBbpOlm86wBknUvQT96k5bl093D57s15skoi+f4GSkbYn/roPMxzaIzg6LzAnldRpa6viNPE88tl58kSdi7oZrycVaub7F7naYnQF3kyTecooy7eff7ZMivNeNQYoKtxhzCx6pTn47Izy5Kig0XPx9BluixKqA0VoGBadsaff6abmMIMdGCuyvOk0zrQTrayCrUMF+biizswZD358ean/ibtb7bRKulvptkFCCNv+3eGr4aveqM7UfL2eTLv3/l/3VfDVZaVr0aY/MXVq2EBsCXms0wucvOVA1ksy+6rHv8Iv5Cs8E40vSxQIrgzhM/uq+7w1Qx+vApD/L5ztt1Gl/3NuCxXRX9+uZwi5N3Z95Ofw816vAL0JBcxfvbwVw8odrBKysvVMhj//oQyD4PjLuUV74peWjy5mCSwFGcPgkR+BX07/1G2LMcwnasHwVT9DPr0e5UtgjA8hq9j02M+Ls+x2+MAO7IgEY3yQdBRP4l70a9DaCMI7eKrZDzLlot3UFz9jA/VLykedGBMs3E5PsFOcWBVMCAP4MBiREPLadJUVOVLcdATLnNP25TuNm6K+/uwqlidBINtJDjsb7CpPlJZvsqmSWFPbJTOovkk3BiulM56IIiWySqOA1Uu4MkvZ/FwNACy7RIpxKeD9N6st0iWZ7CnpMfH1Iyu38Ml2Z1PotkwHYVhOevll8V5l74GoArN4nKGf7lOtgJ1KtxgDz0AHJZMdxYOYJVc9sar1fgdFyCA+SeCjdWZ/DrQVFQkpT20wiLZwtArps1+QBQWLklRTl7LAORRTlqro/DNTSbzeD5eFMkAB+Qh8BBLmGXfO7tMZ0nR01RfDKkWTsNokKBtqLkCTKtT3Ewf1Old5gB0Up8/XNV2g4BaXOfdIuQBzmJqUjrgkc/cCnZe76eeEBTTUQlbDLeEhOnWk/LZ5OcuFouwowiRGBFao8JdxepbrchwYMbFdEWtBNhsEM0i7DDCwQBJAAc7cwhBMy8iX/wxn9jQ/dRLh7SUMKGXzgiduCgaGF4jrjijiIFEi9WUP/PY5QQDXkgtCHq0AFGLoWbsX2JqMi0BG6BQrpMeDA+WTBFtsuXD4t1y+oj2jDLpt00VLA5CuLCDNKeMCAZEv5N5pMgZv9VvQCas4JKhAbTMwmsQRH2FsgzqmZr3mxFZcaEPWdRltzZZOENILNHFOO9vyswFKlpH81V28ZilX+JrB5h+dXXg9Fz9drpozexBv6FgZi17aMelCJQGyZIA+Jitxm+wSre9RYCbp2pL8P9LDSoqV5cJr+9klpYgM0FDlRESC+C9CsQhphL8NWhbyvDxFMid2HvDtm0xWGxuaNcZAaO1ZHdP/mbLHa3jeuYgXfcII+NF+k+QWXCQVHpSLoGTrHuTy7LMlgVCcIBp4YZyoE2b2kFrS8+WXcyKHFqX6qGu35skMB1JaP1Gtqizx3PYu0PzU/HM8SReXi4W8nvBH0YW+BJkgfHq7PICpM3CkQmgos6Avd9CJeTEAQ8gODoaTw6oUayxiHWR3iJj+RnKFuUKlPHggZXaDwjKAJvFenHAYwrsAbLkMQZ2RPuqGVzvclmcp/OS8rbAq1zhxm7CHpKVDiPiXTTGf1lmFDsrUukJ47/PhUGSTVk48/bEINU6ouQ9+6GydjeGgmJszOLH6Rq4xJgWj1lFiHbZTVdnRZSsl2VUPlkkkSxhwzXcDbuNNWNLQOOz5O33825gQRuEcXwqNXeuQL0m9KIe6kojvUqwr5g6BCaXll2Q5ENVlRAwxMzh3dGIf3w5YupGqIC0YrMDrSe9ablaAO8ChYnAiGPd4QCagp0lnb4WKZerMeYgj3EmjYaKE9La3poZYHER+FkODcG0wTZ0drZIKjythn4FI4JX9LhuD7AEolFxnr1ZHh15S5BkW0Uv8tjQW3yKWF90ZcmguEWte2BCyRtydoF9sAvuq6tGuA+8cG/2Zt/Cfi3ScXgwCf6xfxdiKFisbRF9UCbjrRdLrltKwo7Ww32Y0WR1ikPi7aAon85iP7pwCnKS+hnDG2IC/fUWpOA80gM0k9NMCx6UIjGeg5Zh5lLPYDuR4K6s1UxHDwPxEXZwnqsp7xpADLlhCN0gPIhP7oqIjoKx4v161/hqZDaKB3ZyX2tcB5aNIo9zEP9AyJkm3TuvhsPTkz+Nvng1unMWBcINaDnPJ7Y4gtoaZBU4P8M0Hw1PeVPEoqGzYFu1GxgutAvU8BQQ28XKihP1gjAEVGBSRA3xvyQi75BrbfVckQrRkNkTw6mjKhRCjmIeIFHfrQpSFQtUtL5bOjBK5HW7MBYAnJu9O9QSgbcA9luBql7A6RmoD+gTe924lEcGtVGPtyEkmuJyAujs/jGskCjb2lTJOhqQxlXl/64P1G4JF2dbQzZJ0kK2oGptGFdRU5M4NbmuvbWN0NMDkJiyDJQkQiVtUULtU2DsSh/16WysxRJjEKXS6Gxat7SSUMWcWQnpDDR1pB27tkVMurqkQX1LgfXZy6pVlGXHqLZNJrOIENnfTC9XaC/1lIPsnuRG5KnQUIbyosW4sQBmoQ6DB7Z2EUrY0hKyh6iJ2wxO8YcaOlxmXqnQgIz6bunFhV2sARXVIlVMVPMFEWnxHWwKVhFOsBFEyfQdKYHTxoQyGilrkZWnkpQsZrfHKdsIl1lf75xGPCP65jXgbGdsu4rSPKr1LAvjG2RkrHTS7ydvXesGqBNk1od/k2k3F6MZTFksq5USzh4nc5JqtDVRLwTORwEmDgL+8Ja0mzLqG1Scva18flP5fma+yxw7AZahAAKWAdz5QIYWbkrinXqXGzAs9K+d7Go8nG0pO5QAak5c5qgm2o38nKVLboNRS/8qvmg3dHyXWHeaE1CpCxWhS43ByUHsuKwX54oHf4bgVkDHlhw9DUsJ2JhHozhLuWH8hyiuGEKa6hf4dY9Vz3CEHFmgo5bNcHnX4jwWPjRRtA1EiR+qjJYxzli+QmFehBUsEhEKI+rGQ9MDoswzlxsNmIjO2pjDQCjLX4jYw0CIzV8EOYQCvbbZqI0NuVx98nCrgVSUvJ9W9xlVi8Zu8VBGg8qhD80rGTkVzkjACwvksTK740FpJg9wsJpDn2zaHlJnI9B5cFodts8UHcf5A/okmwjbaZXRXArmOpXPGtS2YBlyqxBjYwIw/SRw8ZdhxEvDfL2A5wpoixfXOHCN78owidfWpRwWSVwKi8UaxPqUUhxo6YNsDiIgKA4b5geuAGgb64hRnFUkxnWs010RdaClRLu+U9dmQG5dBRxyR5LYqyxfjnZhwEXJRUNrv2jfI7i47uPJW2UrU3XlL2otrApTgo9fSknhX3abMFAWiRFFaifS0nqlTA8L2cLmmSVsCrieuixJcwfN+Q2Nt7RLcjXWMjbfplLexo3mbPWhsfst8qSL8dvuacQH6srEeaKwabiwRuw6lrJDKTSycD10p+HkLlK0F7K1goh1mI4HdgvlVQrGPO5rdODYqQFTJmsgLdMq224dDWEdV+qppXiwPjryHnRWiL/toJP+hQ7ojBcbH2pYNtsBW5146n0Crj7t+PyzCu9YI4AIeXB1tRZOUpUwWdmxDqhI3NtGfMxoRL6LbJbwWSXZWoxRS29LvDXTORZ/N1gRqQfU24i/N5XC3KOjuVG0il3mpDLrzlnTRQCrNh90VJKz025AJYKoAJ14XsUZZrF1Y8644J13ej5eniUzr8mDJkeMnxaKNEeUuq4BkPeUtHicrsp3oYMGynrElbqBFAmUlQsnbEvt4pyg5joup+eBMQQWRmpFKxASSrshaJ3qaWixBRExpTAI6qLmA7FOXScILMVHDnoJiEC2TskXQh01mHHD+FKcICplIZLa0iMGep4lC1wogPeX6UWSXQL6FZ0aG90qma8S6B46EmbpyalA4GJeyGRD0oaBpy/TqzTOrVj+NOrI/jfO88W7F7YRkCSXFMUttlzCL23UgkFp16Bw4znUosobVQaaXyyyN9/gUiGCiORsRWSS1fiN/OSzEP4N45otkv4GoRUrCDFKWsJFvEFpkQqSJVtEI/RA7SsYlUfSgyAQkUwzNBCv0G3yu/FF0g9gbaHrJPyw2KhVP9zMYPOgtlGtoo9Jsog3uEyxOt6PwdqYBXyT3PXw+EsV2JKGg0rFBIQ7kK1gHSyTdbLipklUixsgojZxrW/oeBiyJovx8jX+QGIYl4KFVfKPy3SVKKQo6pTPZFlcAsJxFrVpZ3y5KI1vCrMHLre1jG9+sKtAbZE4mwhhVsgENhWgPmB9oNhZ6EPjCJCXLGePUVnQVIkECbAXoYaNSxWg3Vqf6nhrgmkxVhjahY0PzgGVgGnQGh8ogmKiRusu/7SNyeL/ZLeGZ+gb7soe4pTcQrgDzX8ulp0U/l+rXjUCUrWoWm54sRxFVWGCi14sQ406/1xgKS7L5Rx8VbdW/kTZqbBNiaJ+RcVqChpaTnwhKuSMUeEw1L/UOTUmAIsO5W+8WV0ieQsVBmrlMoIrvlGcd6Dt5ldXJhXFBdWoSuIpU+5Ydg4hBSXGBe5mNLSuaSs0LgdmS3KsMOmL1VRZb9JHsFNXv7+1E1Cm/wG4d/qWtzVjI0D6Mblsm7EShtZvI2wekLBpt2r9PoY8bBamhZuDH0P4r1odkmL4j4obDzkF8Z9XOYqElnC0Sq2PKeTHMOnSaByfPhgCGwqCUR9ShyYHurP2W00MOneQ3sdd+OSEd97YXnx8goNHKMiZ0uUlnRXJRB4dqRmFLRGoYUp7dFOyNrVr4TWM6djKs9h1Z44gTdCZAxu34gYL9YPz8mIRRPgv6fXbQX1ILbxxY21J6jxOb3hEb+iXxtNkz3c6qMyWEuvV0lKbl22mgMki8wPbSWZFfzhyV55jdMHpBuWUqtDvuyPZH1kin4W0nZAqgTYwkrw4Z8Swar/KutCgtRCE1srR47DVk8oQLR9l5lqkdCgRxpJcTLMsv5gWjEDClghV0M6QttUYdRESE1Mx0imNdU/lCQb++Bo+pbgWaHB6K2Qu3lY/NAunES/Gb1shxt3oYa6UPIFmY9dYs2uzFNHBmWBqHH+ZKXCWquWHq0oCDEybyBwfGy69AZ5kyfOl3k45X3agVcrzVIZNPa7SgUXN7J2w+9BW9GedQ6YjtU5xN3rg5veR21aMXfsf3/KGc2/2bjm+SKf3g/0PYqtQ4h7WdDxbNbY5wwm65JoUBjQS/UVT9QJ3G/TK3GhmRGsGAVTLxihlUHoUNqQ7i4rdV/wFY94cRwPcbagSpbNP8ohlHyJ73t21/VV5qKdhROUt2YWGIvCH1GyW09hCvReZ5dUrz5OLJPQlxgX/9bMwRoyHg1V5m1buEQQ/x0LU1BiVhjWd+Yi0YfJdC5PUb7bOUteEWpdidDJbWMVbnDcamkmUutQ5tr3EMbAC214V8KQTW6o6XsLVVxUONFlgxWLI9Y/TkewoALtKGkxWyfg1m8YqtSq71HYHF6+47kNXSvZju1ozR/c4/V+Dn2Ptfbk5bfUfjJfbywDNWJVFoJPMEvigxHgLHFvNIC6y9+DPWgn46DzaGYDLliVL6PRbVSq2oOwBYzcg91WVBs6tmvGyb525Fw/XpTUjJ5nyekJfM8vU47gO21QnR5jPy89xaTLJImLIkuaPUejCIarmrlqDZpazfyf71b1F9s3sYAfLQOsimvRItXFNB+pCyKysewx+6Z52PLBz+uzNMBN9nxwB2STNDN39NFqoub/TehY9E6tYywk02RexLP2wTnRFp0IroDrDpd97n+HKuW3tTPnD9eg5NXYPh5VFUU6G7YPgmRCDHDTIcVk8bPQmu23otyOLEja0J9J9oaezout4rhkfbixD9Gr572r/NjJgqCPCiInUdvZkf8QgcMzPaFO0WzHeQC4GzP1EZWIBMH6ofBtX6HIA45rZ7qdc6KmqZSxRmOTapp4iCkFiIt/4lWKflaufrg+MaXiGDjCWo8tAA6p+oMnoWFcgV1sFg8UPrHyaJ1WG5IxYfSmLjt7C1YfZoDeMTTzvdDJHA0JnriByMnWPln9RHH+JAyXkGPCANZTZd5ewoay6od3kEAeJhY+DUTAwQHCiGDMJbMQx7SBazhT2WMsgoRdSQ6ZW4C6KGfKRte5enfff9eDfyqsQPZJ6dR1anM1xP1HeMqpVy/HEosTrLUfHwRGJYeA5+KXx1TKQJgSSgc871Krl8QCNbZgbVzta0fVo7UHuWvOea7d0SMoHaNRF5QLF7r5I5cSj8ar7TZQ/xhbyh9hPxZzOBm/6aUyv4uAufCTXvMAYSytWlDDfaXki5k6KCpl7fxivtD9ExYfi7sieFZxHLN3Tk2+cGSUDmWFlHjmnOsN8GOZ1Y9LlqTnl02R4r+lJs123yqDhmuFiFm/Ox0VfY04dOVAHjH4PQulktN+A7gcBfgf9oJTzBijPNLPZsrV4s5VNFL/iYRCMfAcQf3n57TN1oS99OtMbxzM6glRfj5PCHDw8IRSagurgkptgRwqDuvQx4s50+LLy/eJ1mtvFX5xnb6rf3zjtqWAOVtpzFbHBSqtvYZWe8ZOcodwkPIWogP/NRWkVep7844neAGnKnyeWm0H+4nJOPam1A98Ii/Mtfrri+cE6K/4a5mZr0acqpkU+hVE8QE521KaTujuTU50BMNUV5zBNqBTnIpS3KYJdDnhKW9pg1zL748lb/allATtByyYq8eX4TP9+9J318wf9+wXFIVJfyND0x9T9+mFlyk0Bcv3x/AWfrmQgKIoav5X+YTU5AhSNVs/t6wq10rdNnavkHy+Qu4iCBGuop6wjiHrM7tF6RCGEC/vkqAo/FnFKrVVawtVDLfwNAusParMfGIxrGUtRwnE6cNFvz/mxmmQ8BKJF5J7EOwYSU0CnDewlzcuZNWG9cNXuNDDrVu1Tg8oSdDd//DGo+CjR3NRd/2PdnZWpA7vojisiQ8xyTKndfjUSjSTjYO4aooztkca7UAV08UGjVPFiVdj1erEaK4Jtp/I7uDLva3JyNVRzrHiNZfO5PRdY8UP9wemI3VL39Y79BD1jGbd7eMdywZt7yKqOWr1kmzrZ7SnLNffylvV3cm2PWdKsdrvNKvJ0XWctuQuBVLtZyORFO5T8FAp7zBJ/pRXdQLsXrn/ElFrxxm3AzU08cmVGql65liDj9ElDqXu+UqZXaSqNZmSxJa9wXNqXE2yTH3Gu5XRxOavEFzI2es51OQPk0zahjKSLWQ9E5BD/wPZojlBgHyYNl8VAu1P0y7N75CNDLBbyrqNL1XmS9LaBv7KHqv42zNBTdvujhiIZQP+AQDZ2LL3FGFuW3lgaLqtZyvL+m4xyv+b+0dwwi7UdkcwUTvGK5TqdiespVIO1hBKWjUbrlHF8ZkXUqGf2g1m6hkVlZCTFdWauo6xSSYrhq0BgU+4azumD2qqtSSQ3Ox1BwogMToXKfLZu/jV/GyMEVLp9rm/sGbHEqdDYrUescLqtLjCzb4suRUYFwHC3UpLWQhTQb/a0YdOBMu1YuhgLwk02hYGIxsSVJA5StzLDVByNlRysgUIGTKKqnBypyRWvW3a4JbLWhAEk+fDly+cvXgWjYLvFzlESb+s7J6+j2+r8h+dPvnn6v6Z3FP3bei8u57fY+4sfv7F6T53Qb+qICWQR0G7aYNLeujWwQHuBQbEW1DoqLOGvzbwEWFso7fCfB/znOKjGhQ5w6TsJA1JGmK8E92CRA1s5Dii4Klo4ZxinEFKR6I6Z9lh4evRdaNdU0WWh6KPvMEANlyIw3IISfRYKCoyqLDfulA1Ml1byfUwGQgyrfEh7XuGxkis1m+r1kpX9zO6LSO44uHdHIeZ+IPkxl2JfzSBs2/moJC9zzBAwMNHyC/OdbIrh/ZqOYKqO6zmhU50RG5cAYlALCbdXMtKNazdscwextsKzkCKyuN2je+OHiw0dWWdDDuBaNyShgeyHErrusTJIE4+80SZ7HaO0sofznCAglRgKemgS/a4mGQluDC5IywO0Aq+5nJa4STxEdIRiL9PoeKnw4fP4pMyI2tI0YtnbGJdV2PSsSnUtJAmMrImHXqESfV9+7YxMSY1XVzAU+Ieqwl9iIVdXdTlI0tzjfzHPtHLE4JfhgRaXsOC12RUW1NeiTNxe4zscREE5ntAKiQ9POb4tFDmh62nxIa5HnWjV4/y+ipwr0ckq4iptFVVWrdcTcmx2qbHZK7NxP2+SaG8RVajypql1UK/PUtVJvDofrwWAGFS4lw2LOQ+itllKM8zG5THVcxqjQRjFwQLXaOu8pls5xUaMkTUHH4929qCW26/a2+QoTN/Lj0/9mcgXmRsY/3tzLGI30HLnv1qBGm0OAKCspa8BqNf37M4Hr9FS2hDGJK7Q3TA4fs3nsC0hC+LXA33ww+Mcvh4N3IOfuNqgPZ4dfVeHbrq1jc0w8Ty9Iace8Jcb1UjDyYzxtdIWW5YJPhvUsFRuSuRmbNcn9wZY6d5eC6iucbUF78r08tHWL2nuLYNqwv2cZcg654PE8AZ7lrM57CeXNogyVLomJNekCmpOSxYNY7yJ6KtYIMiBoRbDsrxrInq1C78en1lh7XQ13GHzT61b4cyJnePNmulesgf60NAy4NNlSt0bZDrOpapC3WavsgwyLSmt4gv6BlhI9maoqow8zVWLeJv1ynofAlHisM1faO8hZopLUsuCCoPiOhHQ9dRA/Kq0NUSrE2N9yzRsvJ3uDx1gI8C6uWFfrRef2lqAYwtuDF7sLbQHgvnM3R1+qc4R1fjxzq93+LokvacXSmskWGMCLbFaqWOUFLnowD3YNvMCo9aoVYeZR0d4eOmQcK1MXempFano0AoCvhzKhGQnYRv8Te3RaaoVDFjF+ZWh68NWNUBukDP5z7Euw5zamgE0x/F3FBDCqgY47RShD0TN1WzlfG1SKOYCs3Oqp/uoT7dVq23So8AqWAOOzq39O49hwta7HEYzeBB4xXt6ASPcw+4TvK/KgS9UNCgcusB1NAstQ1MorXK8OkvKmrJk7bttyhR7ImidNrCWCbBEssbCX0WjVHpoFR9Z5UPMlR5AySjfPdLFGIOV1uzimGMXR9qtyDR+ZTrqHvCm+0CcFEDbCSNsOjKKaASTqEmpLghep+WAdFZoUSuvduORn/4GneyyxLc1jdaOb7Wwpv/Ap9QDZdY1yF3qo6IIdfHPMaeV2sE9VC5OvkzvbQx9d9y9IqIuEKoAneTADvLLVsLdOv04zT/b4Y/fm4zdQ7lnCgJ90KDa5r8eA6aNPlVKr08DasQ4Q5YZWvnEITGXOKadw0EsIUfIGebCyrVYGJZB1hhq05UFkOl0p2x8bUH3RgZYdSanThL5p1gyyTUv3OR1oV+897Td1HHLVD6m1JuGkJFhnk6wQgwkb/PxctYVyKONPqBwHQ23kXGfj+hotw9V6MeWn+Qgwdnf+zbCoz/tiCqEwFFbnD2HQ+7wheehcfM8K5Q/lJUoLon0wBwwRYNel8EU0VkRWexTftdZlGkgUHxG6zDkM4n7d2iVqj7iOwEx4vUgCHeAQi/uBfK334FfAz8YvsqKFTq7uAP74f3gWBCMpwf4xlzQRBWRtG6mZhxhYO18lUTF5Vyz2JWKl8eSCtmKQAynv91cxZtba984tDVX3yLI3dCWa1dGpX6H6cgdWSTb6ToEeY9xsuaokzEk8Dg6geUMAdL1eJiPwnWMfzRjnRwdTTgZ/1hMbl2J4LeuRu6j9bkK18fxisI16btvayvmwjoGhB2vjwFlA/1OCb8BoxG7UGHFVDBxCYZECMvgk2I00FeRWBabhddMB/UX6HqU4d+79ogWwy9H9q6x4EtLGNsJy3450pEv9wo7j67aR0czPxD0CIOOmi5UgAFSBwBfliN0Za76o8dFoArAQYhmHx38IkOTS1PrEIO2rXmhZ2vyc61Ex3LIqcB4WsAM4iBaAxWJKzKGErXe+iqS8Wp6Tk940cYN2fcx1Aa2Pxvi52iYOeQBOZXwdnidDFLVjQk1GCJFGouEmVvj7JhINWv1StHTWeFcN9NXS8h8JDfP0uozKM3+nLO05sQ5S7nRVKKRpFreCK3f6NKBJ0KVixopb0v02BWKwQbYPJrZqlpu0X/OaxmqoMRMJY2b+Iyj3rYxg6onEA6mfs82NplDZBV0f8fe1+Run3mKBIoOaCQIVmUkQqs5zXY14jlQRYm0Ww3z9qoYHetAb5ZvhhtgpMytFUghg+sF7PtTaT3kOpJliQWNC9lxjDbR7unJ3RMdvN2tFlmfI5BmretDIZmJATW8IisCpzuXefVuFyzjnewcqqlXeHIfs8gkEkKZK48+wq91m6vEQC4x/Wvfe+IWua/7p0wrJroPzpPse18oLa3EKDAx/Ws3ZEOwtZ5LAT61rcWQcoMxYvjjWjg/3+EpXq5RFzgleBlfMUWDoXoxUeKc8Y1FfUtnOAJKJYG8vxGJnKPs4CnSZhsBAVlRd5RsRndJkbGqBLzFHG/o9bGtSaWHKWqpIDVni4VdW/kmIGNQaUoeLHTozJ+ssFR09DWkbXs44mtK5v0Wjpp3HZzaF6TkJS9zF003vPWgKkD1BbQ4EgerzwzPF8lb96njw/tY8L7oHPKssVUVa0DRzl0oqRUXKUb/ik5SUT5YSjwZT7K1AqbeR7XB1qbgv+yNbqoCSa35HU2RaetTwREdXVwTmH26rsPcDMzWhFtEGqIz3KBfjfwmUSr6QUbVxhjGguJqiWasuAfZ2fRrqFbgSOcdLFbb3pXW85IbemWUQgvSIg/mK1RV6kEpbwiYEzCTLljiqpZNUBxBKChGoThZGbFxEROjYDydZqsZych87S527TYkwU2Nm0Zo/Y5L81vKlWm5SJzSlRSoQykvkgUMI5k98jZQVHPDxpxdDQoJuSOopkEjoConpu72ZpPdcMOPpSX7rorn+rX/gFImxX0o1nKfATY/zouEDWTORY8dzw6ysgLMWbWNP1s9dVRX8vqgfVmVvG74OVdPvxtVddbHuuSsNfU8bai7sP1yAWqaXyto70v8rtApEwHrqGTIUTe01MdeuNOt85kIOnlT+lSOMT3HJVbx6SID2KOAzd36urU4YdtDhYSXTw+18XmPtrM8WV6zbWc84wWs/YO40iqlqqtjfn7tWECAe2fjst/hHqsNHZOFghrT9gmJgGRGaFMXN8BezEGFkixzVc2fVt00cb3JD9OGd7/Z1ZYW0jKePmgAo8ETjai631Cnxo08dbnjomgavsd/jev55i9YpWfneKPLMgvRtO1HF+h1K89BareyKc6bcR4DSNExDo+UTqhTd7ZlogeHHT3VpTPhymTzMQEkpDBIDExaBcnRi6yzwE2dLfA+o84NAeUszlCM3EZv2R5t65Y1l5+bZs7l2yp0rPTlDqZb2amuRWCehpqo7fPPbjRhPxy2zlN3WjuPAbnQSuEGPXBKiRCnGiTu1Rw5QOc8BR1mCZJhEA6qU6qmyR6Hmv9dsxx/sFnG9xEllDg9/1l9f9h5NPVDvUS8Y+NjEeOgdUNuy4z56fIcRhD/Z3cXxYigWe5V+mVg7E0t2z5t0RzEGjgymi175Wq8LFK2CtG7l3RDeXOeIK/oY1Ivm89BNv8LpRwH+VvQGcpMFwlOMWUbWeHy+XkJJHBFn3FAND2wcrg63Uyr8HBLpjCbvbyzsHNH5yP8mrRBjARxaQmzN9jghGkTWtwBtq/PwTVwzgi1UdwwC004/1iYZVnrGpjdSwxAVvA6eTfL3iz3YAKvpzGm9KDGo2zGHp7TOL771V4cilmOPDhMQRuZVWmjfjhosKxK4HVba7WfLZAlr0QyVgFEIdCRuhAnfeLDGFzLPLytXK951w4WyRz0WPfdgSoi7ccI+KGDDd28JFmQ56kfFOuzp5AV/8d4kZ+PT7DYyfQ8Wa+y5WPENiZgR7heWks/J6rk4gIky1tbtibgxY+N2rsCEomrA9BPOaCuX44n2uSgjnYl4jU/+tHfBKh3YiH1gAKNbJpdQlcnd7c4E7dhCmhQ68kIcHUlPyjqhPptjASDNlvCVBkScKzhda0F48kEKNW1F1TTUMEfT4qaoUDKwV9vfSed22hrwmtxaMvnJhvNGFZVde20qelaPjf9uJosTSPBFM6QKylizKhhjIvhv57abnKbPUSzLvRXzFWsqXrQKSJDZQP75ewnlhmBcS6GhOnaY4EYVIVgLdxWxY4qlVqi7/RyVWSrfkdseYPOZZGsTpiAxCeJBFgaQmqixyy8h4PmaMw9WEvtQ7N0NIDagEz1naKLCu2R6dHRIqW9kX7IfY6bKpAU9MNS0mznOsrRCIOeLXxxoXi6rl8cb1lj/ZbChoTF7JBWpUJH/3P1G0dVtXQIFVvrRna0NvXLhlzZzzjE5m7zGZYfbOsKWhNt2jTZoPwINNdVcolbVZUfWVVNSu6+UFeYmMC+3xpxWIN/sXiKfLhV08CLeEU5q8SLBJcXsw922jDBRt9ubqpQtx0r7RS1W5CwbOsEeBDXl/ID1nv6To6ls9PkGWQhjtl7jlDseDXtXKS76Xdf9f196ddA+ksr9Vhw6WwB2KlETrTWi3+X8zCZZW2KnbV3sz1JVpJ/Jwg3AGiaunFKcRRxnEp4yWuYFWBHgqrhwKPBYvgLV427zh5EtoVUZIaXexotjlOxyv2wJ/BQnhrfD0gjR1MHfpPE3upmo7YnXfY3dRUOskCFEb1PAjsTx+lv8E/jA3ekFpkzx/dUjm5HN/rtmPQ2jkk/nFqAoRfeRmnG7XxoJcE+a3xZLnYdM1Lz3nzn5BFaqhwpHqRZw6GiLnvN80RIAkTxFZuWc0Xd/DWPFO3m1ZDUqaJu8z0OFN02Gs4S9aEJoK9ykIf1r3GGh8Xf4/iOqred3Fnoec9DO434BrVLMq93oKfBw7yqxnr4Qc72bn8cfO7nBX/Pc8APpvB9bCWvSVGi9MwOsPzMy9K0LP2LqVYAZR0vw7rsyK28fLav0qq37v3P7aKUtpvUq8DesspX22RvqO85B7z7KnvARH0aXJ9FSP/ha2eSvT0p0n+i2AW/V7NkdQJJN1L5eCb3Vd/ebyYbbUCftjLnU+CGdW1t5FGT5QXwAmYKsHN0BDqXc+qzW8ZJZz/Eu3QXo6RpJlPqr11A1YJRONkn2eqEKXFjK7Z7KaNSoa6QHsSIXcAGMCIPaqd11HJjoocCSpR2V5qUgHW+T/QEuiJ91o5IeQQo4UVV6XP3Keguucuz2/mQbN5v+vwzC9Ws1Vcw3abqo7q+/mR9AfaeCWI7H2cyPMzEeX/vV+YUcFMU73vqv7fisCeq+cR922CDQX7YDy5ArE1z3OKUzWWjz9n/1c7XW87TlTlIPzE9JpH8va1A9V1KrJQmACNtI7Pqy6tcTDJF6W4sUd1g1cuD+GpoTZxjE+xHOnZtsv8RgcEsEDDyJJzr/SDTcmamhT5uY0aqT99OLssSA6X4XsC182zPhRu68Rv9cMo3vCzn84qQVycdgYW5D4kJ5LfWejqIJTQL0YLlh/ODniUL9qYz8drx0zz3Uh+PfpZk05LPhK1bZ9a2n6NrjZO6aNjPy9W1yFRbaNStHUuDbWCYAkdKVgMxPlQ0HACEx16wZW1PlTDy4o8pr1FLUihtIHxCPsXCv74y876aS1I94RDh+NOiekXiRML8K/h6DByM1ZeYnsFzn6Fj9sdQ8oVKYIlZ3j+NcGftn27l0uRyvE7PULIg3neSwuZGF1F3MFWeOnu/FY853utWSZ6My5Yba/pZZeGsHB95nwOPSbksqluSUDKdBmB+bzybCa91P232qgtf5nZZ9eUtigdSdmHz7S2+Si6ydWJXsFNugdffxhJIa8dBnLqqYnmVvXGvKDXcSJiCWDueJRzhH8Rdz/UZp8gtrqLzncuIQtwYmJrtNUzCmknihLC9hura5+zNVk89zAYjmM4X+5ax/bqOBQB498CNq3d15X5brxvCJjjtUdSt1hkwJW5xApJPbQJ4lI345+xW9Ptv31DEVqH3Ve/NapznEo3UDhvhZh2YcAaVnJifH7EHguA5ZexbRXZW09hMCTM8Hf0Rcncv0tUHWqWrT22Zrnat09X+CxUL62YOOJzoVCpSwJtWOJoBcCbRd3tIKJLM1tSHeeXpZhj0tGTj87pjtc3mUGieZeUu8rPK3Cb5zT858pOBNs++FNiP/Gxu5MyAh6e0XUbjzXz3RH2gefrUpmnXLO01Sej2w1D0N5U4JBMW8SriHcm77illXfC9nsCH8adqBaz47HJ6klce4rI7sAMyYnNxsKSANsKAVBA1FQJ1BoI+NIiPJz1+/Pz7v4MmAMOKagfpULBvXDUiDoroaZDFaNXm8yfffv+3Jy3NcvF6yzgIbpfEfnyLkTLERsvJGJVfPRCPymwL4uKWdwBoJcZEXmoYphMK3KSjMVYGe5mrgcowf/yhaaCXeX2QEo1A+mKNxTNSynj/sWILLUPFXloHiwUqw338/d+/axoweQjWh2w8PW6VEi08KkXOYLJ50FxWB+fyUtxO6miZwz3Qbe7IcUDoSEpWdMx0ZtDBY96YfjnGpUM8wqBirDTUMefdmHmQFwpX8MIImDanI3N6wUi5qQBj0UymsILOPqCQZSaIVv90YGKIOmYtHhAH0VNu0WrDawSJRxL521K2Lg9GYWsDqrlzj3ebE/jocnw2jM4WfjF89ffRF6/u3L9zlkbCkXRZ/m4sDutaF8WCJ5d5Y1laEm5pTGoqfxOj27RpQ7reRjTTb7JqNXZAPtT4j4rB1lf+QRY1YP7wrhXN7oFQgmSEfXV+TwmnWBJXPos00BC/TgWKMvy+Z7/UejekJX8sxyG0U1ovsNiqXS9bfk2q4MNZJRw8ggvSUeyWsVw+yCd05jxIJc1iNVAxs2yRjPHpRvrmR6qqd17FaHlxAVhiFC1X6AxMmJ01igzqTVgASI7jdOxQk2RFV/aEk1uuIlNUx6ys4JG+cA5hXdF4T6OlPKBGE89CFibJqpvDWM+7YRXHVeyqxBZ0mhfk9FSrqKBCDCI/uLq6nqznlLtzTrnYh53WGhbv7sKXB3grfR+sWXgC0YMXyf3T8OrKyqBt2rt+GnD67T4Y/daFULr7EHi1wq8S4+VXMrAf6XQXmmvj0al7DGDbeGLOZga5f86mYP+RcsRBG51bDNEK9Cr/EXQkSh/eizhrb3h/EFjfUZfl3a2sc+e+/3Z53QUWD9DJDnfzPoG5X6tDo4Phji2NAVOBHHwsjb9/zBHNuJtKAvoLBFu1d0siryscg8XrZQzEqPRvQ+M6yfmwuYpOtD+JbORQFy+YJLO09ATj8xyyXOfAGqMty9X6ehqdQHmSK6cfTgnBtacbPV1XV26G+whE+02XOjQRYyasg2IuiPiTa7dd2qBqyYN23ARsbBjk8PUmW8GEKHUZQL0YpwuM/p4tslUw0qFy3WEB5wljekihmhzzAyp0euoaFD58aD/WlSoSHB2r0uvqVg4lmPD4fHgkfipAUfwrOFpOinwQSLBqSiNGTUJ6UkzHecKVPFOrqUzO6/0TzIHM3UziE9ggQx1inLUlOzI3z/CgiMmjX0XLd8tSKmY3uBuzqV/umNAsHlZawES0L+11O+Fp88WDgr2pXXIij6xnsOM8CN6cQ85JkaMu2MlXyQluFMZxmj77nfHy3ZvzZEXvkdR9qonDmuRksUjzIi0AOXbjy4yaRsdsc4niPoCmyeCBIoA+T7J1d4YD6eMYzsfF1zzV+t2kPe8+ePJFXE69F02JxNZKzk3/mczcZ7c0YQCzoVLdih0RiRczGd4/YxDXBm+L6nyK11IE3QtdO2wuskQG7G4bdYV4H8iD6vyqjLUyJR7Hg6CjfvLTMj1QoC66IcfDtLRa3t3IIMmvCsmOJJccaaOZ6z1nO7ieFtmMxzHXCqgVMSW7tVVEIum+vSOcwzoWjo6sRPXCvTlN38+K6uedNYcS//yGwogsaS1xolzpJdr3r9xI7g25PDA5H6/TbNXjzK128DKLJtzYwVZcBgf4N/zNcYOdLoqdY+o9+v67lw+ffvfkOexmx3GFn9Fkmb3TSOTlalHQA2LkdNaFHiN3Q4ko/FQ0WVyubuYQ5EPC3lP9fmg42YmG9wyrVdfyHSo5OtpR4CAOkCuD6iQBuhy1yQ2rNYUVfpbsXnD+Lg1tkg6m7kpwo8CcEa3i5Fw99VGKk6EJj4cSvqy2YWci424kfdLL57haTBZDoVyUVTK0yht68OUp+na7CoUrATjqlVmuEm0b7Ynn2QI1KcjOliyfkxcqSPpIy/L7r8k78kM2nz/m6i12FmRPtNj4ycn6n77I+X7iAbm3se7VIiiwTTQDmXNNTOyBgzTtzr/s19NFhPKIGi17pCtrRJYTvby7S3t39eo0/Aoj3+aMRm1ku9g20NIteZX5RSpGUHwgP9ifDOVfhTrWZvpGVboF7MIAe0oeq6FkgPtuugRRio6RVVnSBxRCqjuV8KkAIWcPRjEXEXvvmt3NmI/wyJqciXcqNTxKUYm6wdEETdn8sFwyLrmomNvCVi1Ka1u/PjH0Nxl0v0WGT0F7t1uzsDT7rQTAbVhtXqFsN51URDbeiOlI0eygCK0rZGohFnOqwmt4GyLoY3oLpiZzXUOYfN+JuAUBsmEQHvmnWeCpCjZacqlIKuYa1dJ/Gyp5l3w/n8s9KGawjQW5lGVtZd/J/nAU0U5Frwu9p2wESxTfa/lNMvq4ktE1DSfOLTVjrjPXHG8q6vD8W1cQfL3QFrKX6OOFhPvoldnZ2YK1k2j/CArOelbBlNVp2/72JPbieR+L6b+hOMByWsXHhRi9974crhh1WW5tbZwNk8s38tf0/XQWx9bWKRRDz9Dq8k9njiQpZZQsSZ1HfDn8ujehbkWUee/w3l/999UV/v2vU/Ve5EoM/ZwbUkK+StaBfgFVylPOks4x2lYgCSPvv/7qkyBoAjAqbxKT6eM/8QZ5lj9ZwxbexZFXA5B/umLgDcW55idYL8Y5MMKucfE1Nplo8+nJerhCnQ4RAcr2RIUDv1H/dinuX0Pk3M8CuIdiMini+qywRTyPT1maqUoyMJOTomo1tHxNrIePj47UK7z3Y6yTLkNo9655dpnS7p9i6sld4/hi2hfKgHx1xgQ/47sfg1QUMNjhSXuPIH2zz6LxDvVsPyTLh80bD7/3HK09i+Vmptr19bWTiAxtFWNsBJPU/2q7r6m24UpqxeazXzyIcKsESzEpL9Ki1E43xWpKmsuHUWt+02h+02h+02h+02j+rTUaXHDvr9VcT+j+SCtlT0Xr2urCTq2M/371B/n7+/fR0uycr/7AOXTNqZL1e87CW0G/TtVuP93u05Dcmy3e/wrah1ek/JRFQJLmqNYnJ8td158WRzHJ3qr48Tj5djEOw46zZkVgdz7rYeTJQOA61HrSvI600lVWC/ruTcauq2lXV8zy3JZ4SP7m3Ly4mtDQ2Dl6RT5qadEtEHtTG9r2xM/fXSZuyrA7WVxeLAuOcFTU8eHPJSxj1jOSXWoBFRrbr70msLtMQ1/NM+JpzD8zOwu2dd08a9ysn7x8edVeyPJ2reGRqzHxvKJlbFapeNgyMi43LqYJca2nF+MzkLB2lZ8lToXRXiDvQwiVkm1zUim6S4lt0FjrDO9am2VFNf6gaqq0TMhjNcK9pbRWqVYJ68YS30+y40HUGtMhbHxNSVWdFVyA9iQ+PMV3l4uFhShOMDdBm43OoBl19dUvrnZ0RL2q2KIgF9N3kcA2Oi4zmE/q6AyVQWpkqE0IPYzhOoqHIxXdL53tihP9iIcA0kzTvQLH75G2rBBLw387bxKYWxFWiPZ05j4ngO1ot/76m3zVLkwMCoIMzfMbQpBSJOK6bjHQF6KP/cE08NrRkCWaUQ//oMeUHAXQ/bkZ2zTEJLnu8QVftNpI+HJuXbv131QLVn1X1rEDxHwiV0HaTdGLdw79FsPdSrIUtZcbtHKgr8xeXWGjcu0UeWtGLxScdYMnz59//7xz0mlGL6EVSnAXHZx5AxzdByk6mkH0AqWtYPTEzz/bY9ZIyGQ+6frpUmQ5MU4gXub0/gGGZMESTP3QEKXamxbHHnFe7Xr04kU8DHSk/rNVOhvQvyelRHc5kRb6nWBUCYg+JSRYodChaUyTAOhTfnwhxE74BjEmkRbwQP3oB+PLMgtC4WOmKIVrJsMTwUgZP2fpsgsr1LImDUdWmDsdY1Shg3eio6OujQnZnqwn3SQiHtFCSzG2+e0qNcnK8yBUkW5cSExsi82fnz99fAKD2gYRji1UV+g3D1++fA6pIY+WzW80VdMsdoM1MI9AJkk7Z/igkjA8HfVN/H2oHjBnBCDUzyx9CB0U5vPR0voNeIePHXMurVlTDz3B9BIIRAbTDDaALNxQ65DjFQzULf+m/AdNGf29ZY8BD+mXhYDx3UVcPLCCxOE3Bi9hGyUBCtn6Zhgl0F2svsQXQXKIEau1GB4VMFmuDHGaKrq1ryDegBYgjWjhIbudgqy3w31q1iEgCrtX5OMlIoJyjoP7R//x33/6w1eDe3cwQ1076xjMHAd9FGqDW8fQ3V8cQzUIWjD0XxaG0NOZuBL9azGj758/fvK8T+/HAD+CdB2ijEreFgMV1mjCdnFQsFocLyNVPTrEMD8cE/cEtk8QUONDlCxscctrSXBfdLKL2MH5iB0W1htipuvNw98///7vT797/L/bQyvWkJOsn5fyA+NqgVCMKz969vDFi+8efvsEWsiWFxlIiKiNxodea1z0imyFu8wRx8GrIDTtgTjf2NzJ/s35MchWCXnmJzg2260KZY4EMF4FD3BnI45Gwi0hW8WjZXO2kUTWLNaDRPk3RLQlJELrEuj50aKob0hOyBfckKBV1iFICFnrS9qzdKieiVLPrRzgqT01u4c5hpeaAoIHMmd1TBAQzVI+3wB5VgowcVlLrUIBQYQNWru/pi4lAWDE/vB45b5PJ43jv9bqWfFyan7ddr/VfC05p7aYrUBLagBo1LaEWUsTYFmWhf/x4s34XWGFDbpEwpXYQSpsyAM7va8cPrjq1ZWR8HE6PK+psYJhqRWqqNiN81WWJ6vyHT9/IboNj10+kDbULSNPuB2UzOnus4ScIONzgD+DrbxuIE4c6CvBgvVGOrCOl+l9F39YDfUahz8zWz6iEzt5KZUhaQjPQSoBGb8jRKSEbtJiK3MFvF5DOgalG8VhP/0iLR5lCyOXW8LjfXE8hCSYkyK2zgGq6ON4KQ2DEGxIRPMGlNHm2d/Q7smeHKYcfXJJ7shBoVSlQqKw3OXzi1VSpP9UwT7YNkG8wbuHW5vAK9ijPSvL2NLk9FmxBCgfVjSfEsVYbz/ClBv6oNz29oGhG9Vk0OGddzJenZxdlnhUAjsC2h/s19pQgZMbTCxdDCvROBEtznZcsjB7/1oKpWexTdNIyEcIuHkCKlbpRhR5y2kxcN9Jap4geTS3dZpqZXT/+02gN5SD53m9plAQwYDlQ19kVTWXRiAC4Pvy8qDortcWanZa8m8m3OzbbJ0uDcbZBtZxJGQTIVbk6epO6yr9Im2bvZAFa4lPRSvGGGo3zGfNDmkkio0Jm3ipY+/2krcg3M+wHB8ZSroV0heFEehTAyUlYhPl122RduouARZuB45sF6hCgRuH2BqI2NWOjijBCuhG3zURES0Dzp7g9qfLDXgnoQ2fOA3Agcaf/fkH1vC/ydJ8tkPmYKCFampdMLZqG8FY1bQ1DraL6b1Vx/OzE62IfhsL7I1pkaQr2BtRXwtrc1FpS9OWacsuwXRsYcci72sSDbWiCB2I5wMRs5f2EB31hfSN6juYpQG+dUK9gipwKA8PMxYPRwMTlvuAqobtDbBkZC12Oo6iOuj+4PX90sERWn2/9jmparooaoz41zsrUa8eMn1qFxPlsPfe5wvYpHVxm6OwApqUuuc7HNCKQc29fMdRAWp9YtJfI4/QhiH3EMo9g0I/dBQPgcNM4fOAba3QwFr22cqRlW61odpwLR0jCFhkivfBQ/GVjV1N1Jy2ku/Jw+U7wopMwloEaMPr1jqE4yC9j5zv5CTc1Mq9hpzXjn78mh5SBpiBIcasJb8eDdfjEdUm5jpZJePXeiWcr8O1DmmJ8SxVhgEWD/hekK4M02e8+fFxkzVzFOrnlPtR6uH6mhfAP9yFnJufOblLzzpoopC4yuwQkIAUIj6UwlNXnOgdXitIsnM8jK49bANkzcQ5JK7lWgfEkBe6B18NtkVPu7sKV7uRIwYEx1j+M/vSB5plDXuGr+E0G+mjjcrZhT44qFhWoUlqE35QcFP6E/IH/avMvgPLHGxKaqPwVF4qx/Mlt2coeL1j7lvhtMgr3d4wpbC6+NC8mMO26ZG37TA8kvU+0LTZ82zOOG1kjZS6ZGZFr1UjHxnU2bli0MKJvuV7MOMZ+tav0TZNDrfobvrX5F1oRS03FsL1UgdIpvs8wr8g+fPPFDkddPdifRbblEjACmKzheDeQsJSdWvZNuxYNILiPJ2XMATr4pRwlnURr4dma4C1pY5H59nlcga7wQ7LKY49poDeV1diQkVkx/G6CKmJ42McBv2877L3VNi7zr4byk5C+8W1Rr6BbFirA6CwKf3gDX29lD3bh3s343Gi6QD6ojxc7USJaldeLwW2A5JBp9kFQJEAIUbrcL9rUx/NO5wm9+lyyg892I7iX/0ppIyTuxX/b8n+I2ffJRTCrwO1C/1i22OL55ZXzvMzBMx+apkZccWefDnYj3vtXgVC0kBzV1dq+9JpRsV11wjwFAaLk48R36OrKwLSkaqolL0zcjWj9K2piafE6IRaKYFm8eoK1gK9LbmbRvfemhxrSpGUL8ju16UjOHyD47jL4+G3FHY74uv3FuTNaZ87uOJrYlh3OLd1sdCRiKVsnQOw5djHAKSKXv81K3FLpDgVXtuEFotaDc27Hpf22eNdk9TOt7O3nnOD/c8JPJ3tYyN338duOVW4hpFxa+KD749ecTNjT0X5wuja9N3/BQ5emhG6tQ9YKlcR6LbBbJXlFJr/g9w4uJVw3eYWwqcYpntXEO2GbWbvre/GEbNF6vp1BLZWVj/mOrcRw/pQMAdf9MOOIY0HByDWnCS4dxTiy6E8MbK82FvjynK5CQeVRPydtyokermNevxUfPEYX5YjV1ZoQy6Xilcl0ul6br1QjlC4thkbd9ygZ9iKld/XaffucGExsDoH9Vxavf0du0foTf63xDCa3W+tsZqFUhn0es4YzLRf4Fr9KLU7YP44Ns6EWf7nmlEKhSlo05GloEVIQvO7qWFaMhIQlLNs3lgiy42vM80yu4fz41QW3im1sxhPkgU5ykk59KU7hlqPq5d7+RVFFYLBQwkqzeAmBMoiOcaZLNU3NoeDY0lH9BdohoXVMtYjpKAu1jNIktI3BVx7/QNJ6a8tizekWebGWMyN1CNqSiX+Bc3PwEFJStMBONn+B+IqGxhbqbgFiTZlly5VK2yZh7tu0kG9XUuqXM/f63q1P+53y91VpphEGWu8GwMXUNRjqeZmhdTzbQOulYt6BukNdtrpSJusZLFazlNq3c6tRVrWnaXIzFhZoPTwTTpqXI0ONQvRXl0JcQ5ugTJttOA7bMvkTed7+u6uozIMBw7F2qUVEfIziKkhPaF3ZOFe3bVqZ28DgdkAlQsHbb1vnYvze4ffqUspuzQ7uaZ/+7ed9w6Ij2jQ8XO92p2rttHG1BDUcocyVhecizLJT+RNlg8iO6uXBPHVRxR+w9Zc667uccD3kRtfPJHnIJsbNfm+Zj+wwJt7CliGmOtLw23XyIqifkvvMlfPAzuPOVYJMmdCxKdVi8KaD98bq4ciWyJir9M4P2RqNU/Pc3rfND20L6Swc4GIwzman1HqBorv/Ff+dtC5SJcnIq1/lVwMOvrmTbpcpMvkZAKq6GvRmuUdrClIyslqgG4pcp/uQXBaf3YFw1AV5uafuGQTdUM6at/4ll654Ie+Y0b1sULLMSaKlZvydYYUxETN6+2OrAeoff2QA02lM7sfyq90Ji/ItALu1PMCbvUsW2b7lUCleO15E9Ca7Yabf43X/I5v52bdBz8/9dpoX5B02nUZQWidXaoTUH6SECWAtYuI8UV2uSyN5CCFSTmj4ife4o7blF3gYmy/ab2Ov0W+BQsNpIdqOedpQCcvXXraGL+ttZEuw5378/pDho55j4nxnS1UDxT+GDbNl/eA4U9h03y5UWe0n1PrzFUzK/FpGhqpTF01U12RMfboXxEd7Ta1e6UvMrYGi3IVaJPpeIXnckHE09O/SxH7yM4L4PEPHSAF31VU9Th4OIUa9wZjwUcZJXQ4v7+4b0V5mlHqbvc1ypMIuBrjiG8iBBJP/ehmw6urU8s86MgIPmddco0mJW+J/mexj9JSjNNQ9Oguhnbb4Erz+c5a83mtWnpxJiY1FaUTB3JgUTMNjN+0sLiK0TBBmb1XXSnHd83Z8j2lw6G6SCMLsVP/sOzXb51QB1Cj+jaItwF1moydMUaae5vP37e7+bxmz7Mm2SvmuVZRbRVJxVPUNAUwuJfkLA9NX/I1rIefoozRqIZoWaGyx9XCOxI7sJ0AbE5Lml+g3WZrWSoI3q9kA+fz7+mPecz7uErA6Fgx79WDKn5soXqjttc/htwMbZHOxvunULVnGTmdTG+1P1aqkQBHhUnGMC4LUoxEibvVcHU7pQIocVrf462tt20fj04/5DZcpUNeYbjf/j5ixtHfNG2PsKOsXmSLlHdXelWJY2YGETCb5jr14mI1eZOW0/NfwV7pnKM5E7YrHsq+jHfXgVmF/QL7Z+QlYjKQOKRWVWUY2Ov07NEhxrv4F2TclaVKaMKd2A24Qw46DSWrq11lzHcbRT+o0tWgNd396pPGx+346bjXHhkCYltEdciLzIPnAasQJ+Wb7ITCz34YA23mtaFmdctp3RCLop6vrkq+RhTtD8v8nGe3q+Nc6yPonfbMKvMJokpj7BvsjYtsncnlq6Qo8B61yMW30vd8vl/n2OuvmBGqCfOt+3V1iSMlymnbr57jfbiB/wKsDfb/6WsMrPrvIkJp7XRPqUYcK3wsy2xojljVrFXjUTIWt7jN3rVAFQ9rKg+WPkC3WUutrub/JpT9JpT9SoQydtNtVB6JVz1Hg28i1tkWpfEfl+NV4hTeaj/cHTxxNZ6l2W8M8YYM8Tdm+Ckww38VJvbJMB+HoZAJ62u+XPDejEgd/yhR7IQ8MD8O//m1xJXe5XczKZf7eVmn/4Lhm3eGVYa2EUEYMJsQhf/sd/22QpN09dXcw8V27Eu4t/qmEDW+y+l1L0rVBFq5N+fi4r1uO1euH98eSlviSdCUbhrvGO6441hW8hC3jUEmSnp8z4H7lww1oYNCqEu4FcdX1z147fgGNwSUQGRWA0p0FTfDzOHrkR1gW5IEWTB4ukUpqaG5YKnLmQuWTlGRmVpCVWgqZamFVxe2IbsH/tyq+DGbm4XT+HRH//6BOhxYTh1YJInjOT2QL4apL1+hE9xDlqpnIboh3y1bJ69S+waVNygoFWu7R/yeO/UE+lL+9BM7XOmEJBb1US6tC8gI9NO6u71NLLSkqBbhy3G4p2QX20+hMHWOv9nVngCjT21UM7ELMJPjmW4YTq8KIWh+ygnan8ok2VDUMtnZRIXw4G6cXDkabgYAVOT3hIAcV5pBgA5keRvsGcQ1oawNY8RZW0ckXhhPkWrph1dnrLp4iBI5n7Ruo1y09TBTn1Y+9SqFBHrolJiYsMtPfQoep3G2jualJLiF84QIIHTBrGJtOfxKrXuT1Z37GJ5Q72ALHfutwACz6IOQvSkCwwq+1JcnMxOVd8FiBxblJPyl4oneuxtSWTrlnybpggCXVXcHS5LwgT+gKLXhL4qthKrVL6i8lb27JoHfdgTd+rjCKskT2LaDY2zsOIg6d+ew81dKIwxWUfw0RTEQs0LogyDoB1QXo3Oe8N1r7mtA17fkAPxi/PZkylfWmY5c/mUNkvhXdYjiygzM7NiloC8b7QZfCm0QWWxdP3AnSyuifM3ow5oLvCLe9XYNlD3axGfZ0K4r73o3vh0C6/Trcsm7jHgOkUuTrCvZ3czmQ6XNfS8qgGmyy/C7HCpx4BdxveF0sJI3oA5nfPSIOhz5jGJBAQCNwWQaI8ZgLYqV+CnZi4iqWmPDtIeGOfHHhtk3PAtQmT8MC62HpqWwQ0oSWbAagUWnVcTSVARRjsEyUbTfEoEF8u34KxNnAayxuk38lHDt2Cu3FidlP79ov2xg3L/Ps1X6T2hyvAgw/kXR/yqi3eTkbvShzxL0OuzDXnW9gC5O1Jb6TUA6ftBGwOQt7GOzQr0BWmFRv7Ql03aPufZDo79ZLf+drZaVy4V7PDrX+sKcbQ1rE0dsYvXLItd7pY7bewbNibtQOouwBbYKrOuXKzckSWzxfqVjj73dB+p+/SbV25hK28btmyivtLnPzF0z9O/NTbVNFtlPJuzvx7LF1iyKYi75OKZXGfPHM77+EsN9f1vr9UD59MIm34a+ux9X+mWVXYd7/KbmujpO6j477I1PbWVU3i4mGo0Q0b8pzL8pzLdCTBOipU9D875FPbcAzfNj3XP+tDRGxfzoKqRndcz2Ugr5oqev9nC36rm3aK7EZ56tio7jsoJoA9TZZ7EZpGZMP4HJOpOAiME2kqfnPDDbK4UBK1eLQnqt4LSWjYGtLBBfZIs13Sz9GE58dJ3m7AW0XO4ouce2vzdB7j19xXoV1xA2gFTYUOarBDd0z0Q2iUAwTVgVb2SWXX7kOiK1jQbbe8t/3oV8yejsWwyF0I6UGmyKn3obfLKcvT+Sm1GSLGddFcUfv60TaSXL3A0ljrtRmSQonso5duWX4zUGiJMd5HRPt0wP2yaWmS5fu/ySKfkDMMzd/sa25YcZixM91Akh5NhtJovx8nXDw1OeglaEIU+uYy3xuRIDynpl9uJvf/ZccMXM8DbiksrTmdfjHA3Yr7o1Y4jibFUPB8Dphvo2W/e+djpTMcgxEDWFQuE9GO2AuCMTAvGHohopD3hK2XhEo9LGdjS7TxIgRQrwGagoKBgiJSmmq5QCCOrcLcsWje90asLmcYBUIAB5K+iYY1+e5m9BDGEHWhKZOmXWwTZ6vR4+/4ktsHxBd9FblwvHPMTDgw+2XNr2YNspCCt8TQ9auAbbA9H0dD6HOpUgJoGz5NKLsw6+F2bH6vUvwT0Wn1p2nTvi8C9rvIEO96DPagGzgGkkm1+ee2zVizGdBrSaublcLW4Rvf+aHMizxP0x6G9h4dOKx8yPtOCVWHwJclSB8mb9rkmEWg82pqUp8umNzGuDDClPI4oA/WCIeSPndcJieJjW4vgCGPi+H4x7TymXPyq04pkquZlgneu1KWjLBATtj3QLysFv2/FM3eh/o4vcn9Yl7ual6guI5TEzOMYkNYBqqIFGGwQJ4LvtWNeFkuLoXBdIrNQE42V+yxD+mF8bvh/zJuj2CW18nRDej4LQBCxGU+PO4fsNjTsvbTXbu2WF9ZiWe1MfAVWAuKX7WsSiFjWN6NfEoIJ748456OHx4X8c3sehwFZ27874I0VP/Y2l/MZSfmMpNZaC7bwZXzeq2LXDsJMNrS1oulXAjZoOBefp6qIlHjsOob3pzBvmfZYs37U0uxi3tqqznUZb2gPJOWlFgVXAB+iOSEYVo/37sncs+NFiye9/wrDxFNhMxkCTpxGREDpDJssZal8473kyY1pO4W9DlHh8rS3vO1NSpheJMWpGF4Un+6KI5qsLy+coVU9xFcmUbxnMF1m2oow7d09PT9nYelHEmHLShWJfWMnp0q4EmXf+AFnYFvx30oX8L/4gZc9XdlHIoaLYAsam756vqCSUknCU56sQZm9GZvvul1FwGnBpycZAxrV87Fjy4aenfqGrF1buV5yLyvMaUNRDc1yMhmQof1HYpmQn/0vO7xWXk6JcdU+jL3mksCZwTMdQGKbjGCA5tio+kJ/a+hzcK/Lx0rJTUH6DgYLrGovJRYHGEWzgPqk6OIjzFZ4QIxTnKwUEfCl2iz+3W+1i2OgW6Xsogcj1Os8ZvHDeMqDqda8tSlavGeAKeJ8eMs9zDJiq2ieOdZ0OnjsdUPV6D5TseZBBfCbXvYrbZH1p7mGR4hXOk/+hnngAUIFDdE/DvvxyrSbFNCNvxIsieCD+Vfgv84Tw5s9CaMI6VvN/rCeK7vpY0d9MhqcW+/nd9MGINjAsCKhsGxiD1qckGsD2duViwdvVv/0jE7chN6TrJq8yE/45IOwjCa17uH+rSOeuQGEilz847TevHrdS3/2UPRaZN3YZPx6XSW+ZvelKGgkJylVRcNPB94lo44Y6WrDVpVHJID4UWl6xao2b9k9Un+GxjDIcvAGZOnvTQ4ka2n64TC/o1dJvVkAqXeyVXRH3KaYWpsFolgdXV/IF8mkQgrplQw2/QTZiS78BM3RmJVM3wdZxl8sPpZp+lLw+rpoRnWbngGYHD4pJ/NnnNNiaEdFcKi+M0Bq2yObUTCx6dRGkeMq0qy/yMW5/egGZTEQD6QcFPh17UX05Vqz2c6h3Mh9fpAvYIS6yZUYvAQwC+9ZMP0Apkp/JpSVq5fX8r9VSs0X6z6Tf+ePv/w+9tqtfd2BZV+zXJHnh5Rh0SNFpWU6P7eqUZ2NMIPyppOeEzK387/PPYBf/hrXUmPhXb7pKEIGbdJmWKWx0/7R0P97dIxLNU0yhA1eNTnF24Ke8UTewRIKY/wwsrfinXjrk1BEpP/ycNbun6cds+TwBtSJCEz1wDXqs7zFj4oCOqxcwo/Ldo3Z3MDny3T0b1jGy9fIwb4tyavMFTphzVrxHs63nyNNsAVkgdc2IGPCZiRzfXuZzFfvxZdptQKLiPeGE9wn1UqtsJxFOmzr1Xo7X6RmPAvCJ50z4N4f9AjtA0qITnLR4nK7Kd9IXFkO5Sb5oW1QPOG+js0U2GZOZIcopTPpww6c+6hXm4C/ZRWKmEYn3NFok87J/ut2OtlG2fIG9PpJX+KiTbFn5/JqEoe8YfJNcS+Byj4GZrrJ3OtX53oaNRKeJmlXfSRGj9/vFY/Iw2EboWgNcgzZd+BzDAlknNHI1R0T88sHkSilkP2GCtt5pFoxQCv+OKg+tT8c5iAIJ22qU2fcGL6p7XvijpJcg2FZbUXuQfY5n3CX0W+/mQW+VpC7zIQ2lU1kemo3wZjOf6DAhwoG0Q1vH8Q407KaH5pDufMJcnK2adrPUHpIo2UjFMBaJidYUXEfpOEojGGyUtMCCGxyfCeOeKu9Gou2PHfToLeRuQBJWEFGb3KLxnDqIjR8WGx1JagopesTFRVp2rT3dAT70DYVKOnVxwRBYNxncmj0tmoC0B0nJATYKElB1pACRNqjWQHRskvK0+iZYZidjtg7DvqbxatZo67xKW7VpDTcVi2gUJCBIzmZ4jlnvBgPS8e5/wsNzytACQI88zWv9CJYuETPn4+IhKLYp7NhJ1/EPDcTnjR8eNduPZgg9d+9CFEwWrVRrz85MyrpUCBhCdP0lW8z2akTK1hqpzEZ7C/XaP+b71L3MPf163E7TqE7faKpx4FD1ggjKmzYxnEhSALnza+Hcf6Gur6wrtPr5ZzOoVyasnmCbFYO7QFhxAa0CWAUMi1fgUi25vp+7GnqCr4K57RiK9tH77RLzbxT6ESg05cep/XPBTCsMXTJOx/8ydDxOl3R7okrJdnYT694KMBapJ4u2/ZBSQMyGKiD1KduA2dnomCM1d4BmTy5iyLZkE3RpUvtN5eYPFHYu/kBDUBf6fwoT2YXcYTqy7wckqW6pRwqGc52mlstnh/NJlKQ63lOx8oDHkiWPZQE0OYPBXcBM9P5xmazesSSRrR5CY8EQyIyLnwC5AK5FlRixkbxYHR1hE9aD6dKqQVGxEny5yLCqCTagEiZicDWsU6yGLGiM6BITJPFL3wzOM9AWoEjK5woq9WWWUyI+Vc6yoUj/DglQgOS9aYAfpPql5p1Nvo0Tz9mf4MxfY7KFvaUzco810x4P3emOnHkeqXvoMnEeAbBiZLDMEFA5IuZTCRxgOHuU8oDoJBQ7hp5c7oumjRPMlvOKVFtIvcWVndSp8lh5z9T5u/a9k6LP5V6kp6i6MhkI7ZIIz6oo2b1i/KeehRDFGup6/gyvko096QpoDX69jAIp1nDr7Ugz/mfZG8Y64Bwv//O0Y/CzdQgTkLDjhypamSnLhB1plk7ma8ucbK6TP2hSJX8y65DcTZTlKuzXvFzocD90dk1iBYAmHRmAyuNKS4snskbDmbqSp9mDPgg1pR+prYyK+51GKL/gSCc4SjlRba5AF7Wt4nSsRkcCGkvJXPxPhlTEeVcUT0Ep7+pKQ2o8Rdq1Som3IdLJxtYFNbF8vbhcddGppXZo6KVV47BDc+vOKPqq/4QGHGSDYlzxLIV6KrZcT1U0Xs/R95Mtomd1uQ2qR4tsmch9xmo9WqJeaGtFacl6h1CHBqjCt6TrBdVybkRCrYpe3Y3YqVUhD6s61Um6TXWemjPS9311ZxUvOGNH8VAshyTF+HekhBwdMd3R2SuFx/Vi9urqwDfToYeotfjdQGVoTEisWJxm/eMPCcq5+IuzQheekKoLwUBLVvtylj7sW+Euv+QcH/X5kQT9+3BEjfpyhHN9EutY3qb3rUr/sjw6wpmnS5XoB9AjEzm5pSwlLhWzezaSswDpnkzGvgb4bebp5WqFAT23GkNua7zVVB2p4trrN0FwdVVN46MvjOQq8+9SixYjmU9pelF7XnWzcMrbm3HdDTFS/N5SxBppzNYOUUgIJlAxiHx0hHdPkqhtA7GarbNeomjGqJebaxOiuiuIkoIZAlGiuW6pbw45V4hUmKFYwgxVIgXx0jeisWJJurtqL6QsaM8I2/WWFo+q6qgMzVu1skvUG9Cza/VP9dX5h62yYBOGeeAXHzTCr22tmPAs0RhWKwwVAH+GOTn1oWcVLA/gpU/oXAm9LmyT8iIZrySHa+gVXEXFlA6MHERUM/cYJJ0Um+Moy6hRRrN2IQjDpEvIVWo6sBmuq51hfz11xuWA3FKuO2NmOGPeAX9nlXmByk2N7tEI/zw64r/ESZwPBEwk7+ksrmTYob0gW+9Q8NsPk51hWItAY9wBEJtyGgksDr+ENdKoaKaG5SiemVvtNi6sg8U6QqxMmly2cKpzR824oqkohwWGc0t6fMhKWrHxpBnH+OHRAwE9gT1F6diOepWS54s+FwGCGYMSJuHMgj7WhK/zdI5CB+fxVco+eW6WL9OLBKSIrqUNT1N9SEUjCSKCTDjKmL5QLBED4TSVFODap0z+IGi5tlWDgnFiDCTrSQx9/dRbT+hcaVLltEdHbprIbyG0ARmG3Ut6ELnFbX6/dgKv17sS1xbtlmuARFd9n58+QC7CHFtdB9DoT+TZ9914bT2driILffnHEKugSr/ohk7QoT/ZrREgCU/ZX5N3WEmO3IEe8lWyVrf5nYwliAU6xDaArxVMgMy9A6CiL9nmazM9N5iSy9w3IWT3fs/psDFKKKqN18G53nxxfVdkBxqgFXOIx9ijcIWiKheO/zhI8d5CXZQE8frp7CWt4pDnzshmLlEANLQBEafY6yib6C9WnGmAuj7xLhleURHsip540Xu8KQYolZ7BFno9fwqSxgiwn3CnNSFB9Bfwjcd6i+ma3UYEJsSaij3ztzR5gwMTHyC2lxhHoPWksCrpXTTWdhU7DKYltNmVKBf/wdsu49mM4mRGhiuYksKX5AmhamkkWafsj7mvpGKKpqhi+SbJkhyZLBQ6ytV4WaRAskXvCcxjdyOqzNNZXzCkTNAvzm0bliYYn41StzFSbBXIh9awIiNXt1hLqggoXb0hRpu1du/YqjEg+RIFfr98RNzLMBfPwhUUgFbyuN3MVGcObkB+NlZt3PbIVOyeQ4lDPcgTbS0q2YIVhXgz73cd8YL0fXuDf2Cl8/lRGL2+rNT6K9KIp9Zfmb1KrVm9VvUy3gMnR9WcVCoiT/PUYlZHVWpqFMgoFTrSLiO9+b5EpcprIUvIq8bd/7Orcwx39xQWFk/S0l8rW5EN4evLa4L4+vJ2YZRzRWtm/HDOrgvn7APB+RdYZNfnGqrZdq6gXN/MuCeh+nHrpOGRo9f2Du7wBX0lsi6n34xvkp0eFfr6SFSAJ255hozxxZu0nJ7HB5rbypY9WLfEq7sY5xTIhs8R1mHV4rMetAzRtaTAvk5hjPaVqyygVaCxOpP37xRKkarsFHJ4+ohkn9qM2eP4oBPyXuh2jAJ+3NPwHPJqKfcec6RsF+KV7pZhy4PSNWmyqit+Oo9bx8EzXLH1TuegHfuJ4YaTps119QZ3EpbFbKbzqtYh092037ctH+peT41fQ9l/opDuHVmP/aCVtPcDfXU3Nb9d7Qu7ynIWUi1nWJVm+4ubgqD5J7Bw+8FFiu9MeFadq1yIsRkvJ9gmJos8uARD3lP+yz3Vbp3c28tr3FplJax13XIvBG58gqmSMdh7DN34lqDtYdOwDPYdY20p7MTeHu0pHHgIhHTEn3r4H7kneM09kW3R8dS+cb2LxV41Rd/xNBDZtnXau5Wy7apK3r53VqZbEOxm3ziTFQf9OnlWCpgICdpi5aqOliYpvXfruPPmyPSbPGm/zY+kNpqWcXhGsI0W2dj2k3Pv1Ggjjh4Tq2nIbyseSgIVGSswQUZmGozNz0GTNwQFeRDQtMrOl3i4X2LS2gDSJYtNnuWXaEHpVjqkzKovHTMEVUPZdiPHAuFDxy+JieahV0fXig28DiOZ1ghplptA1tjnGApsOLIYlhZM/bjxgewzyUygoR8ENAuHKnKubZyxChqnF4ZifyFgi7fRqO3qLlcfxNHRgY1oGhPdHxhW/PZHvZpnPbfl8aznuVOj2+pbUJWHZMQFzMY4GeC8+BbfAjLpguRlvtKMXGCgy5rhVwQu+9aEaYltom49sZO21jvLysx640bbJOkwcbw6I4+/YniXfQ75vJLPI4WTmTJfogeBuodLgScuxm+7/CNddu2CkevMkM4KfW00jE7D/qmK5xz8h9x6tsuiH+B6Yvkvz6qDrI4SJ+JkMp6+5kO13ArPmOMiVAuUJ5lcLzgS+8kqPTsvxa0un8b5MDcXXPkeGNAReUUCOC/IpmqbKqN8Kl6IPTSxWp9llod1FUtNHqwCUNTkYpUFPt2R6+fTbdMg+WJudYwxgC3nQGKGsAg0zv2j24GRjzp4HNbOsadKgIOh1KjzrvU4wgM7WdvZKmWVMyCbz+3MbZ99I9SJNDFBRPlUn1vCUNknxPWRsTb/irMtzcRQqlndh6ql3ZVMMJ5W/0X03+xKnapJ3npse7cPpL8Bh0skddO9Q2NCD7FDS2ealsg9xHPZMp9GGznMaDrIiHhnzPkWez5tXOBYoZma0b339qgYCNQiYiQdE4iLI0aE6AOSgW6wyM66wZPnz79/3jnpmAvXhrsfSouHYSddkhtGB1M6Zi6gIk5RZ5pdLmadZVZ2JklnjuGSe0G4rUVJk5eZzU5tDjQc35ui8ulxa6pmKr58XjkarYvTdjOWn6POZy1FXS5UzhwH57atyaOs+4nROP94K4mveYiqmtlZ8FCvpnPbnVvebYyqgzZc1Yeoj4L5KYt6vjpFpukCEq7zOnqle5IBHY2XNrM7HfUtobd2bImNsScX/nARQ+631rmmV+duREH7RLeMcQel1Qai6rUCX30GMI/WTui9JvsElNO6qokHX5FJ86VvPg7s42V3RiTWeYE14T/zQFRdcLSMExwMLLaZYzKenne1oB5pwJYAdh6pWJ65Cq6+pl+uf1lefWtIbWcgcpkgK5Cj+Cr5l63liyI4GY+zjk4fcvpxMJIlm8fQArui9FC4ymHkOsq3iu7FD2IhXq6uEDHqFa51Hh7g21uM79RzcwUyCjT6DtOclO51akm4nhsn69QdNxazLt2sUx7mxHW1WyM90F4nlh6xAMBEya/5pKob8QHdgSWC8Qk+XtLARgd0S6XuOOi7pnKtbZnafcL7W1FtmxWXPaSG9xYZ/LXpehE/n8FuY0rkN796bobWBWRiZ0Vcy9I6RKA6MVey8oUr7OIlMJTgFvdOQVxecNy88aSAlJCfAYMso6bwnSR85AXEr8XI3ioKpnnxbKVjbHabjIfB/1O+prT99JJiOs6T58nZk7d5V96xy73339x1CWVyuQuVpyysfoF+lLIm8ZrbcdB90H/1agj/Dk9P/jQKj1+9GoVfKPehSlkoCCsUm8LfskgBYrRkC3hQg9fnq1ewYo+D/4RCFd/UWeWlslksuhpO6wzWYwn8aYWPLSb2w6ZevFk+wZjHYdklqIi5Jop2BL29OEaOg5hzzT7Qbmyg0qhYRNqV1DruXa0K2iB8QT/cZUxO6FR+0LjGLaNJNdtrTxEvIj9ULDYWcUxVHQO1BZJx3vHBI0Jo5bVOuooHTduTattQa50MsTTMN034/7z4/rse6zDp/F0DpkKg3M3WOVnwg8ZSXmOxoyN/3p/JG8rfvG1itHEN88/V3oMK2AurjQ64ixtSQht8u+mBgWukCIHsFmiCO7oeVXCdVrpwAfx4lIHcwUhEQAcsqxadOO44sWd/9/lnd774/LNHWf6ObCWd7jTsfHl6ejeCf7/8qvMQX4/vvMjm5ZvxKuk8ylZ5tqKjvs8/e7hYdJ5jpaKDUbdW62TW+/yzlwBK53/G6/ELihLVWaST1Xj1rgOp+H7oskhmneTtdHFZpOtk8Q6UvFXnEtj8mxTUP+7u4fLdm/NklUTy/Q2UjLA/9dF5mONjpARH5wX2vIoqdX1FnCaeXy47T2Bql9DNeDmrVjfZvc7TEqEv8mSazlM843j3+WeoourxqDFAV+MOYWIFNDYuO7MsKUibPR9Dl3RTdrGAClAwLTvjzz/TTUxhBjpkb0k6rQPtZCurUMtwYS6+uEMB0GTy481PfdiP+6dRPk0plNNlf0PBFnXs65klX0kt2JGg+DDlI6GDPMwd57YclRR2metvAnozt79RsUU3F9kMA4ItkrdBxMFHAzkWDqLzBGmnH1yM3wZ2yDqV/tXpaQ7VKmGirBhzUSeIdPSnb6knrf5cK3AUx5dMF2U18hgHDbPjlmH8M36Di4tLRJ/VTP9+M8Y6F0lRoPEkeJaNMRArv21F8dqszO8yXDkAcMFP4FjhjjgQBD7Q9430pEUJS1H/CRZ9aDvSWdfe7Dt0swO+ImVfi+uJOVJ76OsUMlcF7oVgu6K80mrX5JPvAhi+0usINNJ9GuCjqLpuK/SA0u5GHIOqDNVqZXcDlQAh+SqbwpRQ6DOD5qiIphIc/+pq5ntXnZsRFXUeF/LoF80XuwOzCCdMekrQGJvVHC9sird2cHU1VxFEixPkhTpk5dR7iy6lyFYBPsyt5lZEdw7Y7jQeuvKxBLlehxWpPgrSwDj81+BxG0EFob0huaZraFhhYKWmcO7sjOo2S93JoZzV1f9ZVf0Xr89pNEMNOCwlKOiMlXx5Cp0JQs0LEYO+cKZaPIjv1ktY5FbO2GilSY4SDuL1XrXMvVZM6MlDcJW6DK4khZA4kyShMWI4IuCNkRY5BYnWKiAGoJaWLeyyk6BPoXMxDWVmoiip5ZcaZJhXnilVD/bAJNf5TlphPNbkcdgPhQB1XRMjrS1tqyaavo3xtCSJEZ3Y0Yep0LLvgjV69myivWqSvVVhKGYSpgENrQNsi6xx1dsBXCYajiLYSWd9KgffTUEHr7UD1R1JPbvxJb0fzM4GqJQSm9Hz97OxGqy9c0kVmZPYkwqFTQ7Orqr1M9T6+Z421KlKPxMl/GyO2oc/OxTxs7P5/OzZfX5Wc27fZJHUA00JWAMS1bPgaTgVuvjZPlcD6GNIcfI+/yx3+SbwQrzeMLWi9CEFsFdRPTSeJ5jdgq01tZyGAIwSD6p57pQpm7dyJefwxbRKIFQCyYqDqqNuA1DnyRhf3fUFiNcx3pfZMhkc3v8LFeVgqW3xVFV9FNz6nbuduwMdYtWExyRZz3IHFNmPA2OW8vZdEKlf/WGw+SKdd4arLCtHQkioj5xu7VD4sP6efPvDy/976IyRrxxbIzy8vxmSs9uoR0LVt8XZliHcfJEsZ+l8G0TQH/bFv6BnIb0hEcSocxB3XgmRvgqwUAWMzXCaXS7L0XYHKCDMX2Qg/Wcgc8eHztncdFFwsNVXwXFsap9j0UemiVdBaFq5LJsbOdnViHjJxYeatPvWMMx7BBtBwhbxKD9VDF1AFi4sQNg9WZn3EHP373eOjgiHOGmveIVaiKvhiApYAEJXSMHVfv7dME9/Ee9f2BiWSSAJ+P79LWNKEMQP8rKEtVXkbWNR0/sdIfiRPp/YRgEqJG3rsor9vz98+nL/1Yet24uPANCA0FEDuY8iQ+khP3mszplRPl1cXiwDPs/GWHnkkYl8M+BT6yDajN+mRT94F7C907kiRIEx1J5fxLATV9xceRvXB+UEAmibfyEFE8R11jTNZq95cGzYsZXr6Jpx4X5b5eo7f1x4En01LJnArmMl8z7PWzvKg6XcZJcfvrgMs1gytahremb2DRsuUUlYzZB0C1SZb6Xs4GdP9FmrVPUQydyBM2UU31ZN0bdpqw5l3Awl7T2DWUw5eI3OUulIkxN/R13ROGpK/GuAD9FUU7IMJYCmBYV8euCGymnLREiNUWG+3W7nyUPyWALXfMFnflhWLVmMcMJNgFTnYMzEcoVcftnOPdbloGM7lwVmXM7o6FcfVAY4BwGpygOjZ7Aue3VlaxVXV5dsgoA/tZkQSnsg0oCQD9Osd3Kkwqc9Ra2zwMHRbefeJQqFFDVG5iIqIOXpUn7wZQsGSdKPjqgSar7pChB3dSWfwHStL3HBtL7IBVOnsBNl6C5xzTqeLueZivZzPi6sydOOOtiOsgDUcwU4dqqo+JXswYztmVLGDUuDvVym/0AHSd2vXMaozJwwlDWvl/q8qXwxMchnpVUd3PFBJQOdHIi3YpBWXFwn+EZG3aSpzZnNdkw8Xh6XfRghhfpIepzQrLqafRI3/If4BhPskRQ1IKBN1DzMYu/ZWm19VJf7nbedtAxvUbPSb/HpFIywIReBErrAly5msMbQSgEqbv1ukK0A4wB/kKcVhF7wyQfWTdDfbTZ+9zW99GE9GKIclCYoAuk4gf2NeRIESwZoQGq6QLRbu5IrmjUfoLaayjNne3OpQ7GKb2jSu4XMvrAy2/Ha4WewlGFCHrNTu4/n7Mf237OD92docuk0z2PTx0+zvPcTgPHDeInrDBc2NsxmMfEExhoxiHuhWw1Z3eNkCsRkRSThshe+sv83Ga+6NUamcr8FUju3/csNGMtWMJC/7gsGlm0GA3M1GG3stMa/iJWUmaKrGvlpQlMc7F+MedVtc48177k+37oOr/K9yLAX//mNi9wmF7k+B9mXezRzjhtzjX05RjO3+CicQl7K4inY46GsZucS6zErZSi0jITbStQYeQ/F+eB8tdWrJ5LcTykjm7oq435yGY4zIUnOxx7PJ6k3orZt7ygpB954A3wlePj7H54++uuT573g2D1DTz2uvDBzsKyECZQTZAPyQDXr9hNlJBcbhhyHTdAjDXP5AGAR/+fZuuhOEmYL5TKeYOi2MzTWwPw/y94kq0fjAijQxAOlgeEhDGCe4sVilJd0mV+itkEfyMbHQAKoT0yMU/kkEYXCubpkgcpRwBEqG2PIGpEu2QofYXly59RO06ITUkU7gQ/1csRTpHVFuyG+82wackYWan1RqBh1vkFViaTEbXTuhCTJ5WaSc1nA8jLu2RRWP7LEgJBumW49rKRyez86OoCE0BcvqChjgQHBJjDUlcw60aio3TkRnNz5tR+yp0CnVXhVokK1qY18ZYCfFA2KCjmjwAHWhq8S+f4hryDgAbIUkAfMOMgYba7q2S4VRf7pzBRWRsvACCaom23VI6E6O6VK5JhBIRHyrOD7tlxcPfquy6sgY1Rvy9Ex+4rRYYYQBv1kSpOmTB92ujypSEWYkzb73alL5YwE7f1PGFYSzUsVfMsTkYFR81Te/v4JhRj1TCom8G/Nca20Qhjtsna+KMGKXYcfEWS4s5EhLYxe0UJdTKFV8qJUoS+MXeG0wl8Fo0NiA82Sm4FpmnLWivTHvCE4p/aDvcfE5X1rBpL3GpXkTAo23DoFOcl3c0w3oFpWNKNDNaiVKTEaSP7+51M06cXB709PybRu70HHxwM/Bn+idynossaHjm1Ac5m5h9M5yi0q3IGAF26glJs0zJf2MXOeqZAGLgPKrEgHOkKgYMrkvHeAA2BKz3jlaUQtwo3Tmy7SXdR1gLyMymgSzaK8iKbAQkTa5Wh0ao7YtW6Yl+x+h3Fpaw81FPo44CDHHRTwWcS07JQyQfu0j8SKyC4nFxEt9zKN+HJkLqbpx1VYRJSbGviyB8f8RJUu1mTFj6WX1jGQaHgYDnaZBIN6V/FGBJ4+KpgAYR/+Q26tG90OihptlCMTg9GZBXObpEs+USRJDShaJp6yL2ePUGVkd35EB24EZqrpIL/QIUt93aIE1LhGkOf65YNaseuLCAKMMDaSea6FBNc7hAOIiv5sO4g4GcN05J9IkVfMXjeoKx1xXlScFGuB+cmfZDYKZ7H9abQn1rm+gBoYmtlcwKLVs5hCmiP0DsTHSXvGXACDfBsPgwvUqoKI//ZP9a+7/Iv/VemQ+v/Ze/e3Rm5kYfhn9nnyP/Tw5p3GizGXJHvB49nDAJNwdm4HSLL7Aa+fxt1AZ4zb6zYwLOF//1QXSSW12hdgssmezdkzuHVXqVQqlepyYh5LVC/ES2NTLztrz5/jrxd/wFnQ768aqFgFrGpP3b+sKAV7KbXN5KQyCidGZNvJk36rFeJ6IP5XPMcoplw0rHmv6JXKuALNkfiL33maP44a1xh0uDr4r4IWAmrc02pyBKDO+s8/86+vfd/uocbILzr+Zo4qv7eXZW5pw7T5zQPbXF6/D6r6z1Ydf9+bnYO4pVBpGQ6/tE16ZvLdQJgW6FdXVZcvIh2BxdpaP6XnA3tF0YV6olDPFKKQ71ykFGXI0YZOtJ40S64riI2jVEiqVsa2H4Rc/h6jJIUr8AMPBUUbvsfXl70U7FE7kOO5mZONqHETB053PnM7bdsMOAAqerqhkVZbU/fMcXEpGyNYawLsFbekpyedvvKLYccD1qmYx6m6RZ82vEzjwl8ln+pbNA6SbxGBOescNelThJx+Z+dLbrU2XpJlVXSFQMUt2E617sKk/o1AwJbGA/w0a/SEg0RvmJkd56kHdwEPrZ0qTUYAqJzB7r1FL/ZE4us7zIl+/fwzv6uRAiq76wvwJDraSeWK5HHvNUchM9UlzNheKjvD8XL8X/EyiCxbAzxpuTxbTpMsh+QxgStN8EYjeIQSr8qlp2yiz0eowL9bIIJ3mXdoaglq6/u9NadyTvZBXOVZK8yFSLfaFw4ohCKtVoCviIKbqW+ryAKQ6hGPFDhPQy526gzJN0423RHBezUQJSfVYagk+Rl3jhTPpc7N9ERLScZjbTk7Rhta72hwdF1V2TGouKqScBgwXkJfIpxFGDnGqRXijnmAUIl0J8ypYOOgYS4fBFjAHApeGTwHsASfCCnuFH0hcHA7cEOlcVaQlJIFmpqtJeQ7Di5KG7IarxuloLCwanJd2TEnm7faBcY7ybijiuuAD/8VN0CCP4GdnnoZEvM/871iy8g+5CZD7lUhjUG8Cw66ORw7Oeg3K7B5/GeOZFCFE7x6dKRbHsa6XxMMaR7hm4rNF3BMBvSa8yh45hgS2HA7dOkRx80E7Kx3bVIhWQ9zPVJL2hyfS45/pvDSafoWzK29OAbcmoavjtueS5SHXyAJpLHhnip0x3EZTCTFISh2ho3AdTD8zqEZXV9Ub3x4GG72OnEMxvDzHZYBZawG8ibiOyzor3tZ+bK8LvlVhbiAL7NW9inrgftRTtYhFcQjYOXlQ3I0ZfjVw2cyeDHr3NjqHM/njbQCRMk8yqUqC6z1oeCJY6IznMqmCaL+RPcwT4r9NQ5vq9gv/e/MgfkzgK+6RNVBOTlL2r0Kt6+QgX05vkpGjegu+o+99f8Ce2u75B1Qven1i/JqlG3esXWy1XSDxydtjASiingz+NqOihM5qTFncBv9UlEYc11q3pVQGpR50EAoxvcurTwXG/dyeA6CyW2JVgZt/O3Ybmx9s21GDg4JjEpOvPwlaWGqjsDotBmrou/fHe6/f/Nqa3/vcPftwd7/t7sZxctUZjluqzLgemXxZbwMHS3HRn0HGoIRIqnByNh3NBS0iIAmTO5yfK+rGzMHlL+0tPVCB6cCqk6kNPhICFoFKP3uBk9uCAVcLOKB8BHTAXJTh+OkUlfjAl5Ad+zasxIjL0VpdTAIwjEpZEXra2v/t41QdPLbDvQb1erh5ahrzWCCwlXWtUSUWAII2ceA2Ni0xMsDMvyAVbWPBLxSeu60lshyop7XQ1o3wcG5lxBm6DKIHdjVsrElCmHLvxOiB4O7I3bbOJra8jA3HkfRIb/2PsV2ruxHdcC+qDSGDNVRWQrjRnTc1Bvg8L9MegP2MmmdZ1aq7inyR7NFVihXn/oe/eWS0ffbU2CNG83aFlDhRqNPdwj+Jzp3vU3VczPfdGtBD1rSXK2kavBpjLV4B1OcV8ZWuLRzVDIA5aaF5yZHjszOsM/7pnyXoqXINBPN7h6rvTS1M3BDpVbGxfl5P/usxKrJBl83xQryXHHzY5YNPxCESaWxSs5o0lqXAvr4LdI3thjgNN4DaHnAoOAL+sF41PG8/Nh6ahaQD/+oe6fag71safX4bvW8GR8f38Xh7HvKvg9nb1LuZiwO4/jOJ5PHMdnhHcfWLWKRNlSnUKmIOkA6VLuK9kQSM4qmKtXWDxdFWw1jydJMtZ7L4NuQv3Ghl+OTRvM4QIiP48Y9Rxy/e7rDwqyIQMQwSeTR3aMO3dydMhXhviefDb+VU+w/x9h/jjHxIgdSZVBFZ2j0rkY/VNQtzQMnjc5urMCcgzQSWl1eZuO9WVo34ZWh5suOfpBt4PDWSNDMIPSGBAp3P+jg35PKPeOCv7oTnb0fPP15HvAjQhqTnmMs6aUKA0OZ8tsy55QNGyrMQIAb0EyA4Qr0lXI6B4BPMWXYDUvZlKczOWOhYb3J0bzQgY9QTipF47+2wxuGXj3A9Und9A7ipqHQGg7Uijwam/IwVF2r/wMKHTywhYMBNT9UU1ET4XMcKcQBMVKxZbVQB0CnTzG+ib0TPIxf8nBwfUKIqsKPAB4gS/6p32iNC3Ys1SBXE+BlYnlq7/bMUR3SvJbjynFGJGb2MU5s6z+H8lyHMuP4pLP5zj2ca87B2oNwnnOKLJzSI/tgoGgLmeNLofS1VAq57lyz6gM/zj765LUG0Xxuhjw40CGPelNYxHgXp9OWFKrAyzjmohcklXWNhZmjwBx4N1S0DCs01wOjCbiu6NAz5vPn2IJx+N647hxds1Ke21EoKIQ4JCOERHR5VWKMB7T9jhTOakBEZF6CEuBsHI0LdNnX0m8ud7ONGeo8f34tSEmHQGcTJkL8Gpwv8OTi2D73TCh/fWLe02qYl+tfFeNiJdMrTyI7DfIE/ZvktkTxgZGCD5gTYWMMh++wLBCyGjVSWDTUCedNksuGpBOgxTNVRGEKyapoMTOtqi3kiTjuagYxs6Bj6phmbUkMUZscqbanX31xCFOu/frpfYbWoNjnlThPGrB/YTcgmOfSrivJc3aWcU2YekWQoIE5lzCBK3nnv+Bi0S8bcAMn/D5r9ys9CIPrr7oCMFri02A4XsYyMW/OEOqh9b+Vm3KZJ/0g3035NR5VPEuPmQKQak81gWyo2Q5yacCXnc4pITl9mFjkdHZZyOmDBSBBcNVJLKswnEJ0DIRna3FGojgE8wyA1jABvZR3oBMKacJLAoJX41Qr+zRMBqngLKH7Wv74V8NjgAPtR7IVrJsqXHuH2IXgC8iNqji6TEYfN8mFHlhzur68vVeP0JP5PFIMnO50+cXTvnZU64cv8RG4LTwDb6IRqVDXPQ3fXHZEugEiOvaAsat8GLf6Ez8fnJbDdtz2zhL/Sk++NtVJ4LkaFG4TrShj2oVcnwCnxacVBUQw7I1O0TPZikpqRyuXxT9X6jPL+ryb7PRjPq7Nr4JrOXB0Ag7UHJqYBdPVx6U5Ia/zMj/N+/n41iyOEWa8vKu8ixhPp3CUPgFM3anZFf9fDfYX5HHzRbx8c7kcv3zpuZf9ZZiVdgS7biUBfzqbEcR0bP8K+ZdfxWlz3+xu3vV3srNSG/qbI8ORjZvjwVWTap6iNuHmHSlkHZ3cNy8VSvSdlOQMY0SYBPKHtFMMMuPGoKKR7CoBgvUqV2EWqlcifpP0ohgtxS2JR98Vo39GTsobRdLhlVP7OIhGmVq2/DpzcYV8L7V1uNCH9LJ9BR6eQz09plXS2lTtVjD7Ma1uwcp4jaKG5YNbhR1MV7DAYfoosJL1rYGDhW9yWhb9qzGsZDHcjNaGivxhkFj8+QR9aihN7hLh9vg+aYJT5t+MZl3cOSYFdD/vzTj47aLfT4ZlNstAopcRGLkH+oo8PPkMnXvYnQ8uslE+K37/kI3GEpvR1X07Yv9vzFzO3FJwcG7bK72s329Hiuccgw6vHjXR1Ed1xWQp1N1jmjX7caZ5qN3yqN400s7U2Wmh7niXjwPaPETnCTqaRGloOo/v6iEEZsJq/LIEJjyQWQjMPCfQPH2rXuuxPMjBsNGvdh9nm5vBhRzFFW2SQy/9bC/e3YzDCMcc7M4ko0Nz5C61VT4yitRsh/4EB77kXtA9p3VwSR7B+0J8mpQKJFkKgboUHDwu0so5S0e/QpV09S0Q150kONGdBDxvnRQb5ezuohjl/wSLgb5TQq+UTDTGBM6bStANn3yQ6Rl7BBdcQpTrWy40k0F+icYPm3fpFRmobH61ttYc32TZYDPOFOxW8sGK6i4GQz0ZMIGcal2Tq80nAJa6N3xSuzR9wuZA1vZkzTHszK2E9rO11nDQCrx0273ieiocJdZJovNxIAtXHCtuF+pel41DXhDvJSIQXmBwO+227c7iDoXCczy2wZ0OnamNxsKpmotbsoL38Mdbizw7O/MJzPcDO4P3ylSSdQQlnJ00CXNFda5Lg6pwD82EPeGe3RlxgIJYzSPVmiYiboOyBTKU1OXYCNuSSbh7lOy6Bl35fMn0kt0Wec50WTbxAh04sixIUMPluLW7A0E9WBwx64UjukxG5/mAP9xgQtEvLQdajFZJ1IEAIP8KeiJqOfVM4kYgvxPrm2vcltlJCjaonRgCTcoMLSm1zibwRQRK0MKZPavN50GWsAsiixJL6eTLzh1QSr0BQAh9d5GU/A3W0yRWKG8HPXAzigueoc+RTmwlRC1nOUkjc3eqI650V3jiMpiws3ew/eb9wff7uwdqWmW5BMWa8T9XUKkEbwLqv3Y0M5KI26LD2XkIYwbk+YGegJMVgfXiSy/UED6HVI4pT14c2g8WCi0pitv5+7utt3vWF7ULlY0wVPwoW7PvSDWK3/6m5JnaoGJT4A1/d2sgvD4bhOnZQYs/cW+mZm+GODPrHlZgi+F76M2zPr/huIlLcX+TRyi9/06L9BaMmhVTRgcTjcfNx+gZ2EaAaqS7nuty8RtN0SE0EjaKTsKy6wGied77yBb4auDb5rPJ8WvJe5GuPnlJ4oktF2VW27yCrap61k9AQH81HBajcXlYXPUuGndy4IqLVmmXalcLyxZ+/Qbh82FHlT7Pxlg1K5f0W+kOOEDRwWOhHF0T4JfWMPcTXq43sBobe9ODKKQ0VBfgzFvBfIeIBXRzL/xEpuh8cBNHLLkX7RJWkHLiMogcp65Dy9T4sxTo2LhLtU87mwhebEjEnaZWdWpJ3YxSfi5kXY2M+IAqFWGN5CytK6BWOjZIkOFSfMxur4bMhXSBt/srJEzAnSx9YD2sdtq/Gslar9T39M5mrcUlaOGwQ6i/mYk1XHPX7x695ilel52QYQs24BA+KZB7PsiwbkdYnE+onpdvi9NcEQMe9Y3azfD6r8oqFk4PHDgPdMlL3jIgkKMeN+ozepXVbU+NEi9U7Gxiejty/+XvD9TtvkQtyJX1Bw9N4ZzeukzDmjEdBWcKXqXiN7LZx1dpSZ1GT9HMv6gNevQRjLrvISkHT8XWv8+h84m3CaIC+LOtE9S/2rHPZtxolRf5GcgqjCsreMDURAXv+YrqQcs24Qj+PWlTh+5dnvPBjTA+m6HqL5Rr4L/i6oFvbE2XiMTLmAjVWVuDvVdhe/rdkLV9qfByHK1EAB0KGQmP07pz4MnAR8NZoe5gz/D1UU+SYG6myQKLio8QTj+ivyet7ti90N2lGdx46wq3QKw1pQiLXKeUwmerKWXoFQreJwN+lRU+jjI4Er8dFVfDpVqev2GZfq3slJFSKbIjd0apCPkIoVUE5x6UQO0i6kqyMWpUQ3OHNqHPgf5hk3B5Cbk/qvMBs36yaZ1ene0CKzGnYzjjeAnvRNXKX9VW/kr3rVk9X0jg6m2/5tk+f07jrPEuYysbj0fGzC3obYbefKsOZ6TLUdAo8iUIpNZFbTunDqwB3RAbYmozTqpS2ptF1fffsHk9ae0nLt70tZ+4fNPW/uvayl/LtWfn4NJl4LBzNDxpGyV91z3gULoH9N032aUZohdZ+MdocWnMsctC8qfwojS8MmYphmgZwPgRWvY6X+O6X0N1Tp5g29YAf4aFF2Pp9OuReIKdCJ9Y0ak9C9TJ0XdODLAEaXK7/skbnvhEn1VTJz4D2IwK6mULRqCdwF9i8B6ItShdenIqugQ8snA5qYZKPVsiiN31FGUZQXg+8CRveoI8dZSxlJAiuLf93I7CHF1TAKuX66WBu23/dqmXN1WaqQija+iTrZcriK81vLbtBIJDd6goyHInbwpZzmyM+FLdv/l602fjRYFkNS2y2zpdxrrsR7xzcnlKPScR9lFbOCtzMbrbKy6Hius/ZLZnSTdBPBMItR25beUQ14rEk7R770x0Zt264iSOTAcn9807ktDbYd5zAFW9DXYK4X+yB8HYpNTMtrUcGylJfAIbjbU5tw8OJMShKMQjVQxPzB4qOQn5m7hBFTyFAqhOO8ISZvh+Zm3qcMvS0whuBvOc9M3aGl7TnkFyCx+WGvZnx3lj0v203Ji2K4A9ENL2559DuVBzQjYphE0qgepgVMASYwYLPBk27kytjq2vTYpxeM14BUuKVBiWSiYO1Mk51a/3K7gOMivhN+oVXg7hfFsMSrc507gCA+Ch+SN+9Lio2kyjqvTAY+L2g6Pyx2sGpacYHhU3OdOwqt3zuCrjnWtYLPsp+mRIxE6Oe1XaAiEU1d1h9x2Ig+CVBJ8h7nTFnvts1Nbp/NeauYPw9uj/LZ4sL4K9uxjeqlErltnGAfOHUTHsGIUEik0wzrOSPLdCpLm2Kbfz/u3koqoAlU6wWaxk4WSKgUIURkoiT4w1RKDs52m2AnG11zisIUZ2xkefZgx0Sv2hjxX8OnEaAjYSW6CF5MqBavRl41RUW2Ac4SZWnDZmbEJjhjOHQEsnDL8fwIkrQnE5Bv3iMf1Uv7BtTWyX48tSpyF5BQ1kqeEcL/dUWkiyz1j3/s3OxKcM10QSDgscxdgOzWCEWd+NnSWeE/yL2tCqBsyJrLgYebUi9GwDFUrZNIrpgwBgK1axiX/XT6oDcdWx+fQ9uhtuanRvXm9OnZ4606dXwCFs8FC+Omncn1jSFcL9m2RYi/p12A51HGSfAb+hjoves9UJ4rPA4Iudq1FnycHV1Y3GVOSGav/B6QfjdGTJ6kqa4cubhWnAAOGzY7wYaBDjwSNvkmrHbj5mFMOkl49vfyVEj0ejkj/L0pvm12YlUrpKrJYgXo9xVZy0tdgAXUBnnkFV+680N/9Mg4YweA1Bzzb+gyqpdtD9BBgpkkJMLoWUqF0pZHUY0FZG3v07RiJAECaM7E9h2KhMMaGQQjVVDttpFWdn6lb/IyAXp+Coj6hHGODwpGM/rtvUtFtqXZZah1JSjBCWGuAzI2kj5TUjrLVslbLnDETPIG5gGcSWGoVWU1uSYgf+BaJu/gltQdAFuZEb7groSDRWCDFd/BAUPDRJladiYCxNjvlZsQXPgVokUFMA9N90uLK15h8bcO9h/Tq2lQqt/2RNlbhREXc/VNZi36Q1QuLgduEu5E/GZtWIF2yB6fIF0Y8RMDhpjoShKmAwW76iQxHc8lNK0ZavFPLVlohchUjSvKKdFGU7dsIThDsOpXswbouFbvIrkPH0GVJQCGPySXsWlGVaXqlNQe3SWZC2Uso+YeDgEd6ZjruUjVlp3yjLzLYYqpfuuB7ydrzTRhocI5onVgLFUC1DLLRdI/2V9pMPkUmHmqw+/8wmiqfqIIqnX1V5vBcpCJfYvoWLJ2pCHXh9hsdn7fnCf26GUm172kCcc65i4nagqT3ALjPvn8lo3JHY3b5RGziDAs86jiqWrtcyYSlYQHtHbSD1b5+OsuQjHCRZ9Ui790KpC/tj5kHFxuiaACQYsX3sqkHqItAD+RYbW01Ua6GMbqi0kpKNaEKmtfgyn6ebedocbsIcUHKKk+HZNIwKkejPerdwcgBn2xlSQE26Owj7qu04apCiyo1bgO2051Aj/TWpNWqNqutJrt1gvtK1GwKMnDBm11onSWHFhwI0uTEXd4n+ID9nOhCdj0XixcizYu/g5vBzcK3hn0DO+KLjjVYRJFz6TAwKKJRUQRO7uVk2ixsRoFUcDoOT58+fqcxKUOLelKPhIG7IAzYUALv0FTqNgq8IVKz6DgyqU3I0uOlq0uNpetJAj7iU3Q9yD1Cer3JuNNKdfD/2scjSgbtJ11hdOzBPqp6OU82QGpe9+gDTkbKESulYaKqOPd1rjgGCLUmbk5qTzS9koz9RH7z6xHmjyl0Ij8qAs547/QmPoh1+v7xw3MgtSQYFaPFDjkM6SPDi4Tmacc1SyJYobpbWpoYpE9gDba6hyY/6Q1rva2wUtLl2L0yiUFtMu8Ojr17F+skaCflI7mbfW1zXpiwtGhGoMT0zQbIaMpnF68UAzMS+VwtXLsls4QWxGYMkJtQ6TDTUPKRPah/yZ+oAQRjqATMmdYEFZuqDlifUCeVM6oVKVLtBwgK7jzah7tZKXTMdUwweBhV5RA4Fa2A5VvJbEUp+1qsVsahqN1OUV/zihyF7/Ks7g3jcVTy7ETp8tlum7dh5KXf7+yP5T31mClfCaQmy2SHnR/a7jtgLSitv2XzPR8oQurboawoMKE2rB9T0q4u4qkwat2L77QjpmlAhznfVkVtsxbuHZ+dKj2XfmbCmSLVVQSTbk3RCsdKRVsI8oasivvFp/FQl6MmaGqVMQkrIav1U5KySJrRKzSWKNJVETfNAGPJps3qeN8k9JuDQtFoHux+232wdHCikw5rEymhb2FbAFLbRJuC59zxVAQKaQ0c6FNv/orsmhcmW+Gb0ciYwMYIRgQMkjmUKE0s3EQ8CN2mkJS0iDVffS7MiGYfy9fOevtWB6lhvnAzO+3U8Calr9hTTIIuKKK+Z4X5CRRlOJotoluLxLeOxD/w5+j3CpkIyMdAUmIHu2lkC1cSHXNICoMCnIp1IPSUHTgoMFQza6nFDDAUmQEOZqKKU9pu20mcUHP5HHPgbFwdy4Omep27u3Nek/rPCPkNIXE38tOdSHLcsr4BXBkhFz6VGS1hP/VqWbKwCABjuysJMqKg8fSx7DF2gFlIyqgM/lx1eNlCeyBxVwN/LLmvKVdCZcjZ+izlMhC0RPDK79oQtkAWBpNbeVCksZRwShc7PaAxneb9P2l0XarOY8A6QDMYQHmX3+9LE3U8n+u6nMonHZPMQK0fBp/3d41uiPTjvDIyb+GfYFnoyadifnZhcEFnoUbICH+v73ekMocn3888yRWsthKdoyYo/ZHeWul/WInxQtxKGfr9hqDxwZt8AGQzODHMsmrNLGHYlPk5G40N4zZfo6mhIiiKTFAZIB0X4Tn3+3PhTRDynINHPIIb1NYKzym5QBS378kZjVCNnHNDnHg+rRE4djVTOeeBwiEObOBqtCjl1OE8+GmZaPemZYRzDPBLfotXdm9ppOKdY3Y3T2ouzS1RXEqMSQ66VYmEp+sge6F56NapchY1sybx5060QNaHrC2M+sWT8ur4D2jxSXGAKO76XbLKMfuJWsM/vMOJQhtcD63DToCvpJqJKWe68fztdnVTriKp8UB+YXAFFslBDHL+2o5OORWuvhG76BFBOLnEFH1OrmfEdbu/aliZOC/EiNdprBJqaUU9VsGq7yy4EJv8ySE8f869xAThSpD7kHnZWS55uJV5eEgNGXZ7VDeYb/WNW8HxePZqoqag9BfSzPZYJ4rjh9kpp9OZp4GgeEctNvC7vpZv4L9nPk0sNgMum3R9gn7Gp/l/cJDftz2YOTmcHSd96obo3vaGEXzxO6zeAjrH7S0+DelIVTxUKSU57gVOB3lTEG4MczvPnJIf19BFkETuS7BVc/hFe59n4Fbxz54Pz7T4Y5+/Tsx0S4PdnZ501kgzQz6l+Ru5826CgxxHt6IiL83BwznXjwbFwSbRw7ssEtFTG0/TUv1vZKivQhr7vnFYuSKKplX5NSTq9uSR+BAox/8Ol6CtQzKwrejy08u9wjJLKi6kXiqRDMpqaEkY8X5OP21qoPaGIDu23s09Z72rMHl/i5Bv2sWCleIBZk6R4lO9J8Uzl+kc5kV+t7FB+xqKJun2gjuc+3AU18u6BACyvr2k5I22n2oqg9+K+5nnesWs06/zncMUwBh68n2nlhjuputACvyFLDfEED45DLJB0OfYigqIUTTofYEBqqZdig9asxZtPaMRpNO24Pako3I2JN9GsoWz2agSDD5iIXqS9w/ch61DMqDcM7boLVo8GqDNA6D7r+uKlsDKH0n9Tk3Fenlwu/OWS3z8eeo2nEhbXtz9dqvbvI/ia8iTnEc/QZgkT0/noYajdhtTequEE+Kl0Zn5E8Ax1y/8fRuKXZCQwHkRlg3rhLDINF9zUkxU8yF2pefRpghyjElGIiK2DB6xZOHH1eVXMtRwZ9ukc6GwoMnaGE/ZvN2lwAA9AgLFYf2y3GIpkwBPcMkUPLzM6HVdO59B1RWfRcokLqe5pTba/5jZrdLn0j11+je3huH8MdDelCl8WbWyxiSKlxp2myJ2eQHcca1sQ347pf4XLMVGWRXE39ORmIAi0LYHt6JnrZojs6oIBo3PXOt+INa1gXcvVK1onxuL9zt5kSQ4p7KOdClp0LcqTpLCuglaNMe+ebvqKlgfCJrBwebkkgLSsP2740twI9V/bc0PAdskAV3SmYcvswKTizlpoLbUK7KYMBZFANmiwwPYvyziIcn8vOqXVpfeX2RYX8GWOtWVkerrFVf2btQUmR/++0HKNRrD/KRDVvJDdgrY73n9ycWuLOzs2sLwIvSljAULhNKdphe1fFBG0BJ3qu8+lFUkv9WgfEp3HdXeVwkTtrH+LTjBCzitq6EjQzYUFArU4FxDqKmt8mQAkF4i9UBfm4WvSACs0u4Iwcwy1rjH3AKjgX+XAEJ3T4TQ3ReQHT1YffBgl4zaYeohzK0yODLQFjvBT1pQ1mEIHZwJ97cA8UtoLdTMTpniHcuDcmGO44cbcE94/hHx+wOnawZOZiWsATR5AE0OIUkvaPBjpk+FXxVuJMxU1K9pTqDFO4hHEWCt2iSPGLzwshsT32yJGR0om8XNtgOez6ORwC8F9S7T96aEZ4FBA6d7utDsfeQIkPaqrvlJBpgAGWrStPThqdfaCvPRUjtlV8JvWhuaixU6pZer/FWszw4E5zyrNdmSKVZvhzPwVrx8fiE9I7eovdqHVqz9q51m0ei7ArlP9aTvb8jA6TruyTFicagvmFhNeHK3q8i9bnRlYjHmWaRYmQ6zYDFzGr2LpZrgcAUxqz2OojxYhUKB936x5w5r+nDGPyTwLvuXLoO5o2guhLTdNuA2Sz/ATzuTJuI/y4qG+5r3VfcqvPnP57/KPBBYY000CEuXPJfkHjQSet7v6TolKUyTP500zQSeFTTw9ZQtjjIEZNrYALFvAH4pcM2rKdzSjU7Wz2YD7WbFUrttXASrhl7bh+DSXOTzKvueLuG5v8Ltj8HlylMLrpP09yVOt+8QoXyLvm9+sucuazTyATAwgm/giau24/Y4VOHTkFQuOrNnLESRQ16y882JjHOjwA22hEJrCn2yrnyb4SSbNl5m8vx4Vlx+KfDBeglosxf5bU3z8nUyj4RlBWuYKdwgwClSIqfOMoLBmazwe5afwOhcn36yQ54e40VAj52jc/DYRLte8ywLhvBvmdgwz6zjwoS0qB5zVOV7w4AqTdZsqW9r+1mlQFaraFps11DFu/IUM1mra8CfhhffM9ulBhscuHEJARHPywa5KpEAxAMKU4jUDlvy0WdnlQCDGA5VEcBMx7OUmakt1UKI1yCV7v2qxE4qCwTipWttWS9GBl2tQg02zn3/OWpwKiKcLdNa/IsVbVsi4Z6CBOkYAZgYRAYWutZn+sw4BLAOEnVwkRaSuAz2VkUfXl/5apI2g241ZwYyr9xRQ5lM3cJi4teRkqu3B0H0EGmmju1os7MyNhXpZFYH0/bFP8IIC9BrfpQXh1vlD12tJrdMS32eJeEsdT3rhRm8x4oHV0pfaKlntU/fQ/jb6m/XP3UPxUSle9+adzfDgHdSJrfEko6MaOgemVA8W4J7E1GQTuD23bR0EQ1FaDKnlbn58gsdNnOzCCUXO4VDpFELIWFZnxHpqJucu31Q7snmt/r0GBzijFqm4ov+bL8+TJUwATZIVNT4IsZ2CWX4McwXzACqvs4TLIrNPVfO+v6K54uvc6V9ELRrit6QcN4O4CTPBeYA3Hxo4+4764nfMd4zg4KmeOFUAErB+U0CAI6oGBHjoo9ZcOkrOFQLs5GcvIJYTmNuqs4A8nlDUulbZU+Ppv00+GfdSluQZzDFHsUlp5Z2O6l5lpB2NRnRnOUAUJgYD0dk4o7LXGJoipGnGw7ILEJ5UJSJJ9ZSSO5ot8e4fXusECtoWXgO8szRbFfaRFTg2HAJdOQd9J1XmDJ7BRZXTWMhB1ag1xP058gk9DMb05Dmnskf8f1xTBV1TKQDN4pjKvc5McEsVYjUMtnqchto3IVZDLXAlOeSMCrf3HJQC9/lkYkGbVhE32jJwgUXW0Ls21OxY2hzA9Nuzp6YoGHD2b5LbMm5geb64iN0YJAiDDER03pDktcU2ptqBj0bN5UXefQtwaKe2L33lZdqz47kTiVJ0A3UUpbuvnjPpab/uYvvMNlb1rPKbP4nUxCejWAVUoyCg/i2AAS2p3TMnQICj+a7op/+WIIHJXajJzQ6O8iYfZjUCIsGTWOiYROEGc6QvTgCpiXD6VUAJ5+yBSABIQQVQQAClqtL8S4rIBP3Kyqv+WHjYyoGzmVV69oyqq98duU4ATNJjzyno7PPnuVXSvbYmBT/AmUie6ngg6pIDV5xrgB5K04ab0mvHPapj18rKSNCGI+aR0R/FfLGjU/MQAslt0pvGUYi10ZrS186k8PymWV2Dz5Wff1Z/MKLutbY15MavoV3rnDDQ8tSw9zo4sBsDWx9SWkovP2uiC8PgmaqppbsyIV9nqSh7VlRA96p/zlSRAya3upMjJyOM+YJjKY7tEMjrrPV5L7K1FnyEaqol8lwH2XXq9VEDXpqJY1Qy128ZJd3dt71SR+TnJODj7I36KDtHJxzkzcbJze1vcCjEftDUuHThATuLsf7R9Af5TXOjPKph9KErGezxrt/RyUeKIErHkP2mSwu7rf5OdqYdj8KApC8AmAQ5L2ppxwZXpdGX7LfI5QiLDmkAGJMFM+nxtJIZ6iPyE7ZIZ4vcOM9S4RWrZ/Hbd6jOthp63CZIk3cj48wJnRzFy317ywIXTsbrUV9frhZfUlyZvr6KGnDQQvV/LX7s1EdreFVeGGdxWg8quCzPYM1sHQc4FSiSaziC9+LL5//nD99s/PHPcH/Ts/6o8PLji2BH7Y+AnYjgbv7RR4TrgPwQrsQzDQfDMNf52bNDY2dSIhgadHO0Btv2RczDEW7OwCfmehMTaNRqKVoq+RJsiGYblcGdkO9ACDozQBRrL76sDk6sLL4XN8Riell1ix7bVvGoDG7UByz6W2xl4qIHOnIWXeb/Z9E/76Kj6slj1xwp8cQlr3bjrLjI/s+Cf6YFr0kneg8CKRBzEVeO5a4GpJ4b3/0+P8ODz5Raju/jhtPc3e+zQZqf3RNmEWPDI4VCeBypljXeubqAXNx0WAfPH7LReBHGLNuPq3DzNUW5+AjETiVIjmbt8Lti9M85OtTacw/ub5YJzgytaYPXy9ThfL1GbW99fv45OL2OmeU0F7jalV17hopTvOCCp+q85/jAlUCZfUzGLe+jhxR0zItOCSzrH/TQi12iOED90253u9x7otjswTi/zLrMgp8mI3YHbaxWv/idarJ7o/ZjcbPDrqI7d+N8rC7Jd+Oi6Jebd9qF9OZdDLflLN684ygs/N0k7+/8kV8m5+oL/5SrX35JjbdOr9QmGrSwUGs4OG8l32CRmGWmahxlNlLrcgDiWTW918XoMhlHnSh++3Y1TVdv1X9x2xiYqkvR3fd/+7C/u7/7bkf9s7P1Zm/r4L670z9/f/pT1FH1tM+tSQXVLTBTBLq4VbuLvFdMbDUaZDfqfGjt5Em/OAf1smKA5q/9YTZS1CtQN27effG7heSn5NP3+28UoZZltv57628qVZVRRbrZ5WmWpln6tkizTRKlYHo/v84+KCKQZzd7g1dXeT/NRiK/p0fx7fd7O6qDP539uZf9+Q9/XPnj18naytdnX22snH799cbK13/s/THNkrVv1r5Zj6li/+pysDc4Kzaju/hgd2t/+7vX7/ffxuozp1TGnENw6x/F4FnjtPgU3zcjev3+IenrgaDnCVUmHwyvxs1+cpr142aUl9tJv2fKXPSHqgimb41G8ADEGfDowp1sx1F034y3dn7Yere9u0PDqh3SVnqdDHpZ+iYvxwdZMupdTBwdV37UyHa+f/v27903eweHtaPqq9F85nHcwwoqknGeD5I+CprKzegIUG3RruTiZrS4CAUXXXDadDsZTPvid/cnkM57Xrf7BM1iq2pbf8h7H7PRWzX/CyBxMOj4v5PBVTK6jZvx6+x0xD/f4mIqRBiO8j5+Q+p/X4F6kPrTh6+tq3O4Zzfjg2w4zjA4QTN+3xsX9Otdca0Td7Ie/TxxB7KT3JphHFxBFGo1NPXv4RV082OWwu+LKxjaKIeOkrHfxGGRJrevkLypxcGv2C2BWnGmhJf5Oh+VYzWM92c/ZtnHzWgdskdZmY2BAr7NyhLoqcL0URbdFlcRiCvxx00yGEfjIsKy6tqfRbA//xI79Q+RlEfxj8looLhQN3OvhwMqr8/hV+f/JP3hRbKSq98r/1DrDjR+Ox/1VAOQRuPOR+Nbd2B/V2O5VMsQncFMojK5xvGNot5FMlBnQFSon7BJ+ybl9DbCpxA1Ihz4Pk6Bjwi3Hz2Bd4U6sDM3b8L4YVtWxo5vCftZrxilRMB14zv0ykBZNWVnWAmh8Asa8aqqWo0F1VpZ2hNt0znQoC9k7NH7hWobpkDHwVme9VM6Wcruzt7Wm/ffbig0RewjAbU5f7b6eVJq1FJXjst8vHf2XVKS9hWcqLujUTEqDTUBLChudCJsb/UfcOQ8y1fFJ3HCqP8uTbqGGVaOORungHStX6izaZSlJnDrH/JBO9IexjfURwxVkB7gDJ1BMHkkX2U4zAXrGySKMyh7mH0aU7941mzL/DQfi3HBp2oYm1kwPA+k9IKV7s3IFvJ61Mo+qdrkddPHsIXzfnEK1P7OdLmXeme+5gta3755/2rrDYaKO2A4XrhBbcSEv1Pw6yP7K0ruVeYPxTHVlsc5qX9oXsXg/QhwgoaP21EttH09gpGjZh+xO5M4p/Ns/CEZZP33yGYh/6R4M6z4/Dk2wErn8Mksm0wFFk33rJg0kYVt6ZXoFoMfkYXcx7zgaJPRaMpgu3Ak852mpJGqStjAArSgeEXo0whTVXNrbfXnBbStJQ0RyLsZn4pZ4MMdQldH+QnNSvVcEIiKEISKWgAVAj6wnupQ1VDqyshSrzJUtHHAFK3+vrwt1RH53i/4+9VIDSsCzgYahTHClaBruMqpiKBqmDvH1nif7xwH2B0KdGyPE0qSjFexuUDacAyXybDVPRt04ovxeFhurq6qhLJ1XhTn/SwZ4pPWJaatqq/Vn8q/fMxuO8/7+ekoUSheds6z4jIbj26b2F/5HN5UT5Pexw63nathwYViItqMk1PC71IB4ehkSvF+UXy8GkJRhVf3UwqneKz8mIx7F1l5FO++23r1ZrcruMsTamdh4QbKaNIP6JrDo3RpUgI7GUNTGuymrqA5GBQmlVeXl4rRojRI1BnZABpX6UtI/xsmXfWoUr/sZePh0pfqhv9Daz+OlpExbanD5B0Gh1IJcUvModH8MnwtUpWX3aoN7Mpe76BD3nm4FeyrV/Tzz37uWkMP8Kiuw3h5xiGf6CnPRgT1Jo9TBdJbJDRxox0xLYTNZ+c0ZC26HdYriJ45E4PClTJLz2hJ4OVa3fMjaYuhtm1070BtIjYTh6WQTQz1pDoG1eD8zdQPGehKhCKuO0liO0BgX4h1xOdEXEZFLI3qhVoAbq1NVG8B0XXiANkjHj6TL8XqAIENhF/qNs48BrWpmAy+i6kkMZ1mdNZPzjd5N9yjJOZ+Cq0InK1q8B4hVis2hS4oOB6Ash9czJfw5tXtpuOzyzFcpSzrSBetblfnrF1srl1GW291Ou35b6/yFHJnEQpQTeOXE1X4D4vtAs9Me7frdsvzkb7WNdqrq2WZfzWNjvaSspegQQCfwbOQ02qtbXbzqGsDKS/PFVfaUteISwA3c9BOHuEr2uJCiXXQ15jSM1+AifNAlncnByNXCOGrmuiPR1ObYLza1nwnHgvTcIi3libVU1maH/Ls5oC1co/iwOHR7Q4/5uW5QgMpUipvcrUjWPTDt/OuQryrIYLvNGNhijhRAHmx3Dl48B7SqejlL2jaBKJNHd5OfJzAwdvGnYQ9dtGAcm/QG6HG0T6ZVX6PFjOlaBtmupdiD0A6uqkWx5Fwka1fL4rSXon2UqDrDKvYkPQ+1eMWJPnmPnTBnsL+8ffIBsqULZkyyG7UvS5RSX1ckG6uZ5L0eS6Qr4urzvaLG9zbqoqeXIQ900nBx3sERI9TFSpyE5TDRxKe4yF2NfWYVbwtQK2jFKiqQodRDgf/X7PbE9uQOECoWF7uwC3bO3gbSBVh8OQXXVVEus6pTtX2pJ5bKbWONank6mpdWcUz6rO6E+W69O8VGUiBuUyzT5G6cEMs7atB/o+rLMJXwCiJSEstAtP46CzvQ+JFUkanmSIgYJ81T7+QfxTLTgmp6qcYqk66XlQRuXfeMCnx0ZgmlllgzBKgmMHObiHQABOgM/0BQDVrYPBs+HH3k8KpciltDj/qa8wMGBTxraUyRUAOaEkyJDyHBUcfkBMDffEOCuAszxCBy6UqINb3KcZcrBJiZlRrAB7Y96rIUSxWRi+iaAWLhptZMJA1bSEi61agmWemjKmlcAxNpyNFAiN1C4nQWzHcLJPbUqHnoJehGAweF2C3I5ZCglMuH0T5uMUtIkEihXdJgsBZq/pcwkk0eFAG8ANoQ9TSi8sjH9joq108RLpdNXO1yMBd25ILooWjwYk+iinvnn/ovzgqMoFUmEzjatr1NEMkcru8zN+aX4wMAGFR1C5HcJtEbJ2CO6vWy6WjyDZt21bQR9JtW8c/gifFQrTwqg+z7jon6Wej8VJcLRDrPmYcij8SusDLcagSF1nvI0gTywzehBEPuN+kP8qS9Ja0vDI8ITTyPjO7u28OjWbNvmkYxJxp0KEh845WtJNEnlytHa2uXpWKzF6C6EnR3EFK0tCLrD88u+q3orKIPmbZUGGyPkMTZNuISQCGhm+3aH2kidvDzvvV1aHabwAsckgAQD3PrwlwmEjiczyoI9IQQ8CiDjaIs7OS7lYEU7UrdzLFy/WB6dI7IujvQCOuZjOQVXNvJTDvZpya9kh1hbkGeM3as7yEurQACpTEGClGjnZLExP3BgrgNnWLUkmirRLXmhFxNpsI6nstWlvDH84+e9xUfuHxr6/xDCw3CYR362pcvM4Ub/tWLabkeEGKrtqBkb0hxxvyhbVI0g9UIEsr2fCiQYma03bZXs2bAdfeL3pJ/2BcjJLzDPFZV/HOqjIg0sA0VPyOSsua+XVIncgcSePR7R2U/u+D9+9YIwCUAXpw413KUMTpnMVm/9KQ+6qq9h4Dw4U3ZP9chULecYj1eIBlv7JxJ21oLE9XA1OMPt1cN5Py/IHC4PuRYY4VaDQkCEr52e1S2YzjZnw8BkUjRfHq1geaGo80q4KPqwNadMJaseTo9hwcuXD8HlTViGzYjQq6NKKaDPSB8QW+yKkh1SMZ7b3mZZFmekPa+c6MclC6inSUSmgXQBXAL43cEsfGo4lY1n4shgWGosoDBLAonTtmF/AxFO5nVtyYBTk0Z2s5eDkqxX6ZIfH4/R77DVtVIj+isrMTRK7MNJClAYKhaTFCmYT47oKYM7QxTe3xRaK3WHsC8SfoGsEU2dXInprQEA+NOQbzDJqMncNmwXPWZJKQcu/jHlBgcncBjNFeLJBaI1cMhLzc+in5pKXgdDwDK6POHMyVFB74oYPiatTLWIkCLlV5L2YFm3L8Gt4iQaT+xe9g0gN6UMMnbfgd+1oRKlMKO7S0Z0cUeV2M3uiWl45tW8eKbYy1pkU3BUdQ+3itPMz7Wm7gCGtQFPMhGY2/S5xJXWZpnpiBn9g0mGMpJDu24L5iIN8P+remfH4+UJTnrW1pb/Djjz8eXJ2+Ljw9o+7wQnFa3yZDft7kRvuZeUEejoqxQooMe3Hej8eKXGbw9E06XrFMhSYALNoTmYXscfxiJ7vOe9le+rJ7rFA607baZsUQqZdVScwH1SzFAjdsCoWt4v7ggfvDqDhXAC6d4YElEPAA5ikcLIh1Ik7x/eCDopAHt4PehfswTsj+fjS8SAYlPndBIbcMz5MBGne3trBN83heNywBIHokU5WZjwFRNvHjVLQY4BO2haErdbZcOy16RU6FI3+DIKhK/Lrp9SXqpMUZeE2I7XbT3KtEk2KoWOv8n5kHhzQjq/itft/r43FcftenTkHOAwg9mR2pKmz+ZQe0ZJ6eIAfOwvdXYzs7UgNhajipCBO1gKCDbPAM4QoJ6ZCmy+uQLQ6GVbaM2gPbsz9LYZNMmbHqlMHrQ42ANCgoc2+APH1JZD9LmTwrEmebQVFBrN9tMBl0Fi2ryk4LIdvWWqKz92Ewmwloj4Uagy0w8uqVmM8o2NLggWAbVSwFvpPOJcmemnDsgYsFwUdSWjaGZJT7odDbckp+dlBA6xTQ0lq4m4OW1c1FRmeWlUDDy3iWRmej4jIiPQkYpD7hcYHsCOxYK33LLJ951xilXwVs2ZMWAaU8ksA5QQMBkMNpKMn9N2crthHNeFbBPGe76OrUyPJl61Uux8ULRW8IwGWYDva9axEn94DHi6WIl0m3WeAvfudK+voMMajZPxqYmXjMd69G2BnYkb3gHkTPgSBkyknRA6HyHaq+WhGoHjTzc5wqRoFSKgvUGgGs6M0Wdp8ltNjv3vaB2c+fR1SxtMiE8i2dJlhNEps6MJZZ3PR9ZfvrzriaRNkajEAvs3X4wGXwbdNRDiT3TMyuJJ9yUP5D//qsF5fmPTAq0PwMzG4TZ8DaY47On8zBOxBzYeBqmFMpUq5KwyDDXBKd+8gUCvdFSZI5uZ6pu5FQbwt2iH6FZAKHFZMd0n0D2dMCGJyrS923onFu32ejnHmlr5kL5JDbm9H62tqabWl4ZUC9oBhn8kNFVT7pT4e/Ys+uoFeKtwEs7HMkkG2fa0MlDtVQt5My8zQTEGlcpqhGxTDWzF7/SuHY/rbgxhQ0PqAOKd+U9G1ggMpSu2k+RqdJhF8EOf3mRywh8H+7bLAQ5AOLAal0QQfb8PrhYje3ApuFJW+Sh8T0vYlcqt/Ph0KtkyuoYSUo4mS6xUAXUdeo1/kIVUs0xSB1+kF9I9JfDyi0YVKkqRdzrDGwSsV1Aq/v8yrVVOWqNYyskBlDJty1bg8LBmLcvMPbueK9yYwkPrsyl8o4QvGpwlPtWdDTk3mj21PNoDXRvYTw9/oZR0AHX4yaCKM7XXrWctTqVopvDx7Em6DAbYvOVIja288ui+vMKw0iZVtwpiKesil5WuhXGJsKX3OC5vq4/nTexlYPL3RqK7ZsOKIXh0tFK/JhP9NvEllJPNlpBory/GId6BD24v72j0IUDWeZFztRBEn3GADChZsgytafgqZWRGyP84xl7g/Iwd00oplb0TPo9jw2CCYqGZgAe9IN8idqLF0840e9G8mzmETkNWLgD4i5k8Vf4ttnhVvpWg6kAjYnj79KzRzKrk31bogtUcUCw0FgmjILXcm8ONyP97zpl3UYHc0pLUwbepjvmVue6DNJKEJ05YKgO18W4P21OF+KOS/2Hq+IlOGOtdc+fZaZlN1BOgQ3RmjjIzWkSKjFFB+4ctFGVQhS8IXIzZtK0kF/g7wBOoc4wAkmoWN/87V6nxaHLEP7pG8GIY39zSrLV1VIUaF3toY1/IoBOV/zHramTu+Atcqx9pLD0VQ6a+hzlnc0sxfMJGkO63xUXA0dQdymUDdijtKY0SGBtdI9YqRRX6+UvB76z+Q2uYmz/FOWvi4KxVHsAOzYjWV8dMLt9TRTfoSfPKALdTxmhrFW3+NLUB19bQTFvEWYRe0GBcnAK+sDRoj71BaHB0/6gAPOdqONflVTL8phMgCPrItBNWe7BK3Xe/sHh2Bu3Npr3f0eGlRocL/48s6M5v7FKrT20hs1usoMjZpteuKzfvZpab3BTDdpoS/wMeTMqWvNmg/wzoJspVMgKbW8gU2hS7HghqfuVctoTC2NnGSBZT23Y//wkEqIbXMEqIJ0Wj+Tp7V44VkwV28oyhhBGTNfj6Gj0shq1DGsuiDKamy/9S0Irvjk+TlYdRBXrq3BJjhwUohoh95gOIsYb1Q/ydK9S7J1CxlAYRFh+tTc+JpuGl21IjNUr9YkznNnlNz4HB658APmEadOHozh8Chbefm2OM37auURKOyxS/A8y3ELrO933yli5DgBi5ueDdGCtnBQ0MtaJHW3L2UoWiDRywL5ghP2OuChTZUw8jDzPE/VRHZrXLwpbrIRXOmWjC0QFAPsQ1s2ZEJ0CrhWU1e0RLWl5sY8IhPLJZJNanaeJeVJOboa2MOdzwp1fQPellfGZmtFU3bcxpqqs6mUwm2I9QH1CSNlHdU+LW9yqqb00R7fcIlKXUOOKU2gV9lIsN5eURoIsJnoLgHwDD1lcWEHwxF+llGqr+RiNoMd+dQcxlZjcRIth/Ug0ORk+7vd7b++ev+3rTdvYp4WYeCXS6rRBnojtN6jVfoFH5+9ZKgIVPYaPA7bQ65HLnT4yHCPKRK7WKLaJAYazr66IpruktkYOxyksvqmtUOeE7y3Jm1neAgPhYEc1BOCh9tttseqL2XNV1+j9m6wJOltHRjfEQfFaFzf5AzlFKOHjkZr8ljyFsz8gHftfoZCm9oSE7IUrzpp7PAObGIaTQKGp7vvTAAz99FP5WFRvAFiN0dReNQWahI1NVkkQzKJw2KGGvOUJVWBDByUzlDaCDXqIUvP7zNAVqqW1bQ1uQg180GN9l1ynZ8nNb1hS1NLnbLAAw9zV95SmeDMZXaQ75xh/5ABIQDtyhkfWxYGG/cUA4P9pEKaSLSpO1sTJDP/bUjlqi/wVjgnhNjd6ejJhwIXrSGsRgrKnB8+m7CtP2qhaXJfT9uFhltXcVKDEmgzP1t5qS3jU+eL3y04UdBMEZ4p6fMgmS8tTpkrPOGWPQY4X7slqSKPs1SyAHw3CzLH/OJ3WjlrzqV3rre2ybZ9zKlRcfiCxH/XhttCO5BSP+Zdb6ASPbCtiolfurZKCkap4Xqjacxx9VsiUuc3JDn33hHNSlndoQNw0YAb4B9X2ej29Ba8hegLhSlPmh7If1JVcx9ybTk8gYTF/j1hOCSM151eKqWXrEq6ZerUzV+h/GU+dpSu+VKzuoqlyLIAtazUYfD937SdoELp6C83F7fRDVpS5GVUDP4S5eSdhGwr/nF6FilCEKkCCVpekMcOcVnSb3rsHwAWj6ZsTCSP1nzr2egvbu6msNEhNUGtAwX4HLcdUBaoxgJQf6sXQRIrru+WghY4A/5ULxmsn2htOyiMCvPa5vIDd6rtA4dTf9AaW/k06ovw8oKmaf3Sm76NVDIoTHZaDNbiUVOOAVhsCQxd4kKCaldB0AUjXez+0Y/NNKYXT0/P5imOxgbA1MxT6bIYnBfpaRyZfeGimJ2xJw2uA0zlLXtW2JAyZS3E0ZjePDdqKmhT3G0gSga1AMCy3i1S37Pev9Jwy2B4ALEaTskq2rW/kC85wBhP0SmanYOQvLtiGOwW3zS0uBnRjx8vMuAvYc5sHkHj27Sjv9eb/5kdapWUS+VlgTPOXd6eM5b5W+JzT+OVbEesQKAdPIrQQxGf+/Z6x0IRjB4AotyrwdgVT2g5BJR6GpgH7lXzgJ6OjHJv8D9wpG6aYd/7Sh4hGIa1f57ioOmmHfvxlJjPtFVaN7Jt3HYyOI7HEcM8IlxaQctbmnt0mvWSK4UquGnBwBH8LpX0bnQBPsPAgPcW3ICBeW4JmrajYpD/M0tb/O4T4kO6KY0ylWOWa2xAQlaSW9+0wBVj6xTcKH6//0ahY3IJpn00SrCIj5uezn43Jdckug36uxzFz1nleFKL74ewwmWlUdhAls9j62SxQpPwOxFM/hJYMKj/kZxm0/pBhI2GWThch29Ewnngvm+Th64mCvgtx9qvvCO7pJpqVch034m0iNLTZS7r1sfuaqvfaI8NAOcb/XLNEmzjKIqnhRa2BxN44n97Nq6GT5rIBdUwDP+Ox/8veFwjLoaOjKc7lT10F0fzk5/LqL316zycawE9x9lcC8k6MwU+XH/Jo+dJToNtAlbgSOiqHqWB46cxYYj6AZP7NDYerRfjxebi8XG8SGcX5sfHSKDhYxk/2lbCohJFN//z6nWlG0OajUVp0UKBCLWjPtZpDPTla/oC3VDjM2TxZSdGNRlNFItWMYTGVHqbvnV77Jt/aaPBGUI92dlCkdvDC91D5HXx4sm6eFnTw8u6DtbnnYMBkjeFp+qg1TJn0xMCKfL7aGIKvx6uRJDEXw11MnSilXUNwtXVbJCWiotQBVutEGZYZKf4NzgHd6ikMTMvGF5WF/I0G98oNjeu7bdd1zFuDUhZrxuK3XyF2HqX5EPQfV1HB6zN66QvRKPkn7IF4jH2UWn1GdVkVGHgCa9aigc7hAgWUFsRFedm/Nfs9kYRX3+fWvZIFvIPebcBr7S4hXCKkGGRy1zoFf7SqoO2HX6KRcE1WVlv2ApcRC9A3FDghfp+gXHx/XCoeR/drRpiNzeHIVFzNE5k3v+IKtN66UJMl98PSwB3E9tg6zHuEpNaojnIlGpxWLAhuJxu6tiIdEHerJZHrsy2tyaV9UVg6pJGsgYcCxTtqYkfZAOI+XudNaiH7nWVW5XiptXVQTGILhUzPcp7fFJnpeKvs6gY9G+JdVsHL9Er69wXdIXJL6N1cnzK/N162y/xAhdSFFlZ9xk/OWUoqG6hpTqJ3quFTMh22oeIQn6GhJ4hYwbjuZweljjqXp/Ibukw44+RtyqJ9X4X1GK9DqgRVQa2UBiMU3NZ6l4bbzqOqK96YBqyglVMij1xrQUgOwQDfzCEwTVWOeAcyi3E7gQwd4HRkh1vHonNsFBBQanixONkLVj4Mi59eMA2a8NkYW9aczbVyYJAO/31q/0hbRsXr4qiH+zUy/d6lrnTu0+r3UMgDOT/DgtwGo5DAPIAganZhbg/okCVjboqQoc5dRWWcPh+U910QkM4YqM8rb9g7dV5x9OBP2BYCcrAS17lDafyhlt5gypvBCt3U1uVfnNFnITizP1K9wbdkLaxQUeFpAnFriB4uqlH62y7tNPkCxUIueAYLZjQlHLywAcIRsBV/NZj1Ek0Zc0orTURqJrPeUlAJlA4ZTZMmRcEy6gRedzCgsBOrzu3YdOE+nIxSB/rsFWiuh74h9+TnasGb3COoriBHDL6KiGyIw33LSu9EJVezFrpJdWBfmbtxtR4UV/j3iENdwI5zGGmDjx4DpIJlqMNldbddkJzA1MTZANraq9Q9WeygckteGRNN7RRGfRG/Zg3eMyGP6OBE4MmO4/Aexr6Ui3rJrBhJhBqLbwK4Sl8VZnCV/VT+Co8Bbr+eFNAhVa6h9TN4qu6WWCDM7R479M8S6gdrWRkRap9AODNVKkMxvxyDsNQHxuz9LExrY+NcB8hM1sh+HSsI0C7pXWhQyBUtH5qSmmHVsHso8AF4AS5qAQDCngs71xtHBneUUsCySuqfT2ytwVxhbP3Brq5CSaY7g4F3j802wtHkc5Rv3Uy8SKcDh+QsbqKWaMsGW+VNpe+2/67FgiXNDe9GcXPn8deZo1gMai38syXSn6XlBUfo6urvmYL6lSl+XWeXiV9dsZTwv168mJPVJQp1cnfzz7SPVOHbBL3Tb6bFdOCT5w7rkm63KCWbGKzVrpKsSwCJck9jymXfRoaN9g2BS+izMfbBw9GbFpVl+GRNwPKJzwxNJISnfuXf4MXpbnPg5C3LZAx4O1yliAbuOftjAgeePaQ6EJdJ/TKjnR8DRA/No3SNeaYJeLMZRrcctxgjQfogkgPdSacoDCEsQQFNfz5Z5bMaJ+gkOfK20FIVYtQAQy16h7TVLWiSKDeZTL0JA5QsYUE5i362KZyJK4RCPEAtHks0mxw0iy4gTug5w4w6VnZMF2hA0R74kYOwH2ClwsIDhL2NdOfdaOrJsA6oic3N44R2vAOyaniI24sdHjok3K6VGmO3ST7C+0pNQe9mwKraLdW3eZyT3QhOZ1tG2jIkU92BDC7nGEErvUlJBy9BRfYbY2qqCX9/m9WA3HbFlny2wSgSbdBarlli96yz4FNohV5CQ7gEm28R6PTdJysm3tdgzMh6MwYWgv5R2FrLbouLCgSpDezGp1YD6cEavVamSunU4sqfwJfy/DpIqK/wuB2pOSsWkt6VG/ioyoEX/kBHvgGS9q0WBhnF1bUCdyZIZiuSbHPylWkfaKZujrt8MEZqYOXSyyrD/0EuyC2PTjzweZ2stOrc3gNrZjm1UX2+aG1v94Sq26b+fCdMbTLwFLQN6mCIeqxsOvqNE9RFeks7/fBi1IyuNUqTLhl2CU0zZF2n8ecotx5cEhvo6oojAyLKyxsGMemWNr4X3a9ncbcCm887aeLws/qz6UYNkbcxK4clXFWp3NrOy7unCd7cnLg6puvuVrts2gIBCwxZmPmJ3Po3qTcoFQzsEE+F4T7IZ1Cet3Aqvz6NjOrYLss0iOXFQjRR/DL1r+5HUR/Wv3D6sZatLISKUxMwTn5aaYjNp5eYYxP8vx+1i8ScNATYZxdHf1ilJXFeEQVQbWO3XFFw6JE43bt+o0ChUItVH0gP/eWHOhjxZHzT45XFGJ68FnRrtb9pKV0bESqRBCKzE39HPWlaZj+LydEsVZX4j1X0ZP3dpdDL8hBhfZkYa0gwnVIbnSvPU7N3D4Ft2Pnt6awuqJi/O+m+oF5Vnmwa62LdQwb3D6D9BO+NLxWvz6MiuHeAEMdw1sDtGYa0hVG1wZACnxY/WVHKL0NtO01BmgAwoaBK3gK3fQIqtBWw6ZM0hHUPKkKb/AtQcfqGI7g5BrnGUbgUB2YW0i6EQW8tKvG1wKGZno4d/f35ITZcdWHlTQbpxqmuBrx88FpOWyLVzkcv8r35EWja0ut0VvXO3BWq11vWBthzINwoiJPugQrbrYGt3qFnXRocCcrA9UUWgyFlWIo2RuNKcPGaHV+V6b7VuH6OkoYtuFYaTUYdyHY7adhMkgdoZMNPWjVkPjOWlER3ZioIroBKqLxuDg/7/vaoDbOYKfqfd3LNJcbkR502rJQ04GLdCGFabxQD/LL92FN2PWJ01x3NWE1MWT3A1VHvVMs4Pff/7j7tw9bsL5Y0q4HgxBJpd7mRpGRwdwgU31VBgbXolSo0uT5GYprlSkVbffrQdrkWhekMunUgrRKLUu+PfP1WlvZXnlgrGUJU2mhtynEjglFocvTJedO+D6Y4DqddfimFZPSHOP6hL0bDH1npIZkCn3dqvN+D/H0gUv9Luk7Mijy9mu8pbHKOaRQrRZ5NDD+qypjavn+fwzzKL2d8LyE20FzRlUihNAQZVF4Hca5VCI5RBNiPBjvgkGpN+0kc5JkrYp6LRmLCv3a6YxIt0uqqd1ua393+/3+zvb7798dxu6+qlyGTNdtRzY+1Kb5bGcPow5mLN1RoMyFJccyF2JeNpZc09UaLwy04k3mXE3IRcQJB04apd6DpyLLSWaMM3hJhx9tqjfSut9UT/i0aIX8Ryxp/NT1eItUMNuTlaKk9BLVXUrVTKyTKmOC1AnekjEbdHfZv7C4IXGuDyFVyE/i4bH2ccwY0bGn40TzFTUNcLHe/PKqVSjaCqITY7PyQG3kvqNdDXDGbKOLDJhBhjDkM1RTT+lbwIrzFUbI9xf7GGN0lVePjleOj45PjleP747vj5eOG8e/P14+/stx6/j4+P8df3n888nqeTNaPD7+8jnqM5OIeiqu+G5JlqjuDOgC7pzMmIXobnUVvJGV6pJ3Dtzg9sWoUFiB1zUqD3c9tcgYFzMiCRabToFJlRrUTTJKo7KfgNPIL7RtOEEmAJjjVTXx+Ph4NQ7JDe6E36/NaD87V6zTEupvmaaacR437oX3nLqrXdBewCdoBHezt1dXHSJoiBLkVNck6ClmyXQ+mU5al3wVOll3UxPDsW8O7O7d+P44GGIV89Rcky/tl8il82Gx3S/KrBz79ywUYxrbfvembnSUSOig/mWxm6uVu733QI7PsAfIEhTlw/njoRHBAN8Uauerie18RQxo9YKp3VeR1RoGCAYwuGcmX5zwEgp3N1IV1TpIexJ+FY1WR/gTsaZmKNgqtpwjE0k3xANcnaWuGwK0IUqof63ek2pR5qE+4TBJVf0NyGvGIMrux4ZN1WO3TQX9jMHUXmB+g26ZkXHEJbUq1OhfWuUM2m2MmHtqz6n85h3FAlF40MRVZJ/Z8DNg9zoGLzaereGQkySDSuI/naNmon8amR29PEQU1ngBogiiB6z3A2aWA/fdhaGiyHDicBEiDu/Ju6EudD9VvDSynmcwumbYXokHKAWnIW8rFc8gCurT3WxCCxRSfLIwzi8dHqshC0QdSbYymVIKt5Iftr7dfff921e7+y5D6VNKf2Hn7iTAtE7rQ5PmB3SEvw523+xuH76fc2bz9wr/HBxuHe56PLkWLknuT7Jgomfa2v7QTEX7xKLv50nJAhmFe6+SkehtwNIA86zGBfk9BwT5UEQLqALlpsjTuwPZs44tk1yrD7YpNlrnsiPLXkNqy0TCXiDjWRshTLdn+7DlYIFcYYqHk1RsXIyTPhCrctICi7IUGMcvTWaHXnkC1ZS4iAs4Ry3FNR4Wwi47XSPoaHV1kGVpluqAsX1tZJ9E6Oc2goKKRKeYi9bVIP8/H/1e0n/VigFhxJHoDVLPErb+KH71/eHh+3eI4++2fui+2/3bYUv6XA4Jdnxgo1JxaAGEroyXQaqWsBfgKYAjEC2ZgE9k6+xnu48Tj5jlm62D/wWzRG/CD5rm+q91SqrGD59jRtGTTGniK9PWNwd/PzjcfUuBuuXR1XXk36HDhUUCzDkjwTKE/E0++GgiBHHsC6Q44He3GF0aAsVezUEGGkuNCw0NvNfbmGsijvaQfAMH6piSAB6tTREk2W64LentVAQWwTgfivqRVJB8fTsBFM+z8X7hSmRneAqYwVtEbAPMA3HWLKw6yh54BTvSqCl1NsyjwFTJf13F0FPVlLo6xHylocYsLRmh+u8/ZrdacWl1tZ+BBxh1XkHyF+57nK4FILJglSyCvQfWD44wSz7TOTHRa4JfGE9ZYj2/sLprX9g3lWyQfoAoAw+5G2/a103TjFTsAtlSdFtckZ+cMj8FL+oRBjhQt5rIoLFCXnWoE9ShxM2oUP+OIAuUCvIxZFM4IMhGVoAaK3VMeSzcok6pYnlRXPVTMtXkUELsoqOkYqe36rsEXWkZmB7ZnXFB6gZageUmi9RYbUcU3gQ+x8WQW9WVYg2KmLiZJYxUCr3oMRuF0QdGjqTH5WTD1TbtU0s6rKSICagHZHW1HacmGCTedWqycKPWKJvVsQl1vxHu3FZmVGbJmlB7lNurulEWqHB/w9kXhMy820wJvY28wo0j2rYnFE90QcGOlNvQu+mmmKCr5oIh3dEDB4dvX3ABt+GDjd66+W1bdQK+z0fGttijJHaqcCgHCQxeA8RAg0x4cMxTqIoGSDMioYj18SIp2Fw0CgsPPyIWOCRKH8pzETDdkhqomg/ExGbcv38cXFS7gTl/EVSSore8SXE8EfEnR/EUW3PmTV4T0FPBsI+XTNyxlnqi35jCvuUaNwqnPwmZji7+/s1OvY+pR53yT857/BuxDZKuzYS98+1jwmPcuU/YurNR76vi5H/HbVJWWWs88o1qKI7LRDyTUVekastVIMQtwoKztM5gjwS82KVHKMON1OnG1G28GXZvcOMZzLUYIN0hSw1svJbVcwYBdbqq3llN2FSv2Eysby3vGzLIFHhn1Wwle2KPNfoObADiPato/xh8xjZBK7VvOCcalckY2aDAEmEgy1w7qtBh2DhFzbFau+wEAN3j6u/nuN7QJjTPXJwjnrGsRuFPBNKf3Beqn9yIvQoPfqriwUiGoKPWf+JFt4FbPNMFgqcqbOb/+1VNirSpskTzkVFDqnLCalM9C5XadFzRTOByHbW4ut3AuImyAcE/i8oEbdhmb5PhVNqxUL+KBpiiv5EIqOcY/4syzgCM+bREWs+zRd9RxdYtYThxYY9EsGWPd1oTY3c0KkalfqsOZi5V2iA16XATobxwCz+O8nGm9upZP++Nq40Est2g6xJ8LgTieBl4VDH/J5j+o2f/NJN3hV/dq1KqL90Oem8KGWMNYt9R6J57Yc3xnTa0cAOydauBKcCPSjlOLodoawWyCgpB7D0nyUaA2MJdQxX+5us/Z7215JuVNPvDn1e+XvvTn1f+lK5nK39a/+ZP2VkvyXqnp7EaWnuGYIOgDg8E0A3jiLrkkIxa5IeFKg6CySOhxXLSPMLb1ZROwDwNxIyg8790Fy0sdrvp+OxyvLgZLb59u5qmq7fqv8Um5uiMtYvNtcto6y0np3nSL86/vcpTyPzT2Z972Z//8MeVP36drK18ffbVxsrp119vrHz9x94f0yxZ+2btm3WsaFiJV4WiNIfFdoEa/NAGN1yej8wXikbVF3m9gcAhq6tlma9/NQ2KQFCwh+0rRV4v+ZTUqopH8dbOD1vvtnd3Dna39re/Q9jC5lrUEh0YgdWZWYTFXrQOOVXuOiZhMLM9hMBWep0MehnbsFONa8FB15XBmOeYCZHjKA1c3jJSvucIvYsC7RZhdiU6ql3k0DGL/eLmTXad9aElwBFsSLWuyDwkHaDnWjRGXvyCZceLmildtDoCi4af53kuphSIjQYmld2dEdVqwcu2qxr7ThtVpf1qtqee7xawUKtW1Pr+cjwyvphTgzRBnKRhMioz3UIl3Aya3nSxTKqlbNY4CosgKpNSO2mpgHpKVLFujdTwbulHZF+F0aATm8eabcwO9Ux3E7VToh6alGajUYMac+LM7u7vv9/fjNAAKUKNyGwULcbLPFKLtcvxoqoJclEwvMJuIpwJuW6MQEAW3dvYfPb1llAsSVNQp5Ewu1bzRJZJQwanQCaHR9cacmi4dkaE+LpJfSJJjooh/U0UlwxeOFrqRyu+b0tV7bMWo23ps0YM9Eo5foXxGanUvM74Rdt1DRXDQCvoDdMp1LZAk2tIV3FUFXDNtzyb3krFhgY5HKkf8t7HbCShDs9XMNZmzjEmeezknU3t2tgofXeHWBvcou3C6x26KE/zcthP6A6FkTsRkrL8D68CpW2Yz1naJg61UnIfFHwmNm69QDtzGkHF4MTqmvy8s6stXT/DwOyeOSsmU8LzDQ7dTDSacaafdZZmHc0mxhEq6kF+Q3QCaU0HBm1bNb70v1pbG36agBxuy2PF/LkpUOZslGeDtH9bzSFQzzQQMYbppeFBWESwh/s+z0JHP/VremvkWO9oi9glr2rzKD7N1KkY9bOzMQaNLa4z+jhpwht6G5TOA4HN/QkcKGIjIrHet04VfSHbVApeLgsfkgcm9r0kczDwLar2q79Mx8DyqErH9Ik7CQwam0IDZcNzOtNVjn8ymYuLHDKjop09H2sUwUzgV6imxllTWVLtowoUTuisuDYbaJ4TQA9m5r6MJ4eHdsdnztX5ubo7SWDiUjZZscKDDS33M15vCxm75NKGabKSiMtTt+JlapPYgWeoD1I1TsBhMSsgzaZRS4e4sMB4IgtcZxOwPQugHga9b1cKGGU3bQPi5RugG30QLjS6taxgkGGqrnJOK0veZ7WROnGMoEVNhXtJ7yLbwcWhFNU2C1sVT8e8I9rqtZnBc/EqMPMCTVMrhN+3SrPOEsTGtChguRfSuGHMiptmWRnlupzzbTb26AP6y8mnqEoJ0WnsopA2iujl1SE+AB1tM3t6BhErKuHS6pVV5eS66k+9ql4zen1xvWBZmcvHFTYuGGqimDBI+b7hVSL0UJcFRdJ7qPDaiVDgYIpHRlbr1mqLbLr4GGyuqOqbgox7Ryc6MeQoump+gEXJGSWICZ3mjRQRTUmeGR+MVAd75AcvCHy9Sfau8NM65aBmwbNDw9w9MOm+odu55x/6r12gIDlwSwTogfqP6BR9CIYhvER1i6tD1JgJB5ajLfOMzzGbVFmUqNDuEw32tKtDopMOnBrbME+hEqJVkqkwY+AVtnmyAs5vhwboV8C83kWR97IyMpXsgtdGJvmphCDQJByqRrBC277jhbjRaMzTKBnAIBLNWW8EV++4qRBG3sXnawU3AbbhkB+3Dab6bEX1PG44aHA20P7Gkm++y/rDbNRNHPK2dTUuDggfyIGJwfWJtDdgOkldSSvJSGyJtrvX6M+9ORiD2F3HjuGWbETSVU4Y6/29YbZAYCOK4/WhO2K+vYBeugYkBCO7q2odv4SuKbychcajkt2Sh4CAgXlDsoW1loNUW8NwnylzmtWHqsgf1AGWF4vj0sJw2SkdC4x5enLwIFrwBITg0VRgAgl41P5/gs2v5YrE7CluDaNbQblSsnvwFsksn6Ps3QX/BCnUydFBAhSAIx72d/wiza+jXj8pyw4K/BfJUKSzeJl8WqHofZsRig/akboXj87UTXkTpMvtxZeoVRbgUcQtQnApyFXgClGnyTcr8ErVWYyXYeTLMUwIh3m7GEEu4glk5yh5tWNEKWpUDC6LqzKDQXUWv0x6dLFvHse6yHeQdRw3VGu67NVYFR1NLPrSxKzIT0Di8GJVDfZlzBy7nITNIP+kBFLcqN5V6iVHpjKFsBlhrit2NT8qB9gZuFVoMmF6O4TwZxhXZVBEB7DQEa90bG9pXp1Y32O++J32lwRZLAnonuWfXpHthMQuvr2ysbwU7Cdpqh1aSWzKFREy2IQinU3EIhZObOaDviJ8K6f9ovdRIRO5PWKgzoNXajTMwsYwi3hTrx7ysWoJ9fiaUUykJ7JFMOGeF1crn6pdQqAg5hWfkZyXH3JBot+bYs6EdjFhAQ4AMH3OLofA2eLbqUrlz83oCL8daJH/M3p9UDuLasQLdUVAQUIUu+Or0b1JwZq2AH+/IN9xei/Bx+LLu6NRUYxP9G2LL8uYef9iFf++5HWxrfvfod7EdzXh7vf5WRTsWV7ZAPGP4/ImV5fw4/heNkCwYfy6Bm9dvaS/kqg7CxgDF8N2dNbPPq2co7KewiBCwWgdadmiMxY1GoiBgr0obAK8WVqaODbEH1KIJBFF80VW9pJh9uIOHzE31ajxEVMN+uVLRWnytLM4yyX54Me9w+3vjuPlox5YFp0sHyvaZ0glDXFRUEe3pCJhHoxWq3AHijA77IFEHqPMd8YKveLytKBa3ljwhTiaFRJ3PK/7xWgeXOGeR1mSgvlCZ1H/EmCkg84C0XaloDNI87N7vUUgXnEkN94ezGEx0hWJfmBbH7PblQzdU3QWQQSMiVh1BTkP2U206uIfoB/bqxH2Hc8kUQFdCIsA9SjYjOh2zyDUPQEY7hVu1gOmgl0vX5o1fQxSmVcDYsSeDlPmX7bPu0I7W4e7j1ghgJO7QgZysy7TY0f/en9PlXnz90fM4jIbXFVnod+Tfil8+w+qPQDVfmksO9h79+2bx0xjMq5RcI9fAuNKhXC/RlxjfmmcfRprXqmnzqxs1H4qPHy79+77g0es4ADVaFuX+eCqdFcSYLq58kug5Ic3TzGFYT84g+V5ZjAv3tEQguzXXOxyhUGeyoJpDTq3V7kEZOIyxzKQ5f6sXM5986jsFcPspCWusNPZ+EaTnmUo2qdaU7UIczDsoTGqpWzd4d67F1ynXZrNKn/vbeHj+OVLj5VnVPiNgvfXClHk9p/4ysTPQv9K8v+Iy0gIzX4NJ1dllJWlq6xcNaGeBl7madrPPLo348XzmRRSgMrZjFWmXIMeeHi93ntzuLs/2/FVUhi14/jmQm2plXKY9LLNQXEzSobt2uON32+WVTX433JUDN1jjgrMecz5y/n4xXsY+PZ3377/4TEs6Ci7LK49XprS5oDIxNkHFiuEt9R89EIPUKvVkgh1Zb0O2+Y+SLbe7byfDeGog83oziIeieX+AFI5tQHUKcOqCKrSu50nEijDWrHqwjEpScN5Zjp6v/9Z+ilG0M1JE7Wz5zgAPXCGzz5S+X7AsTfDVvO+71Yr4mWvhEROebUALUoFogfuxK2dHQXQqdtPt5ykqbvpVAJvrPmGawEh6X/JQazQ4WMLHmPwrUrC8aFivPdbc00U+vbkdno0FUJSXW2ck0sK4IHKmUfttOEpETvCANETG3koNA62gPrODg0YknfL0oOsktUA8j/0mPj+3TyjHF0NvBPhalA3xocNaPvN7tY+2XDNMzC0faRFdgfIRpFonTUVq7wN5ktQ6v5yNfw4MQ+iaO6IJeIfk3z+dzWo1FL/TWj3DbylztuuGbU8iun4+sp/VcIytQQfdjzg+c7/fL+7v7d7YB/hDFajjgXsa+SHKxTsdCTo83/pm5mjG6DwBuo7b0JOvRoyOIJHf5cMPhAjwazwzVzICNX7Hh5imo+CLjzcL/O3fv3hpfyzrv+MiABIADjw98WoBgWAmIVRYLaGN4RGx+g8H6yMi+Hmuv8GSq/D893ysPl3W293PWZpfW3t/y5G6HX+ooC7HlzjQlPDaYGt7g3cg9TwProXxg/kpgCufhUOReLxhA1QZmP3TdStOPMO+NceZk93RuCOnHdQs+/KCl8Y3pfz79ovtJ1uMXiF8Rh2RsmNVE+BEVs3M8L1hGsUWonQ9QX7Ig9Zrd67XX5gReWAVkxEmjB9U1UrAJEEAL2va4WWM/CY52cu9Nna8Y6vD2d6EaQi/JlWyzDOenimXiETtbRi76kgW1c2umMyyIaZMQU5s34HSJuMwixmgytwWJG2NYjI87hvQeQGhFSUZz8bJuBN707D3doSL0mDhmKwR5FN2Nxbutwyul449r20GUT9rvE16qgLtqPKYKKOG7TIGxKaUOzKqFfULeR9mcGtYwmym/HH7PZqGDetmWmzl2vDml5uNOHVmmiFIVbmspYUWWusiHSG7oCzVjmChsF4ra2L3YA1Cjo/EJZtyXjMFiKO5C9uxn/pgPCP9RjVMLB6w5rRcFg+8lyyVN+okMnFDakVOd1YA4PuSQsNaaJRtdFwrDIiXSyyER6sHYWJ82BKXOZQ4iudFFLFVUXyy6tLMvrUDluoXqWQaOeZZwED1x8Yz8sOVG4AEHjQGKvQxsDEBrRNXE0jL0wbvpGV1fOG6aml3SYXRFmrd5GM8AMxhXPaBqghgx3OMq10ovWvTIZbyYEwqi9amxFRCr2MtLQSZUtRgb7KUOdFvy8aa/rtstvDSOqxR9ZyUAzwqz/ZjkUr7LE8W4qHo+zaauoH2/h6bUobA3XwT2rjWSf6MyzVBER1wDjBfugZ2w9F0ggHL1ravBRGyK0evrdQipz0CAL8jANVvs3GTcWKCui6pjNOO6rwUmAdHJub8P5EuwHAvECeUf+Ka5Du6zUApsLg8aj/1+zWWRyLUD4ygc3bp4Y3RqvJrlWkm2hu61PmM/BqoUD1mYnzGP1eAYFSv1BdXJVkxX3KU/8GzL+ATkE2RI4GDjx+Igpt6R+1IkgeAx2xwTkJ2XiZMwOUXFvJ+gZUQAFrzGW9hozdTbV3fQ7XLis64KXDOFWLinDojTIyv4evpVjxlLib3YCPwOMvDREbtCH4ZpSclkUfnAca2W4E9tLtfxIgUVl0rY2tQdUW3k20HQBomsQ6Jzd++og5WI5bRGdiT+EezkBfEx4uXOxvxKt9fWouRDMp5kesmS9002fvjPR9/O5cyDyiadZa89sPvGVEQ7V10UXVhpS76xE8tO9Sbd9xZV6ONJ+vyHj/29zAO/Lj5psN0sk9TuygejNlXZ1I3OVpmF59/3o4cZDFx7ipL4FYEH/rCwgHJH7/Vw5MfN94RFd0bZzY3TYV8buJa+BkU2kjirA4vpUFEGz2Ov0OTCyS4VCtD0YiRtLg+2ggOgM5XoZKHWQ3wISDd7JXxafgpK9P1TwVAaMe2cJ6s3onUTeeSLpfsq6WIjfOMjtriiaEWdZFJgSEjmpiPkd9DjxLx7tNIT9yUcRW7fwV8W2RjWybmMZLKF/TgEyiwc7LN1S/1WoZsW+E8W+jiLztOu1KYRykSmEcHB4xPlLw+XaEJ9GJVr2Dg4cf07HowlQyG1BZMAN31aNNktEdp77vPYsk5/jp9UttcrTc0Q1ro6P2omOfVFdxJVDxpZiiIqGDKaTGjPXFKpSWtY0ohmFrdEA+PwC17sevH3yA3rPAjt5G8FvKsZifgYLWPyMhP4xLbwDy6AbUwe5ZnZql25oH2SQWBGoecB6PgVlnRxZzZ6+Rw+vT2R1CaImIpWCae1PN4Oqrxm1C9QLr8HE+hUX/Sr5gRRJQv8IORUdj6gtf3FvdqTM7CeYTiYSgCMk0uYU1mgCo1AxgJyGZM9S7VP1czFzzLZQ2dWvX7slWzlu30KqFlopdXNUuFgI7VAk9XR0A7zXXwlmW7be3hLQf/aCPT7iG5HVkRA4RYQUrnsUGqblasng7i15yHfzSEghOMnc3U1xdVF8Xo8tkrH0H4OWNkhpEzaRwgduRHm7q970c5/xYoejrbw0nUo75BVO0/NRNFUWekEKrtQ+hBm5FI39im9fagjgjQcl9B1KzrPEUqsHu46zQZqYbRNwDOikkOsadZdChUo0TKy1bMDHLZhkC3Jfm7R59cxiT/FpIVzZdqKC7FcFIvdWykdWqO+yhLbcN3Pi8aM8PSCOl0T9YTtOMkWVzH0ymwNB3l4UiGbVGST4ol7R0rtGYbYQRvTQhI2YsuUlN0yoGLFpeTHrAXcAXr77vMq+ZJ80cXAY28QEG3qpADwoqiCgT7Hme3JktmKgC9hXS1bi6JLn+gusE/3yUw/tlXSURezRG182QgF6x6U1POjXDwVRcr4I1RC9bYrnjdaO5Tm+OD/CLZz2gOz0IN3MRv8TaMLgycOqE+bVNJToK7+jNEmMcoUR0R/ixWajEZXWbwZOROP+d7PTq/FzNCryCTxhHqLhtTKhATGgDS32Hpex0uuzBI6rzZoKzg0JVnyynPzHYJwa4DvgeicvbEu4hEGPjapy5ugNbg5Qiab9B6YAqjmNs3qXZtcKU92dncFd6zZvBe7JVp4Q6Hxb0e7L25E+6OOjZdPqOS0fJud6oC+zJWhehNh+2NQngY5TgYmDltF0JgaSdnfuRK7R3WVFC4fMG+8lgnJzjGNcIqcgTxiLqaudo7lq4hZuBZ+7o3tl4TDBZA2CKv0a/hHHQ5ikANERZ4apQHfR52mjisjZX1m30AnfV2RXo05Pa8JxxU1GfrLxwRIvPSuDx7j+uVJ9WfzvuxIxQpshOkZXRu2IcYVlR9MXLStk3WVlGhxfJQBarLxUVo2qr1RF8i08dI7/haveyYKjtl6pt0rOxNMf1qalffa5PjB8svVXYda3vfvPMNXGxFbJPFEES/A1ZS2xFQ+wH8YBNNJvlYHUYGZNqGi+G0C46w1lZj0xkF29dxReMRx11S1RugVfcQmmbmQcBmFbrk2KmNDhtUeSPyugmH1+I0uGyiuWqlFTtMsQVzOlvw+6JBTlo6Y8x/p9Xr6ODWzXMT6IxlRjfNwJbdY7NLHoMtVS5DzoYUQzpabOGBOCjJG/w5nUdBSCDqc/EbKVBZDbsjA2cFvQkm1qFFcTDM0FF1CKUIX+fhLGQy4UxmLJ+L0U/MSWGvrN+9DFpndGdItB5mWs680F8lw3X5UKe3u9/Qco7K2lJp9AVB9Ra9408S/MAIcIAPA6T3gDx+37HzeuVNRubJ63z8BoJyE/cYDU7LG2EsidvLFp8ubcQLvnufI52rxsSa+zGzPEBnN53rk1wJrhHoYqEibPEgp3I4HHQY/W1RvSF0I1rwRC3hQe4Crajq/FcPWlprPvlSikpn9LNB6+bCyH4ZQHwLVSqWzUKAQNWO3RVb+q3KIpTf41b9Gx0OWWTnqH0wG5TT9zA+YBAqi0N6rpSWEjshLGWF0KhpdAOw9qOIAPGm3ISy0CgZwH/agPzbtNH7NLwJqXHi/rDExilz3N0zoAJc9FqL/hPEJZcEAp9edUqW+NCHdU6vg+iUZ4gnV9RBB7KrQCNByDAKlAsRKRZkLdczRPHResycXWheHBvk/EFaH5Cr00sVdGybqGiaF3V5JOumg+EsCSMO3i+P1yi4uCCdYPwi2JEnvgoQRfeAFJoQMKd1vcX4sh+rjdqu7J4IpZElX+Gnr4BYLAeGyhhi5bVL8uTbeCi6WwtDCJ8gZTrDfb+oW4gYj9f55RnfKg3TIs5XUIsl3DNUdGvw0co99DLVNXmuuT8r6kPeiXW3d9HYfQxcIgoTMVTYI+xHf0MyENwvBrk/7jKMNqoL/108uokZKYMjloE8yLhpSMvi7uMXyAG6bgk93kX5KcdmPDzLjX6MbvtALaYLgwufzpFD+8kEXPbUaf3gXCpSzOaU9b26fRBIjS55G+Q4VkiG8nAwhoz2M9EFQLLaqXaC3Mv7BOsLMxYr+xff2MruzDP0mrj4f99LxXeA4E/xHnfDirtQwB00wZHIiQanvSzkVoSDMraijBC8biIqG2MCMhS4Zah4fIEgHFTiEEZA9FkmecLFPu6nsW3jYWWH50l/Nhhmzfig9/Mu8clnc8EM20xNwCLOZ+rEEeviDntsx6Dqn+ytr3VYqBg1c4lnd2Ka2NG284Fnxne6oj1HTVAO1gp9Wc+04/v/oCnA6fVDfkkJHiXbjrZ2f2U5yHDyFQfLgRQy/LBzxfUyLRRluWHRKEPRhOuDLQErQadq4fM0lI+E1T7xlU/Zvw2HrxYheHpabd/fBhTljDXZx3u/5KsX2R4v/mZv6jKI0SGskq67wY9UNcuUzR1XoRF3AjFYBj2EIHyelRc7mfDgsEnivL+OixApRm5DDOAQNl6tiXUcg1f2jAFIz9IhZnavIzNvLEpiLN5CMvq8qXZ+LNi3tzSRuPIIDY3fpQ4GhOnWqyqTk54TflsmyrMnkWzsmfRv4w9m1u1Yyb2DFt+KHfmkpAKcxY5zBmRL+fGrQWAUY3KSTSJ9YqekvWKHs56RU+mcjIvSfncJ3D4AC6Tz6bkRSiQnQX5cP+omp8+CSmY2gqiLeeqMlFDdVQMd4qbwdusLJNzhcCX9EPBFzeP+uvYQvSKfjHaHGVpe/Hl34ur6ELBDjdUOcx6uWKzU1Cx5e0DlEHbR9Tdgmo0tRgk9rd3t4Hti2abuhAAGcukuBXkLeLzSyYWqqzEgj3FFyZuITuVGubcb05zJkagc1gIvmRhLl5jYVZeY6GW13iQEOVhUpSn0jADX4mf5TgOi2ixvycU0aZO+O1/taqcuIfy/S4+VLOIfsyyj4xllfSVcbFiLERs/rvs0zhUD9P/iJr6oRZRt742o6avN0kZ7AvTg31hTqgvzPhqLVQHRx6qgxnhOjj0v6u9E+omkI5NBdJNOzUQwPz/uUpGGIO7NmsS/MK1cUBuVvChORC6Ofi8OC2itF/CV7moCShteLWHP9aGAzM7+1O/2UYVvYrwKz+pvv1bPvULy4KZHv2r5eXzf7A0mDc8SlWgzvphotJA/VgqbczYnSD6OHjEiolP5sa5iKqhS+Nf/ZbZ0ncdWBrKsTr34umSsmgnO6KiSbAymwprs0efSYDxKqzrCp9FcYLVSWu1J+SGpZgwn1EN0T8rC3UEeAT075nio0bV9MPislBM+c0kojrzln6opmgaWNoqUX3KhawnqlVlNbm4ZoUXwY/IMBtpJqjCApFHu253lOFd+Md8fAGQe1VcDdLtq3JcXLJgG27zW+P9q8E4v8y63S9+N4mP1ex3eRRv7fwAvhZ3yCFvfAIX6zvt2yDcVdykKLSTLQy79eOs9toEY3DrSc/jmQ06yTIqo5qoYH0f3TfBCp0iAT9ojDqMcAA69zMDduf7t2//3oXoIB5QSS1vJhBCUfDcQUCTLU4EmN7Uw6ovQDbAtB6hKi9B2Kcw0fDegxwtmG4PbrlT3Br6DbbGxfeA8xwxdlndGjd4X6PHxGHWVO2aTaNfzbaLUVpcJ1ZnMT+L9MBvcnWRuTmKe1QmPgnFrF6otqR1NO/R/aPI41kaxOtC3odsVKq5aAjYzCFl/AghbgPxcFEtJz2te6HdGg4jxdSOrgYDCAmelFES6SEq4tCKQJrRSwYoy8jGKMXgHqN+0cNnJ5AhHseo8JqlO6+O40jxGrIVdR6QwABbu1TYPqWt13k/O8Bb87GmnNbDZhvZlgvDOKhsFlsYoFwk5U42TvI+4G8FZHC5BH7CgES4iXO2PpPdZNwaZSVtcL4Yrq+5o9ISWBTYeDhN6/ddUv7/7L39VxtHsjD8M3tO/oeJb3YlhUECHGd3IU4OsXHCXdtwASf7HMcvZ5BGMLbQ6GokA5vlf3+7Prq7+mNGErazefZZzm4M01/V1dXV1dX18axQ+HlSjuZX42dlqY6yKk7e7sJHG2rosJ5jrcs4MmyrMNv0p2I6m+Nv3FfFGu2mKqpTywEVnuYTdBE/z2d0PHWS2iJrXN5ZgSlqrmPZoMPLFrBAPHBpt1ftX1G1uSQLZtapJZHGVhMKuYxp7vdGRVZpDdrCmelhWH2N5NLYSFHyUTbOyZmCGcaiBofjk9tx/3JajtVC7oPAtWxjTf0QzXjUPwS5YpaxOtHj8ZbIG3oMOCGbp5NEjnpOZ4wFz+gCICJ2BYTbA0hq2XiAIZv1q8dar2e+aUG/EQuyx8+jPTbq6c6GxTT/OcMsye0tfRdaekRnwGUaK67bn89oodutciywRPGGW+mvYoAd2b98eZSPPb3epJzOplkxY865EsJ0298KX2a8T4Mu072DLeSzoMMGJg0iDh538NaNsbG1b4M6mggJxsc/GwxwcHivycdKkG+R6hZSMCsZPhCmmqfD4x5DY8elotfjkx7Qq+S1hGsmOE6yvYQxSICrJ2IwhSaNj5X6OLosx/kP2cTvhEPNKqHkIi+1OAC7fq/fn08hYghHpJS8SFQ9mff7eVWlifiGQk6alPReQeE8UHQcZYoXX+bqHjUQ3Y7nI7A25yq6j/cYM2SOXHQTirk79af+7Z//JFauP6DAC+o+I6FAFBENtZJcYejnPEB7UlYy0m0ddKrarqwUwLe+LspBQIWeFShq0apuhljs3ybfGLC7AyXVTPPBHhd1wNyqHZv4t6ZJcTEup/lxXs1HVNZxQA8i9Z7BjXB68LSz61aKrzY2RVbQPsMo3GHDsyEc1xotiDtRw4l5KxAOAVQ1vhGzbQE2mkIApegTmT7jJ4U+tBfY9D7zeyBwH57qTvKyVHsLEFO1BEj3mmmUBL7zJx+r1Ul2gh1AkphHmylORA8aYIybtqmWXOOF63uvGX8MmEPSkHCHvCI+hiApHgH20ue62lV2AwbHtmuvAKwcNyEibn0Xwb6zUNZUASPHph5ntBzOfL0yy640pLs6MJHbV7jFda+1Ndiy08AmBoIQ8XsXcgvpwnwM8vOPxcWlmKWIrIxcmCkFmHOUqrDcbgiHsaaGiu0RIPtm0k2cOOEhq0h9vHXo0g7P9mliYtgvElncgy8UqJc7RnUnT/NRdpsP9I20WUIzYtjS8TbwzqF+z/sz6QQKL+8JBTCT9+FFAmIxrmbZePZqAtrKw/Fxrm4EUzBmGeUYYu2+Tdts7iqv4mvWCkEx8wX3nWu1mj8UoBZu9auqt/eIlA69gyvF26seFHcviiGw896Xn/3hSTm5xajHSbvfURtycytV/936a4IX3+SkHM6uMyVsKTFJyYxIQZ/9YW80So6hUZWoHZNP3+eD7md/wKfE/87eZ1V/Wkxmyag4n6orJehiwAFqDAlWMK5DVbzPR7eoUZkr6RwCJvBwe+Pba1D6pPz3M1UzhfH0H6DcUZ2RmHwCI09Tr22sitPF8Xyc7I8v1PUtTdStwW9ui7vJwQygZ4MX4Ky3n/0B1EZmPnoOaqgsQUywHmcAIUOgKprN4JKPRqqBqqj4afbZH0wXfbUCCSpW8qRxohDOw1ZqmK5aiy97imwaiRDI4QkFH34FLyFPMsU5MrmHpYi5tqYZBiIjG7GZeqvP1hueOwZsLG1zVvRhkJNyPu1DdhW80W6qe5SpAPv/Ipu8KN/noCU7LY8gKdRYiWonijeSSGK9vx3TwF2jMRoY5diBmFpbMEncSo0WUtEu6lFi9QVR5Hh6ghoE0qDv1aCEQq1U1VzR3L4sBnSVV1Ueql4BrAY9bqCdw+WKDmjvXWI1OV71i3x2WVIABr18k2k+VCwKXBzU3WFxfXuTDuZiR7bPO0vBgN4VsckwfvSQfI3UtXCjKsZVjOD4bnV2w5gDGobPXWB1hw0kCDHJHzl06Kglmppq+LzW9yZlBOU3pmexbjqfFkNjjwqNRXz/RhFMSHa1rUjUtdICw84dxAkdl5BqxAJLOORm9CBFtTceTMsipCO31gGuF1C/8zEb2LgwZmfaGocnP8GDAeuZIiCT6Xf2tpy+hPxFsabm5b/VsZFjADp8Dz4Yz9q6fSf5Jvnadq13AlFGn86ADG8SZOs5n4CqiA4uoNTkPQMLyUUOT0ywkrW1SJgOHQLDf6oltM27SkDp8gjV6TQba71AfLd+Py2v1RFrj1ZumkSA13DV7mOP0En4OyrVSXrLu6SG3CM1IcbsNVh37cqDMlaxtixIDuNsnLArIJWMBpWbR0nzJ6qmGumv9sffIEL0R+YALWyvcs62O46fVNtUPMn3enXoxSbLYFdWtIcBSvqTytoQqz+6A8V6StLLa72Ugzqfgxl5xYQRk3dltqC11sMwowQHoiCjCJlYSNFot7aq88V9rbWNIOzXIzM38Y1x8owcHesQ5Tfqq/uEqgNb9VlGAY7sXRePBFsh2gFcDCGrp3vHxgHxe6T+j5icJtKACmwLtE05UvJCcWPMV3AdDwYY1Pan7vFWy1ZHeJ9BG16ctt8JNIL3cQ/XnVpkF4NBPgZhk3tcukt8Xv/x4OnT/Zd7j569bIVDJESYl+pqMUJ5loKCy2M3f2+OvF4voTRG8EoNtdGDpcRrqtnWQ/Ud6F61Y1i6+ElrxRPQa4LGQ7u6cgu4uMEiQ+6Ygbrzj9WtC24Qw2KqBoE6SkJUd7nzPJlPRigqdZlZJErSgT7YckyfYGos5MbqUnRZzkcDaFq+S/Aioq4jY+haHRbnt2o2qIugZtHXaH0GGa3+N9mjnem3L0uGXic+6H7TwwJz1tylj3QYr8ip4whXAPB13kI8lHAwgEUA4mGL5p/N6FiblMV4ZjUKcH9GKOxxCos6xzs7EkJ7GMRx+iLvUhzhH6blfNJunZ3FxTB6puA4yWxO4tD/2Q/7p0c/Hp4etjppq88vODGiStmZpn4kwygF6JIUz2B06FAeI2cVXtbE/jDVumMn+i5+x065YrhfY5XRjMZtK4zJ4DXH5NqBQY/xQ9uc6fCXkguBYp1t5SiFQEY6Ri7p3I4WHKyPw4OVLiimKxnhyyE1dB/U+5NkTJtIkY9SIXnVdeoKTebOQVVt+14PRCCcgKJpC0HdwSfkcgGEXQPIa5fYXHc8ASPdsW/lj7hyIQu1YiD5UP6ITpQ/cqfuKKbqF1WGdSGPXVENiunsVtGySVwaqYQyB9ImDNpKPUK1rRzRQFuTPBnBE+hJMcjJ6wx1Jib23Zp3V4ncUhoKRdjB5Ff0oNnxcXlnBvLo5rcbN0q2vV49FbHT4ckE02v9fImbkSrTCdtASpYSsfGr44MuW122e7/8s3dRpK1ey4eNGIX7GA6LiReZ/ZtiKA0mvImavqDBFNWqB1cXp+WTbKzQZVldKvuvoyFxZ7EcRz+pRVhO0xHnnG+ovUceB2cRHDKRA25THi56fPhnrwLbxVfHzwXntrJ3HaYkyEAkr6Yjo7nQj/l4Vp6UiouzMvJKXbqT/nwK9o3JOV2+KmPlxsmiE9yTzoKpk1bJQ7NbsHsbTsurDaxihjiYJddZBXLJ+6KcV+ooJn5LPZeY7K+boDIZnz5AeapIviK9KgyN/YFiFjlgqYYFX8Trop93eZQvkw3/h0q+TBQEf9nYerixvbm9uQOu0+zKWGp1ALyYo15XbSy44pqp6x5AOCLvAHUAzdqR63jnW0ix2902xIHDqnbaJhHUxWPsnOwkYFpjni5fsFN1zxUTRIi4qMLOk2o8SC4o3LMeRUxhV38LMKFR0bNKCTMHnuuJOjwqPOrh7Hhwkg2zafHAbvZwHJM2Nmkv6u3JpSKK/AE9zccQ6TTjOXcg4/JfHnbkAegilLo1+om/bIG+nPHjIfNjzOKZEnSH5c19pvHnRw3T4H7NPP786D7zMLsN99F8XEB32YhJjGX363L6jl5fgNTB01T1YjZ6+1Dt4ixN8lm/26HN5+99ckcBTRDsSMlv1HZ6YPf+AyuVndFbHQaQQc/vwQlmaDWmROfl4Na+wSUYOTDoHhZAdN9ImGLs89tZfoIemAqEbFaea2YoogBaBxVuU4yz6S3wWRZI9/9+8Kz7vfnaFr2myWYqR9GXJ9lffoOPc9jLsBgP4Jdi/N9H+z+0xVi6CbDkGfBhqObYBbZVN0Zl3YFASXj6a+bbtRikIRWV4i+vWwKRrTcB6mKV4uJuHa7vEnyhScThCFdUPPZgnwD6cTroskIVIBJzqU5CJbCxHbfOOmmrthQtetc+O7a9hUUPf+fKM1woA9jL+RzBvYLHheKGyK37ttIX3kJNk+5kVfu7TlLNzzeq7ErRkmpTVNWcHzdHIKXQJqnwyZGBKvEM+Doh/mq1eBMFOVPbCzXyUUFqFIKcUYCVlEhCU3Xe3i3S8WqrjSWm+f/O8XauNmeOZyoJ5gwMd9Tnh+glLu7aFV5JI1rIp766s1JLKS2cde/tJL9opUmDfsoIb0YdQBoxvCBlQ8hpoMVUwuQOaGd4eG+jrX4PkqFjwiusvSH0eopnIQ+slOCtcMmyyBi/cfZJXRnCyJAozGB+nNuU39m/+zWK55smLpQ7vpriN7tf3QOguFxvlCKGSdXlNu9jBelx15/deJuOg7LlN6r+9kDXBY3d4C34p5xnFb3jqBrTDDRrzkXLKP7kR7NFiN0Qj2iLUdNftaJ4JwmVx2li1MI7EVVxKk+0HTmuMUt2VvKTAOFGqoL/9HqY4w23NG1M3uas7Yc6kmE0KvD4QSKhyFI0ERlfSnvy5phmHtKtua+8Pfj5BX4+W/bJ9ye1NUvvCdl99a0O9Mr2eisp5Ln+exhhaY28eCSJaOTXEJz4Qw49+eDmJD2Aqsh/23Jt+iineJWr/mAfolsRLha8rcD5Ocataiu83nzTHSo54iibXd7Z/ZWf6cqoFdN/mMc0W27CREPmE3UsdeAdbdPsHLcj20rrQlq9ybR4j0HfqYNfer/0XHfsJYYD+S5Wp3udvVdVvq0DSAypVssWGfmTDmNb4ADmLZ11DqYCsfBp0EOvt9Shi8+JJiobnYBG02SOQdPZgiNV9+aeqLH+Fp+q/uSXOR7vBNk+U9s1dxTYvES2Elwk9+aDovQMfOz7KoCQYQ3/8Va2FfV0D5+bck0Y1hqVlBLazkb/i2ylbb0S9AzSetsWI8vh0PZICiM32V3+azIqrorZTrKlbrvzKXusbG2ysRcovhcAirNq8x/Gh4L/Do1nV+hz0eTpREfeAjPRdxUwv8qnO3hdSc1HIE3I5X2LyOld3VJFJeA+7GZX01aSoG6A4VHMYgbxLkDv1WJ7lBbpjcAAEVqoWam/p9cF/K32vdioxqBcY0WR5bwSNzTnAlZhabdL2UW9wEV5J5BhDFoMrfp2wG7/oHNUlxDQLIM15NjEOaj3WyWkdjUuAR23bUzmCZbp9rocsG7bEPBt6n0I54o0X0o0ZgL2pmIueupj24U2dRFric5ZRe7dwXB2Djc+VGrCKBq9PhYxzfYx/tWOdUNpuLmkbmm8FuUEDOjCkcqJGShJ4AnXLFuvV7O6Ug5a3dpNiD51Fm/Ggx2jFRySZX0Nr20CoI/tf0ZrS+wDHY1CX+jYWPfolyUxzcWdHjts9Bl9rUALch0y89WYVBcDabRNUG0kE0aeROhOksT4geqU42f/X2vrt2Lgg7gBKRlQrGp5RpdxfM0H7wyMEJ0PXmhfrBo7qQWtkhY9s5saia7S2l0FjO8xwcyKUOhGkDdznNcNSOZ6y863pnbSYrP1veVm6XazYHbxynJWrsndhp9xKGYtZyjmXrZ2urWxEDStKClNzP6vBqiPZKr+8QzylrbHW84cL37R1D7NLsz8MeKqYJ0UvKKgLe6F/4FIE7Nb39aOPx+xlXrQFoMU7Q8KyQrx2xGNCkX8PC+bEQ4WWulF2ixhqee0ggCkp6WCf1bujc7RCtmsp1cU4OUoG+yP8oOBXcTVNA4f2wIwbgD48ez/aABgh8A+IrqJgm6aB8KIPGBTePyBDr1xfwb1khYo+b7+yoa+5TG0g2BxiPsVj3B8s7TQ7DoVhQQNbTz9h651pTgCh4vFWm+rcnymP7pVixdP3YF1NTGwxYSq3f3h6KTmZIe6YLZiX02LwxNbAsNdTKpDJ94wltDXrrpKFTNKTMwDdZ/zp0jlUsk5fm39TVSHVHV+8THEg1ZT+FmBHumOOb1f0km+1IdJ2DXDqXs+ET3bWXkdc0HQL5dnowAde6M6dIAVIVwDRGUI96euIlcT2BwoIuoSqIglYT9goQLUoPoJCcZRIvBqZ3TndZdZTe04u2ZYVM9mGRO4PT/YefDVdm8r3f6L+o+6cPz1YQ9uiw/SsBMM3O11oj7ucjcvgzbjC3dgQxHU4M9basgtGHzr662/1Iyr+nDGFWTD3fzst1Fr5YwbWShdTXatq0HPtibxvBvYaII/TbPrVPFAZ7MZTY5aXlW+g6usfsEVV5X5Qz4Uu5nDT14DnYLmoxMxT1nTC3A2SPGfK/qnwn9MJayABtDZCLqU7/UmAiXXu6qpt/UG6L+dbPW+3nRbVDUttuta2B2GgEHMNfH3lfd3ZdsCQtSyfK4RYl6ouMQL5aY3uD+k3MiNjX9e3Fjb3ekLi0E7LuFdsFPYHo/Ipk37L6Ud1NkN6NurjZsmJbr3a2cjr28i9ZRI2a8d8Pe1CHMXJBThvgoMr1QwwmzkN/UYH/wJL+terWa2Zn7TJzgaNzzm2eyK4qp7dsX+sO1Q/cRWQCA7J5FHS7X6aKDQ7XZBv6ZklwrrkmW+6VxVAx0f6wvUTbkcvc8hTsDIBquDN3wtIqAJ+rA6/Bv/sq8jVzDUqJH4mA+temD7Gig94TUy1PX9tpzDLGnWqBOFL9fwF+CJjDjQd3pP+4lNRvOLYgxvuGRhUkD4MrYpNHY1NIS7Gp7A9LtcjbVPvxTObcxgR54jhmyFxgfUVeDn7ZrkhxLwEj7hMd0ad718L2Z83Voqj3T2XzLRjCuCbPDJ4+PD4+RU0Zi54v/CUbB+aTG1afoy4QC61uSX/qF8LMUivaDWzv2Qz5BCnhZTIA1/3pZwTtVUHDO0cvwM08DsoyFQ7BWKa07Kin1h3IfF70DL2+slo7J8h8ap36U4NyXcz8AkMLNXCHQMUhSi7Z3Zkhb1bqr7bx9vduR9w4xVzc9JzdjepAg2MB552HDaERisAnNN9nIScJfnb5+BumbvEd03nnGvATel196bWT6u2NwcWnYJAuNWqyvLiub31+Y3NkTa2Hoje6f7I980FUCvXh08pUiteMU0rWUbNfmhTuejbQTcuAq8yD5J07ri9pAWTrK/JbtQ8PXMyI59PizB4d/iREP7HPCDhLwuZrIuMGEEkIUMbzhuZHUhZPBIEjfSN7sVGQXqx5Xkup5jSKygw2V2oGYtCChTVgoTT2vmnTLyUgNqJ+QApX2JCBHMU+ijDS8ePGgrlNBgPke5N8UsM3viHor7gPEEOiXgzJcbMA24kI1upHHie6pUqgO0ACSDu2lZzrS7Apg3QjT1AfEYJJ9EG7uv+UO1XTT5ToN8pI9zMpdElkOek1ooWEy2mhoaiNc9RcvxgVWo+0R8VV3UK4zMIU7aajyrdEu7pDW1nbcVFxH2VVxhA0PgQA9dokAFUYov2ks9SiyoRer1GrQ8YU08Av0JENOMGRSEYJQPx1D0GaOmtAEjQE2+pLU/nk1vheEyuTOiTMZ7wUi1EBLbNNH1MQhQApGpBtl0wM3RRRZfCaEQpFhdHaRt00cCFsAYCgm9iI20J+1q+GDH+nBTVTvEPuc1KT71PnLe9Vay7u31zvMZGBCf58kGef9iGsTrHD2kOYwESidqDnZAKR8stg0OzZQaM18NOET+Sf8yv4JEIxjW6ed3P+fn8JDdlrhzRZUl7IaXM3JaznSYxKNiyOkNHVnE2214kfLlctHWT3ommnViIEFBK9UdOO59K1slf+T7kMSmOfB2HEzcNR0xdi8M8Yovt7JjYL/AGdpzh87HNR7R1h1A/e97fCRI8jGIPQOhnFrNaH5pq/nI3qjzM17eND5K5LXdLmUkf09790/sv5si4zSCxY7go5Aj+32cBK3xeWAO/3uFFzRIk6yqQLrT9oBVaf0+5xj9hxhLot+Nk7egTRknGH1MUXRumra1f05FzhngBYUQw0V81vEVoHfBhmrw9l1w8LOrL56+vIGxM9/RNxjUdfEV7j5rd6k04ymtAmwpSOjtcqjhiUMT1+2wxBq7iywzMkrGjhwyHxtJxPN8Zuv75Ek26mMKItA+YEwofTjDa3ICCYomyVU+nsPVn5JxaG0dukbQ0/NROVFi+/TQWJbadwd0LIw9UtuADZtSbSWZXNCmY/sUNv7MvDHwC7A9tT8wKwOEWkSGciwDkWJmTVUTGigYhjPx/VZ/n5UT8flaf6bwnRvRtpe60nmppMkrXcv2VIsrddqQ2O0WtW/S2/Q6vUy3HkX8JkD/VdkdSHsVvUv5kkaBbSpDSmgX4a2bBYIw+b9kPbFjDWPiVhcdeiozxhQ7SdTGgmqRp84pZhCK9Oube3Dfqhjwdyhj6cMZQqUDdf0sxviZOt6i78JOIzqYKO/IFuyzUt+EKnAb3xDDnb5fSm0mztruxHcOVUVhQREvzYxIo7svPnbBh9XSwpd6VUtvOUM0cWdP3e/dZwfP989A0U3N5IpxiyO5StgGnW6eH3x/vHf8f7gdmpY6zV7oL92fDp7uH+o7/wWlZ9FqIQEmMU4QdiXzIurHTUC+9MABXBruWqBBLt7SzMGvFZrXCO245bJ0QcRgxjTzdsTUhLwsA11C6o4ZMda/5zjB5Tw+0mdoxtuY6EZdDCaNlyL/zgtXI525hf+2CuoMmm5AVO3RTq/XwgdRdJMJap6pIwRtvM/AU2ZDrxIQr1BJQxPWB7td47+XZTXr2Y56+OC8S1wRXWzAM3tW9suR9sOtkodwpF3DbbsaZdUl6cUdv5yeAnydgMC+9AM6608BqTrkrkCBE0swihDCBsxUm6lSUzmIN+f5dPQYJwXjihC8bm1KIdIzP80rvugS3LDexmKXv+O1k66WrWBWSq7EWz/HAEuoHqAbwq+hszpF/aD6PMDnzpBrIaYA/caxQm2W/ZtZe5JRsDTzUE0pM/B79wrR1mt/t9Nd73bXX/9/v/TerH/R6RUXHWsT8F2Cde3TQ7eCWNFttVo7yeuWurqgQz4OwDCpMcCLLYghSf6DGLaBQzZ8RimKdNgT1lxbCodWYM8/S5Ba/ntyQUujBsPAWJLu304uvkOq8BqdvG9oVL2PNzoaNzSajOON0CuCmwWN0Ksm2gwdmeqaoWtjtNmPs6uRhjFoBk6lNYPl17Wt4EZd2+ppMa0HMr9WhGCbQlydiiKDt6rEbiD97qgfHL9zN4/YaWoMEs4whrItcG1VYm3B6lZJCzMgJngHiCtZez16hddRnr/ubhvxOiTH2s4NHwjPryhsReWzlKgGGNoahgdOLxVkBm1rLtzquI+itKl5yzsQgaByXSB3vJmJ62JfbcrkgdoyD3bMNTyctrfp1h2+jD/n6vr2btftVW2Pxb3aDbZkr2qnLu7V7vUle736KrO98qfJQ//TdfZ+8dhy9y87+uSrYPSv3gefyiVGl0xkydGBRyzuWLCZhf2qbY9xoRRhm8d1VG8cniT/My8gb0j5Dot1jChDM4OhP+1B2fc/3YyqG//bdBa07FcBDieTmf9pdhN8+kcxWQbThoOuipAsUVwyh/AimGJhBfyodstBZrn0IuDiwbDh/3yMe6PserIUyVPNKVWy83I6O3n4auLHxjw7u5gXg3SMV8l0Wl4fDISYm02nJw8XvFicnT05PD6hnqvX1N+b1y1syiGCvOve6p1xY9Hd2YCzLjZ1Z2vfXIKiCmF6TXN901XfsAIUdhFBrHZxq2GJm/hAOJoBwmqs0aWCiBBr3rWs0huCXOloinCej40TEatO6OlMp4F5xutmsXpvjGpswj2ErOPASI3HSTB5eaWHQZ/w0UiXhmknQMe+iX+pbdZGu378ov75htDOGjT1ZX1dvMsSros33b7tmzAN8fJNqVkEKuvggP31LYsp1VcfiuVgnRjgTtzwoU8VpiQ3igkKDDFEyx9Ww6DWYNiFf1nJQrmhu/Avq5sIYvjIv9J3Ggd8vnHH4TfgD3vTaXa7Q8BIZQ9FkHFJ0paY6QvVvCYVeD/KjUeYjwnfrco2VLUwAIZuHIn7eTQtLyBKk6PUVPR8hMTOezN03GHHGTYC4T6ecpcQ9OISTTFsmDfYKEe4U46atgrzzkGOpLvybpDbDR7KYtvAhFz5GD/Nt188LRDCvavsH+UYOXDUURlywoY+heDz+J57qGp9hMKKydamx910XaK3GjYnqIOfe8LM3JQByXmpb84Apuh8MMgH8NAYGDhh6MJMhy3AdN3nmF17WF5B5K1x8nM5fQfH/BHEElXCfks8isKJ6r6/mtVnIv7evma7J40TfuYMDRqFzZz6EwuZChWDFWefcIaMGaOQdzPaCXFQ+NhtpNE12jb+VO7Q+OhTTq+yGeUbMSQ5hvQhFsRqPiTvvdbfzgmN6KmkakGQS0wYuKlfURJkiPgGc9XjIm6yZvt5ca73uY7DKXszDim2q6SHJbv8PYRozfckslUgTGPV4u93mmerkhegfpnCWw2O/iUM0aGRdkU11soDUugz4xS/4N6ACHEUCBKNPWnoXQfPVT7TPFZiWhF5XzGk9EpbCJ2/PXlob9J4kPNrWjk2HdizfFlWXpC5qzpI6cjhDdPrFYOzAi04P4zDGxPXdrFu0iBz3yIGO1jQDTSAi5rj7p3gAQQ9yUNkYnmINHvkjjHQKO44iJEGlimTLkamBlsn1R8jHQb9ozFyQepRFelUumZf21hVGTDaFSzWuPqObmdeJnB1IRgVLTN9JjmEl8XIIo6YQIXCqJRbsswhl1S/nqDgQgVWeGEJh7u75WTiJuiU5l9YDK/veo20eOrzr/qaIGS4pE9Wq3BMH5PlpmPUh7m90mRuA1WjR1E+hGpzG7H1O5HxCPkmOzZ7VbQ9ti7Gf3WFXqvTfVsW43brj9vPTPwGp6YJ1gV6/t2bjezqHxtZf9RK8cMfH35vP5FhgRofXIwAXkUk36F3HLtWg2ccPfhearuev794/uNsNmFEUBqRZM163RE6Ot5XQA6zPnXvfQChRp9M84EiMLVdqwdk6ZbfFNUMQ43+/cfjbf0Ayz2B2itsp05WBRqnSEUqIT9icupbW4N7VDnJnVVKSV7fNbV8Xx3dmA93BQwnKN5IrCUz9ApwMpgcBpxlgMJPSRVKAAn7AoFZH6kbD8azfDpWQs3+jZJ/pvlU9almw7pIChkdFSM0vN5JqWfnHlNG8fj3p+VVVow1RauT+IE5iU2YYvKV8uvK1VIzO9g3gwk6cZpoAQCqxdbEkJF3CKKJhdp3HjrPb8lAjCNA+8Mb4wk+LRMtROj7tdnZdJU9LV2BFsRdJhXnOLMOEpzm8rHD3uijL+m4DTx5x+utdfKwZduLspi35cOWc0DS3KPsqt06enXaMoj20Yy7FBJ1kkxsu8wGg4JMHw7A5UxYVIYSo183br0c9Bhv7th5S3eD6uHBmPRkzdDcnGdV0dccHc6dE9vy88fOGjh9LtMBjxrMZe9RN3ub3XTP58Vo8Or4+VE2za4gt45bs5W6f0tpYW/v1fEBmOGgvaP6vfFSAqOBjk+x7T8B2/Yggs9nZ3uq0mPgeOr3Z0pWpvgzj3/IlThR9KH0Cdun/ens786sH5PctoOpmmBP0G750xkh57EUrFx80dDVw4IxhlUFnh1boqajxeHhraPDE0XGiKNU83AhBCTtz/VhQFTtia3tzTRphdykxTJrSEy4t42DS0x+0Hnaf8UD4lQJazvxIegEeaIWdSfZ2CK7Q8rwzDLNneGQJMjx4RPpK7aFez22R0elGaCUjiUwSoRTBswO0emzjyb7pGbBGZAaR4phqIZUS6KZJS3AGIzxbiHcXk5pnqIeP70exkfBuieYDEKh7avkTxQ2hYL1waftzc1kY0NNCu0zmtt6jZOvNv+iTmIOFW4Y2PhW1QKTGDzmIHY5oVxQCM3DVzfbo06tPFRxoBQeKS4tqSuWoibWXhtNYdcjJrKoYM0agmU8G8ByVGCdRyGpNKpgJabodI8HEj7wMeqqidqMOdChoOabmbWs2H+fjXbYwsSyZe5DVbSOjI+MhgIDDqhClx97oS9qthsjSPuvKTZgUSxnIUGPs3Zo59TydQdeF379j7a95ZTcjW2nFtngXJM6kYDV7HwjdnaT45zlHkIjxa+wHZj2LOrJXRsYBltyjy+YHbZl+v1wnEGv+ysizOIlihbDB+10ad8oCCYRRUUuN3rSzlkhz4by5545LF9/TYZpoWmBpvS5B/bk5SwbdVj1shvnFU5nqd83qoyS75LWswKMTCFtQLeVGELDPx2u4i00KMtcdWfHV5N6kmWgHG2SLWO614t6JS4V2g2MS5zP+FD/kTxCWhj9fTzbAHPDFq09XurFIfw5n09zCJIwA4PtfAAOJZZrxbsWN96kNZmfj4r+Bpwp1nbc9TFYohcHBq8zA6+DAM9B1UPOIGfpDoivBG9Tp7XwHnKaYRqYaMWmOaiKF2BqliaxpnU+pePWLDnHGL2UF+QS+6y6IF/cUipOICyw11LYUVc9wM5IXQvP8/4cnqWvbcJOBZraNh165QYRFJwG2h2ZOtTqcZa/9NwjebzNNkTcxCVse2hT6Zb9oP91n421nxNtVG123nEoX81c+Eb4iJ7rLQ6uu/ISpiScc333jyAtRTmvz7sIzX15hcyysAH46NYytSF3o0E3vTLEurybKbQrwNGmqJVK3w47Ka7ryOCuZn7JvLL8OoGCqNWO6Xf+16wOw9gd+DgmFNpqEhDRq63jPOMriK5kW1Dh0o9w9mFk+Tb64e5D2hoLBf0CfO9+8CmdUPABfbCBg70VWySTeUpdml/9jK0PAZ19x/vkxJqQBWpdT2Nl8iHdvO7HnvcRltjz/prNllvouBf2gBuanGm1ye1H2nteg3Y+Ks/x+Ho7uWjwN3Xb+dzJ7zXaSneuoUxipczg9Ivf+dtCCNnwp1X1Gx18keoPgVlBzIwgZmxABgPqm/7T3Ih2SB+pv1sbBPl1lFWzF2xSBB3Lv515EQVM5tUlXISKjuA9jXsfOPeoGGDsCfTvMtGGw5yDkR9LsiDtcdzaTV/TJ96xkelxtNu6t25bxwQ5c6P0RuqaIZeIpmtD6jbDeApzWgZQrhiDVhfVtfLhNmMK4HUfS84AvaTIAg2kyHqJNKzoMBughxeVTFhPocyLf5CLYIB93QjhbWqJxBK2hXk0NRsyoGK0UXbxY1b9RCSs6thHrebYVOXYtole2Zp6tomeVzGgWpNbxP6+bg2nKoMNUFtRlkf1yTBjp2IsHzWbDkXhFnbMtUho//q+KEfCq6sFIykBeSwMm9T4yAYTYoAOUGlCHNB8hD8bc3oJDxBYepf/a08fXRI4rl8htXCVXacoN9Zi5jxTP9RA/de+Br7WsSLetFJKjd5ZXB8m+wbytkPoJ5z6gkZqrfx2evlsQxNxpMHvm2/76Iyb3/TzXIllqqfian6V8IamfHsKq9FRjK80/xuakdjLABGheVSWt7mAeXgLxKLqafK4lt+IOJ3mCNcbapt31DZtqVO7o7bX1xMZDEoVvi62QRhLki/mXTXM6bS4auvvroWTRYNoZ6qa5erCEkWDU5EKzdkJ8QhjCcYWg6hiWi4TAcVMeejvowfC7DNqPhlmGMXppFalhUsBVeigkDtqGQ6wCguYkSbiI7GAaCAD/SDI/D9kArLEYQKCC3CdXbcszgZW5gO1DWBUaCBWJr6Rw4nrrXwwRhFMOKhyQDnZ2N+9sW0bsU63exhlCHOcANLNEfStI2iIJwu6nepoXEkbZ9wv5+PZG/qUin6T1/i74XIdZk+Uh9zjUNSMJE5mVsAi3R5M/ttlaHoVitYzb6X2IN6xv6YOPnacv+5qlGXuUWYkoPh55hT7KUztmaar7criKEHXUSetVSt1DK0bW7krwCeVwUxz22AB3YOOqMsy4GCP+DtEHHXVKmedO5CzKSLbRu8TsCauuQvVCpF7kNMW4WuyBa0zBvVbk4AXPrc2m4QusAl1uAHd/nz1kzqB2rSd2cOE4HBUVmcX8CyuUCNM+w6iz4X26W2xbaEryT/9aZHYfnY2eB8NGotNZS2hM0FLT3zCM+e0sSXT6Zee/uSbx+PktO3kxbQYWMvJ1rqxeyyvSeO23uqevXr5/eGrl0/PTk73Tg+enO7//fQMiFKNH1NxLhjm6YcMhP/VfsUwxq67ljEK8M18PGIIDcibbFLH46WW376+vm4Jsl+l4f7z/Rf7L0/Dl9tlTFOXgpGpZkdQjc+plhvrQw1xHT7mOHEsMX4MvWgUrzYTkF3kTaZ5NviuHucKbR2X6b5A2rcj8inRkMV9S4xyka8cPwrlOMvSZK3s1lQf1a6KFICLZ/RjpG41ycan7sO8dMIqr3XMSvcSRF9DpWjQLJYP1OnWkf8iMbgDu+mYIsirBRloptFwxXVW2ObIXkkhsvaprdTXPthQnXrQdIKdQbXjw59btkaENszHdfX1mxlQ2+MHrXXd13rrwbeirnX50ivr3HGcrgbffjMo3ie4Cx4/6M+nVTndmZQF2MjuTsDQbXyxkzya3Ow+SGbFDCoxsdCTGpgUY47qxw+W90Jt/9JqrdN5sN76RYl162oKKXy0M/pFsfAH3/79m54C79tvegpQMcO7EC9mLt+2pBIMVfiQkaStMzcZPxZXAYaxtzvJN7AFAb0Ii4JDjQ2fvk3ikIjxe7Ppty1TAJyDFOhUJQgut8aMASuSrbmIO6i5xjdoMoFzwk8KSDUQfXPlXApgVrezYAv6AbkVjZxcltfPChNn3QR75M/w4HFgvEm+z6YGPpfJuN1EuIw3jlV5ClhelOfFKPeZUExsE7XjIf+5o0gDB8H+LqtneGrqT8pRGRoW11dMWv/112G2lf9lyf45advi/nV2t9ZW91Exbjl47PPYdWDJutdeljh/iN3/cOGPwIUl5Tex4Q/hWgF7DHRD3mD37DaOB/cIOefE1mpJikGyNblJWutIleutXSI5CK+Pv6gvD6K8VPUKPRr0Amq5e+5h84+7ySXHwutuqm2wmyRgWn2BpmMbOOCOHfjBt5p7x3j4/5PnZcIH1m79iRXo+JuPrF4P4mxU4D4zzbMK3HPU/0CDCy4kJipWgaYzGFaPU96ALU6/HA/Q1jhRd0k4y67zhKyj8puCs/hg0hBjlqB4UQrJc9D6CWITXk+LGdllG7PE84zNqjKK5kUmt4Id40xEj0bl4ZxQKxzGNnEMnDYuV7yic4kIgVLaUy6BLVIQwcxpztfTbIIJDWzGIclXV2J8ku0Fd5Hg+QbvRNIFEppEVD9mOYOoA+Z98nJazmYQnBqN5ar2r+pMK6pLsC7ELzuJVeSj8OL01C2nxcWh80kd9o8TcziC9nO5Jm5itYVt2nknMmEpXpXhGO4na82+EECpwZMFDELNkP6Au7GlAfsx7eRROAqViHWOth3ak9dd/EA8oXV2pXYnqLzRyWTomJE6FkZk1xKoHV1j2JdaUow4L/lmSWHLtppBIt+ueAy3ZZ2GE13Sg5rGS4xHdWrEtb/2UUo2DBLaxNzZnClZXAUGxrWOa/7gpkroI+cuIywOLuF8OiL3p7aFuEMht1H+IDN0UEMrTnTyMNYV6hCxsyKiEcKQ8cNb4UiKKw5ul0W/kBd9p9fQJexZCc7Dk3w6u/0pGyl6bnCJciLCu/SLbpCPczN8XPsWIGvAKWqelIot4hjkwe8A0fcKG0HwK/tWzk6bwDDbGTc0246tOejmnGbwIVqzesgOP+oCbK+D+mPEd8u3xq4z6GPbalk/jn9R2ZxTMbxAHQDSuPBZI280vJbTA1twbEtCy58MwrUJssg6HJlcrZ977KYWr+z6R9zVDhXG4qkdKFY1PgzbJAqTRDXvt9mNjZivhJCquBgDTxAnS3Bi7tRm94LW+YACoUXM7vVNEEPhgk/KQIZHBHBms/xqMgNAIBhHBjKckn2uEsdyu3pIQiDzJWRTEMy/nXRsVxIU87t9VwQDkT9u/6W1fIsOtvjrCi0SbLFpW9iXoygmXuq3Fn0+F4kITvUGTdWcCh7PF1Uj7F+aqWpjZ0sVFOXNiIhxn7j4woOQV1Ts2oi/as/GfizqlphfU1AxW82GFqOfiCLCAlCnjaBdZuGsCzjmVmmMOkY/9lJlIpAF0DSHIbMzzZ010BbChFJhJIwoR6sDLJJ2wfBD9jPkxSnMiLFDtkEWqySLRRgyOwdn1CAimbPebliyAD/NIcoMDusCldV1EoQrMz0telWkH/Iz+ejBy8Sy3uO1ysxhyQBoAbI/LBia392dpYLYybbTeO7Ztmw9syNOL/xga7BRfOERPNvFFx5Fs2l84e0BEWLPfkR6deLrxSla8M+XDgyEnx02excd+8LXTr1cFuhSwogWceHdD6DRHhapOXJcL2jveoLB+PHYL3Um6aXyRznpo3yZQkhp2t7AfaukuJdNOcEwQwd4Jk7LUcSkKXhQnt/Iy5se1ZpnZKNCyQDRzSqHct3cdkV/uEVzkbjFbMAl8lP5ytY685MoKpa3QPH0S8LCZAFOGkw/VsRUoFZesBQfZ9Al18lChXLNaHBCi0bLZ1mbkb/OVB3KgfSYq+/KiS3IHnYX3XFL5YliOzSqUoz1dtzafhjxdl1+63SSeMIo6f0PlENKjYPK8BxJoysGgFwxBGR0eCEN2Wl/Hla1Y+olzERMlXYLrAMhldtTPL1/zEeKls6AUepQmtaDVOEFa8OtDzhojSag1xuXJt8rXo8w5Zi6IoGi27p8oz9pywPOl+/hpUlTjxpSSDF+3ln8Lwr5ngZV0FPS5ty21YvsxlHtZRjZUzTZFOt/ld2IEtGFqFNhIqpoc0+BK4u1paCGz4N9rz+bZyMngimTj9GqRrS7osDV4TraWA+q2n6iFb1+11z0bWxYnuBPfn29Vol+fQk62raDSddZEsDyVuobuTrSI8GpJkaV6l05VEfWmNmGHsdilbFBox8VlnKrfwNueRRzrai07bWOs4LGpAy+2iKX2fucZ5VkEL0sxxcdsrtWff2t6L8rh05q5ooKw7eCO5sjSDX9IofAVe0v6B7nyOdnP+yfQlqoF6+enx60OmmLoua00phndMpcQh1UzBRsuCVmvmooyif/w7ScT9o1VQms82JM9ugcqQejbQImdF5otvmld3ff2+UFhHuaEHhmwYX7AlvEYZ4LrPu8qGZgIGcDWsRYMof3aWwpma7C7mK0Avr3YXa6p3YznvFM0YT4G64eUzeH8l1iRKIyN2dIdAXuhfz74/3To/w3xbbM5qgFERjqKKuqfHDgOliGQkhQPS6ORHqt68FAo4UNWaj7g4l138OLg7jR4Ed8wtcHd6yaFzXMHkEuCHRjeg9ihNbWWlf/6MeuDgnw2tqcx3rvYuqg6Ry4D1CrJkdDqpEuY/3wQjuSkd/09eab5tb43xiRYXwKQxo60vrjx3CE0zP50aU6R37IJsk9w603hmSYcOdWNJQyezadpq7EUhMUvNdTVTkYWgZaNJtZRB0GPJMuFCVXcyV40EGZdLWLGCi78XULrgN51r9Mill+5W6F5zoIAWXRrWFAtj6HaKljVHwJeYEPUl7UT1Sxw6fpfIxpVhVUehmiUfF0b8eUxk4sGiWbqpL2Ly1/Atu/tDowCMV46rosJXA8YUFAyWDwkAhOOmotCjCPwKh2cRO1mEpYfTYWVqg4h7/0Quw6VUjIMXI7f+7HldZcalOGhGUYhS8feKU8sx5nRsVgE1aOhptGSKU7ibGUt0Z7FVpsBPEUAC21teWNQu3PFD28vCwmp5oZwQbW2s/9UX6lzqZdj+ps9SDnu+jI/B6780ds5qMW8zoXY/BRgxgUFINIDJTC6GJFAfLUCtxCivfFQN1cAgWyJjhJcYg87/3BQkiaRnwr1wK6C6keo9vtOrUcCC0a4Xg9Oj784Xj/5MRvwPN0K7/ce7HfbRh/kRUf5Y71Lfnga8SaT3Qd2PPp6dzXqk8C0mTZZ0nmm9nAjA64AVNN5ACtdVqg9RY2RUPMdQs7f472ODV2YGQ/6prTMQWzmRjVilzzmdDA3hrdDAM6W2bxTw9P956bQI4Ni+9U/HSL/ztY++alX2atl17q2Ep7ipwlFvHpwcnR873/w50ag8Ma1H3bYIlIPhDUD2pLabRO3KrvfqeP/kZ/Py0hXHr85InWbJSxllMpPpR3ruqh1VF5AZJBPfdo4KgEUfw4KS7UjeZIUXj/Vq8kKo63hdS99sW8W3aVKKsqt8ttA6i5wamfPsa1ZMwJk7JzTM2SXGUYRx6VBKyqlPo0EjteHR8IECi2/aGJfucEBVtB0qFXXe6/TtaxgGjrPduGg9S25SeIGHWgvSV7rY6wqg9Cjelew5cgZ4qsClVIJB2tcSKJmAbax3J+IbevdWwUssPz1EsYj3S2EAD5pFxnX+iL1v4ggSFgxPLwMVkeLtF0aeNEuG6OkwJ3XoK5a8lQBu4no+vstkpaHMR6gKXdq/J9K2krIT9L5uPif9U1Vi38kB6lxdKZ8SL7MexQrJkD+d6j7qtXB08x/U3rjOq/OPyp5U+CqbXZstJElulpvgNu93pLVg+1kn5sDBPKbbBtoN0g9hwbidVFln9bGWJppf99cviyS5bkxfBW8YWOfGKB9oeOrRU+9DQb0kSDAaiOIHc6K5tk/N9IHftiZh7slzLbgsS2xJvxfpZEPPDN3g5jsq3KkNbqw1ZxqEl9VXIjGd05gAALZxTbXb7GXyka2PeQyem0NHd6M9Ku01OD29mn8jtbi/X2OInVlKa0SkA0MsSf/pR8Ln0M6m53gTtgahdGIFfbQLYwIjy+dQFVCMs7VGVwRJOkJoLHmiAl1GijrQIvin9yihWlBT0tJ+5ysgIVxqgwCfzoQJ3a1cEYrZTaPt2m2EW4Bwb5+6KfHw6HI7VOq+/Bp7J5/TZ0qomd6DEpRrNjeWmefBfln/AeOl0xxzxmMvepiYIbzz6yHA+o5QAr7f977H4ZLiu281fb9zV76gM30Sq0LyIuBHT/IVRvYwLfQ5lUMywojK0OqQk2R6YfjZ6qQc5+KGdsoYeNzjQJpzTxTiL0TGcYDRg1KOoueGf1M83DupFGErxOTEmLleotprDEiHIC6GiTFHgIF+c3ZekCQpwGsjIH3gELPqPNVFLC2cmrJ0/UHS7xYp7sj2fTW3cHwedodTcEHYxd0S4ZyjiOQO1dnJ0qMb+uJ9YsVdG3rfI4cfR58KOR0nYZZvCEbeBHHLQl3BFCjiFlqOSSOCtxJ7hp9nHjzBZMrGZePgtWNMKSccqisc7nMihzSibGqueMHnDRe1A/5+70eslkqrbWjUMvp+UxzT/BJHNaETOEbGw2tAx2oI6Nz524MmFz86c1J+9NpsV7xZsU58defun90vNthXo9Cs7e9deC1O1gCiQ7T5sIOXVWLbkzrlYfc4hamnEeAlY4XRZyCuQOheDf6UJOZVjHh7LY2AmhOWusTO4c/yAxr4r1R9/uqsibT57L4UFN0/YUBimhz4fmgzHz8AStWUkXY3DifI3xEeHUwscFmFVdZhUH4G22f55cnDw0lW3zCQ73vbrYfv3VUl3IBrYbUBhlyFaW6cPUth2AMfXf8tulmmeY20nVts2z/mjJpiPb6Hzef0ePzgvbUVVqyvxSmxjfjwjmLvUD+WlKiFCmf9CycgoJFJVO5N+gKdXV9tjtg37p4KoEdx6tNABeL5QOYyVgqN8reAvVOj2oEnef0vaBBQQWHIASsJ+ppcTv779Ksqt/YD24U5ErIEMyxliEqpdi3B/NB9Sgeuj4ORW2+9llNiOoyBDc7IePoMdboMX7cB3ekho8u45vpBvbByjyPpoa795KvEUqPB078iOr7z5AebeC6s5PEeyuTLMZMURiiFV/rK1rs/HtNcSAaLlSpCCSOk2hFJI0fvmfQYkC36CkCBU2xgSPrr4pXgcxJsDHMBuRfuQ8VzUGsDh17EAbPC4JIdhZApPAVcatTXaExFjl7p4l1mfjdJqNq6H12sDj0LwZNGbMkYY6dMg8gF8fhKU1hGxMRjkiAPSAlum9t5P8wuunfzkfv8sHL4DP+vE4V110kgz81J0yTvcSaTw79v1G99V6q2BswUKoFe3nWvifiwx0nhJnml/leHsEa08MGAIkVA6HLakMJi0NBmY1Kgl3zqKGXS+djINCAub9Ihsx+iL5+tz+ZHV/s7ld1bbjEYQbTnZVCX32Ay996YNkJ3nAKUyRa11kE2sq+CA1zTBFKtYGM0hZYPOlYnEkZ6pf++Ap1pSfA2RDjeCjaICmWngIQk0hOIgqEklQy1P+u5KFaCjwCc3En6KS3VdQJ/Q8MzAq1MYGd/mLHJ5JHRqtuDkcfunpD+U7K4nerpjelrQf7tPW5Ww2qdQlGl2ArMQJ7+CVEkbRzDS7hlv+lRJJ9HQ8mdwX020CHStzOzK4SYlzXRG3EwK2KUOBmUVnwx5mbPbOsuEgKUkGkxpUPc3lxHzwBnHeeqdTeHDGhVUbTR3JK/SD91poKtF+Np+y8/i2c/ioz7IWsO5YNc3Sd93ZndnmhgViGVk04a+dhYzjXX77IErnez+f7OlbzMFA1aG1MuVqUeBjf2S+EAWojzFSeGDWXlUI6OCBTIqoKsiji6lfSjTkEzMTFhzm7qFVwgcDee2Y9Gf64c05uArHV5Ki9c3HM+kZvmm5u+2QIqPCFV/6XUF1O36DQdBqCnqKieXYOXZCOL0PQk0ntfXF4GUIZGiIJLxGv2irNkZ51+tJJ0xpvtIyYxP9BfCorxzEXUyVF9eLtN+ESIx0ZBYi1HtaqMUlw7qNote2DrMoyAIG+aMkhGJwVA+Faxq0Zsc8qh80jGfM6rRZTdZWY9cJoqdDtlK5pIVO1NHW6Z58AUXXvFY3d9C21eZ9CyuKwMsrUbHfk6Jn+WTFK5joi2VQXXBEsS6IG85JKxbvQifU0v1HQPVHiMNdjzOYQG04KwMA/7Ieax7XiEt72YNQOtVFcbNf9MLzkFOX65dGElvgcdBU5/p1P1Pe3y+3Ns3qKSzJjr7FjMBe36K6W6CkoTHnFxYF6VcymJgnGTvPhE664YXsfzdYWF9fcSQnW2v11NgK1dpSfJW4SKPU63+dxVJc+EumqazNZNaLsgZO0RxfLGoYrpjuOr5sulSsXdD4g1eQT9jU7/i3XEMNQzg73tppHOX+wgUYOIuGpFTVvmi3Xhx+f/B8/9XR88O9p+bg22p1OklDYf3ZplmQPeAMy/G9q805dKX+o0Qwen+blFVVKNaRbGwkauXmo0EyzsFV/BKz5Tr3E6v6OLvMKiecUPDsKOIO8eEinPEWnS6Jx6ZDXxBWbcjg9c5grnXR+TTP3sVZsnZ9sa19aXRoFAUnc5Sa5Xytn7yvfqqJyeRXk14qDdXASXamFUT1mi5zaQDN/5zz/s7KZA8UPHus4KEsy6RVkC7kGergOEpsP6OIlkkGT4cTRdY2ixwEPaBPTYEKvFrglPI+G4nP5knVQF0M7YPAVHtA78n80Rm7ADP05OBGXvQCUpoMpIuGui3CzzPWsLWM/5eQurSvTExFFk3zZrS8gYF0vbLoYReiro0gRVGtdNG88HX92cfrMwyieHaGaaNqqCR4r6/LhhXvQiPyvpNo7DS+S5vfQWCbHRjnoWfFqNagebnWbfdlK2KB4TIbhxtKChHVPNHs3kLgyhcY7+Z0JE/Y+muME/FqMfaXPoZNFA6FYkuGDoJF3uPLYmAsxGpPmfvjclVU1mByWUTGjhRtcixC14D6u/ZUGer6DWdFzclTv4rRHLp1W4bS8nlvvwT07r/tnnUosb2EkPqRNkaNggxgPPybs7z1oPyk0+Itkd6urm0NdhdmuTOAynhO+l1wQJE75laNweg//FsgRp5O5xUYDf1YcmSeaBQl7SzeIJW4Nbtn2jzCHaD2ZIvB0txX7YG28hOs1vSCXp89ycGP9fDk1ATujWc28xq8MvVtDYxlhdrjltTXtnaSltXXttLWzUZ29Y+NrD9qoYLY6HTsIyWGWcmms/AFUs99OOP4eo41CWm101DcTgN2meqn1zRYjri/vMcgrdf4ylzUWl7FXO0c/zpoADWXiYjwRF1QZvnTYorhaxwDrEExZXONsdUyMBtm2hC29IKXO0GM9XfnnEFrQ5wXPjGNn51EbjhDYcJzUc6MdSY9QRqWVI4V9DSNSCdqEq55rgR5Ea9cELtrCAHvyllXbR+DQIu1X/sI0w6u4V0agmmRuWvWFqKUNL4MFdXRDxjiA/U7bYxZG8nfaQw4Mc6Std1se7ac3aP945ODk9P9l6cp5NkQS2HASz6EoI5zyJ2S/0voaqLuJtk09y3J1PjStpDcxNRHnbLRmNxy6UOhn15BOy2e/Yx2Wzd/R83fqeYFvqok76TiAZpR+HPgDe/eeDIFwGSKtznWuYI6FlkD6lrysvMVuNEL0jGI0/bZm2KL6qWqdR2B2Mjaalu4TuhJhXvJZZX3oC3EDuUqTj0AU2drra2tr1PQBo+VfsJBl90vPwjmseIu6fVAZVJJRkZJcILoNGxTONADfZw9RmzZsmS2Z2LVyNLcXQHCk7VG9D2TmJWLaItiJbJyLMYXJuWNez6c2PPBvGEjoFWyoTvZSfDR0KH8Zn7+610aBvlEl9JieqwD7eZdYvpuoF2oNSqIDbux+9XJVORuDlyYwRPef1zuvmvaPfzayelCNz8v8kmMYdkRwmcpHhF0nkX1DNXIbseiwnA+Gh1lit4ggdnrZ2+MbIfbeslmT20zYBrI1ZJfdZ2dWMM0IdCcQvqU6mF3nPGtY0MYcHUVIUDckKQcYCgAQ7LuE1Bts+IuL7pL/x1PfcnFIkc+WammLKsJdqb+dDmaU4Nsn1kvjKwNmU3qcDhVyiE3KaQWFQBp3JI9Z9LSJo5WAdvV3GlYOFHWUGzIx+gNGz//5LRwKBOULioaZLdR4YCeFrJbudE0wdFkcCeIjWCqh9sAyEFQflDTbNA7bfXl3tbW13nKu/eFAElwMQhPLQgrU1U7HF6cjHpPhZtzY8OZHLxT6vWVDloO3VEm88Dfkgih5kz0dCGWtGv4iq2AHexGwPCkLMXG4C2Ng4+CMbKifH1ZTIbT8kpRs8l7p0M2VlAPz0AcTAZodNd95QXhTR1ZhVU4xzEGYW0UgcqxZk46mQDcvonNFO/z4M7glEbT1IrSeDzKT3mbRVuSslbqC66rscnSqUOOmxTG1tQYqZVpdnsfG/A8R3ddIINMeIK0n0TLBeKTjizIGh/sbss5PBaCBMpvcwoa+HcMpvxFleTDYY5Rike3CcE3SJOqxAPFDrnMVf4udVYsta3/rU5xby823N2DLcnrfY9RGrY5YmiVCTzNReZEx3WsEeqltq0gkWfaVdrT9OAa3gmvWuvuPdQ7JOYovcQOMbsptlV4g3irLr/8W5Ep9L1/U7iR8uUqH6POX/1CWttVVpmZc0BCUf3hMb9e+MyMvrcN+coXlEExeFnOfsiDIe4zgowFHegkF1EpTzN1IPr9Ego/WK7I0MijtJZOqFj8un98fHicoqf23ixV4tHeLJQvjMeUWhbyZWxJ+hmOKXaJ61FJ0S8M7dkhA8nRgSUig3jlNbIIDagTlHitjDCMsHbPQKHixs3AvBYounO6MyED4sIpBo55R6gD2EHrCf8B57AS+NH/gz5pVJxcllOthXMkiY85ZGvv0YlCssIIzHcBFB72eeXrbJcdsDRGASYDe2oWOT2Tj9PudO/Rj0eUEV2veSy6W4ndTWObRBxcAJE4toQIuijBlJthCmy64plyotRfewKu2TptL21PfZyTRSuMmQE5tjHgt9Z4Xc+Jsu+c5jczEUIwliPqfFSeo2qwGhX9vB1bxWiv0C444u/L6/Uapz4j+P3ye5fLLcX2z1ydPbQ+GzmRgyyOZgrHcHfFmvoUsO0IOSsKDpiZHlo/pTCDke2EIkAJdX7GNPaiEraeHuJ5YulNflUb6dpvVbOLxLxC6UEUBlKkO2CV5+8cwPyIWILCgQl8r35tvwbcvlFUSMn7WvBnbzLKinHLJIJ3h8E/HIrXL/asUEdkTdsCcyvuBHqEdVcoTcIV/91uBw/Q+zzK1kpCy+wF1LnsgWX2wApEjiQETDIkQVeQiZChqaBI0cXe8seYTu7hwGfMA/KIMu2zxVrIGm6yIgtx6Xm1S6yUVemr+aUTESo+/WTslvu32yLIFMrrIBdmPDmIiTcoUtDQa8HyFgKutTOHQwwMwGIjhd/WZR+Wh5n42st0oi85Qd1vQU/udIVL4kV3dFLB1OUXfIY64xrhCu8A51nFcaybrgAyeAU9Pnd2IaxDNd22XdmnY5smmJVOu+YCZGsxCxP3EVXE1xENVu3VJawK7nm6b7yZyAPLwD8fjW7/Z56NimGRD3QP3Jkry5+h0QEbkdqXKWB7T+bVrLw6tMrpiEq7aQ/0sf3PuAuxD/RVCo0RY2Pdo1+EDJ1+Pw967CTMDGK5Nel6y88Zr8ZkaDBI/jt7n1V9dYGdJQTVRhLb1fzm7wVXgE479qiJZP35983N8wsEM1otNc9vYTWycpIfTQixZDwDXv26XD3lfNrXwW10BlPDHLzIeK4/jrVWATNXCHehbVaifc+no3t1XN2rZ1mDqzim/abKs0JH8fITBwh7uO6knCi4+MN3rc7rzTfx19ElbknAH53HLxbeZyVwdi920Zlf2/mbWH7y17+azims6xIBUGgY+i81giiekRkGhcY+EL4hYvyKxiJPMn4zIyIyBUIiwoiuYFhIAafUQo30btYR3Cx1i6wz7LLl+MaKk8tN/LSU98oSaaDEy4ZTpyYjVCL9E0Ta5J1EO8QkPx88f568PDxNvt9PTn48/PllV/vOQe4UpOAXr05Ok3Ow61cd91XHXXwjxCxsGJgHzthkBw4Bmy7Fv/4unb9KenjEE7/sOljWzjt6ESwyP0cnnmgIeL2oQOc5phzFv5NySrwf5nddjEbAPtUZcXiy4uqXkyqy7gwa5ODxxb2oGLhbR04fQEHLJxLDcb1MYuabkxyMIgtmXi4xx5crLAmyiYUrbqN1/SuyOPnJk5L/Gj4cbubD3SRM8HQxzW71941pNijm1U7yaHJTk+sp+e2TPcVgc+fRfRRkqnIzREVSO0loOTtUomuL3FCiYRJL9dSw2Zvc9xaleUoSF21bm5t/VPC5WZ/kzCAgh8z5BD78izJAEfBXFRi2tUxliqvjzOKXsR7YNvOZkgkn05/50Vg58oQNYABXcycIQmo8XNA+0nVQXeU8sofMR+Qmy65xY3Ajn8sbV02prFXIS759rGNkJE5YjLVoYCE33oKoQzvkGDcNrK/aIkGmHSm6LxfKote7ymZ9iouuUK+WFOTJknzldQO29ksTG2bPi0xyDlRgXB75b45z4ZKCHjgWNUOQGFBdSGYeVbmzjwW6W0DY4ilVxIi7npbji27CAQMgvBxamVIIT+zOhLsoh8OU7JEwmJwYSUk8JvwBZoqtZnCIK9mFKVZhMKuqii9+ZiSd7N7ih25P4tTHwyxy+/UfQjDI98HYDza+poVQztShqoQ+l1GdTp3noo1yoJU/0fZiowTdghrM7cH5UwjZ0XQ+7hWi1sOSnu61f0tN63V/6L1HFNBP36P8q12nK5OwxR4I7Zj36xrvQHwFqousoDVFJ/DO714VYihDc4Co+kd34NTc9Ub5MaucJ/gjzKWgh7Wj+hdOc+/1HvA7ik1udpq7Fg6V2mjyxDFq0DYGoPtsL4fajo1u4UGUtlqNj740zGq0ocGOT7HDfUaMG1SBz+vjtBzRNsrWXgIjbt8BAutjfB4iC8XWkp4DBbf7kv4lRRbGWL5NNNs8z4GXDTAhx/l8RmzU8JUllBaCSpdQJa/pkNYBzxmIrSzYhr+IS3AsrwP+d2UOEtXGuCvyZc9gSpHUqLzoJPRvu8XDkRhnVkwvpAxrowdUi/HNyf88L2b5t/9EDcLgHDff4JzOGFU+KGGxMh3NNtE6NAyCrPpTzTGTHkwsITNwe3jgzsP+PT6j6cPj8HbXa7CMtktyLwT16fdOpGrugPUy/2x1Xm+Z+HduffGXUOMYHQ+51xuoJS/B40sR8ZG6tmQXuX8XXAvLzFPbST6bKUSq076bTSYHg2Q3mM852v2g4mjN0N5aNh5MywJiXvYAzfQfzMfmDbbONWAhKqwhJpqa/opS3aRa/cF7YDw7vR5WuiyrWU8Jv1VRgde939o0Vpu/uWH1vwqfeV37u/CUoWRt9TuXNUBGgT3VKm3SZAuV9Q731QrUOHrZnvJYXLELQYuG5fTKObLMGsgWj5MHe7QOD5LvvOXq8golO36BQrXuuq82f6lkc9ynZrtAfRKbddBR1cyAb7kHl9QygvuIYqvvvHttvVX3Xv3mW7j77rX94vvvV0HxCa88kFq+k5zCIUYeZdcg6+cVPNFARDAIvAkOuKbB193NrTR51H3UVf981f2qu+3v6puPtq0Nm+B3JpQrYK6jgmjsRB04qk9z9ugEIX9GxfQSIyhMFIcnyUvEAtS3xxhqHSfqoECtZBeGLQa958X5NJve9l6WT0blfCA7OmVJAHZvfjMpqxzPk+J0Ps4rUGgWbhNkWs7MXACauc0K7OaD+I1hOEtznE/JclyeE7dtUCJtOZ1VGoQ4H6plRJG4slDhGejz4iY2WAWyLUjrCnn98AuNtCq/HwzRrgOt/sMTxevCv7c0jQ5CtyyXIXdA41DOcG5WPRRY2woiCN4jZSUt/DOqIkXmQYcf5HgRvFrWhtyXU7LR6Mfo0JDAXB6MRmmSiGjJxBX5pdT5GonR6pTTZSubzk4uy2vFcoVCxQfRVdL4HUUTj+J9SoFgAwll81nZUrcSPFAh2xT0RTZG5NheDNkNGE1qIA5t3VW3Xh0QnrEWBr+RA15QPdTD2ac9INatTmx+evrNAXKDCLI2T3sk2Ih8Unznx4MXxkjv3oh43/UoWnMISfyxHvZits+aoTH+xVRGveBzGXZbsFe+Jb4zu6vj0dL6umkUC2ZMg/UsQF4AY8f0iUye7DwXdYgpkr3+JORyefX6yv5dkvgWNME+TQCNI3G3lhnB1l40DReJPSd0S82E7k2RYgfUsgyww1c8I+m4CtOgV0pSGHtsiEde9tXD990ln/tUKOUIwX69LONOIOCYd4Jt3MiD6uNVhDWciH73fez/6M8r93xDW/jCskJY0bgMo4/6uBjT60EdlP9BHmStPKc9tMZMVUkKfaMyKWbd+PnvEMhyAgAbuGxL5ZK1Jln3DXiEiLOMgm2Nu67pxVEtNmUoWzn7xGoJBgyynMMnEud+128gzpegxcg9dgJpZMOmXl77WMLISuKIm1O9yQwjzjg+UHgR7H9VAcZqlG0lu2ulXtdOsM4I2lsJ58x+DGUOxjzZNbl/LopQQbxK71ZG8PqUE1kl18XK2S7MHnDbib8ipB/cEOruCItvCSvdExbdFFY8tO8r3N5TvF1RwF1bTbRdu6d0uxZVGsZN/SUK6rlOYPMfEHWzTL3ETGJidTjCIuF67b7y9cKh4lJ2zcSWF7S9ce8tbjv9OLzmXy9946P1o0dGIPa5q4ncx2sGlp99Iw3s6JRfzmuqnbejBjN6vaEQVshuoissKbrJCkOFcGrWj/3uxDwNXOGn3lV5mcjTv4eA0mrulxmk6QDD51HxLkdd5k6ijdazbDIYhgkfv360lWwk25tbjzY3/6x++/H55p+31b8n86urbHqbHP3peffo6TMzBuTMBkWxGoVSTJr02Dolh9ZVqkoXmHmjqCyEC4H54/bmhvo/A8R/IVD8OwOmfjv64/bXLnDDYgrCfg5wsa0PA5ldZHBHUNeB7F3O7+E5PIC34HIwh8Q3VNP0RfErb3BKVDRIWn9qKdT8cfvR9teYvBzMfDGNuYJE6s3yanaChLaVoFH5djR1iFd3G5XUOmsntOrUN6vybNoHM7TW3zf2rv6x0aqvCpT1tNwnPASWGQJW8wBFnXfUEbGxhTzIwhit0/HHcPaGeffGHOqlvYthjLSTh/AKQck1rXWWoa52h5428MJOUaW4uau80IOH9yebCNVDrt3yXBMXSpuY9HCVexdpS61t+KBpFfKx/vXLf+whkX5bNE7EtuBgXBUKuw7/VKvJDBSAJz6Hk7t3P00WDHCT1OhHHKa6hn2jcqKp3joHcaPCfG2Bun4t7kLkVSG1AKdtaMujt1Ehv7ayDLtA97TWrH5a8zVQa46MIX61boaO1FmnoVI/jqSg5BgUDrbSDfxfrUAgxB9fGFj7uIqvtcWuEHbF7qUhcyH+IC2ZD899FGUMjqMl67hKswUKslryuIvtOxv/kujQ33U+LXIF9PCBUCfJ45hT5gr7NMJzyAdRncCWf3SEybKQ6QwY/wabt2GX/mdHrf3ud5QvkXOJQXyvBzGUhjnY5OMhmmws92NlTEXGPXIh29gAohbiP+bxVmvNtnwMoonNoC5U73PPgZiicdGBbO0AUked7jgVR3bqE4jGWWexruWTsJ3HMeDMabXS1i8zkwdhBZfKuuHJSt7YyNuJ/B7DX3iRFBWe3ACJInzFgNX3TyHDEk6LgRpACJ3T4gq8kGclieDth19Dp6rPJUMES/o4eFZOn+cXWf/2yFgMslmShK18l0KCMQIRH/xLYK0l8rxlPIvpaQSWWrsT20cZ+nucQShY7fmr+lcCZWGw9ZHW8qMsJWAiWQLlHkwOXkDBo/jyHignLFbhszjMLIetgzsaPVn1YGcc6aOGU6zS16JICw1Nnal7B0bypz955eoDBqFgMvJNwTBkEpuBse0a3QRahnJEHtfFSwaPRF9/BcGnTsvvKWyWja2rvqoNQ5D00ABwx6bA2qWmaQ8Lk345fg/w09eeQu8+qwygHeqv1BTIOG+aXSfnxRiUK1h4mY8GIBplCfHPz/6QqB90zb+d5bTpd+kjPMwxXNp2M0XbTWs7ShCgj0ay2aFm8GP7gjfFWXke62gLc9tA9Rw9Q6KNwUCwn03y5g4IXE0FsgOPdpy+uUvuQyG2grw4kLSunFOU9SvFDS0+La7gu9+NhyP+awfh1H/tattXHpAiusFI+Dyg3etoaWD5MgxMOKBHRDt+kTETf1WMZ3/Zg8K2nZqI0wYNICuvfxgGle2ZaPCZQUL6x7Jq/zKbPlGEtjdrF7r3O/qHd4KNA1dkJgqcxdbdEpyNjIH1SfxU206LzcI1vleEn0rT1TAavT69D8a0sxSNiMZ1QTxAC1VbzQnJgXwDcgqCZk8rK7MBqSYpFtBzYBVCw716oIqmCBW1ASrc+BTN4SnEXIGvQuV1iQBxTnrxXz6POI/GY8DY7KLMZs3CGuNMCvLbJb5rVEQcC6K1nruxrF2AAsPvuMmvz+J9nh4EvrkThyd4vsRNzDnKzusWmyxvkFvEhrpYtt7s4lZXTKR7Pi0Ht1U5nHWpnJqpEWzv4elsymIOedhGnoOf82d3vrSWRzjcvrpzLzXtXuTHJQK9t+K4tiEmaN0db1udNkQL63Fj34TymxjR299HTgQLDGKm10smSTK5hX7VTzg7kropLCV1R3YYCmK0JY+HL0uMx8Q/Pdt52SaeNMZsEV3YhXwEbSNP2NbBHgKPZP7MjRIHSM+ZGSIkyE+yaj2+qV2j8XXz5d+/5CduJBA9z1WD8gUpLmPEGdIqep01uZGs6kGiX/y8dh0epsmv66M7dn2YZ9edy2Wa/CTu6yJxJ5Df5BjxiXwidLfm1bfOas1eH+3riuAPtexBdi5fKoqUZxMTSIjtSVIGv66lRKL9m7w/V7LY/zxXm+6q8JJznCN1qIMlVdxqDgo1I/UgJmRlvqal01zEG8YpYvS7X21CG7qKm4azm5SCbfM/ezIJlmrcNTmdZeplW4D1TSn+ZavM0JX7Bv/u9RjGtioRgXnJvxruyF40cZGE52x2c/guwnXXZJduj7ObZ5E+uRHgqC2TI1SkJlGXhDDnzSrLWLNoqUJ6ipNMcSopg6dzyD3a9O+fQNdME+1hZ2VyWkxHkfws6jBC4qeE0kIVJb5yTQz0OCortZ9SlOsUEEYe1/Z//D3OgmwpE6cnlxWVpiwpDKlJdMEaRMkQ4DYGXTPBBs3ichcDHZW9TJlpuzAi5+82IOenl3AjIu79ZNyIkLu0lBsVc+vy77hhLU/CB62VomGGjcTuiqQjEKUOCX9uSNhpz5IuyGYa1Jpmfj4TO7XYXW7NmXlwCuhaRi1+p4FgOXVJEOovk/HrpCn0B17G6/NDxRmMNQ4zORxSBHufKurZjp64qgEqIq+SG/0/OoyT5YPnHKvIABmVp2F1RmWhdYigr9DZNCmdTfXZHxIjDZgM1knsTQVmGqiP6DTnHNa/tlSd1k4CMy7epEnLkG1rR5IwFRpqU4Xmd11EKQx3+Bf19c4cyQk8E8vtYNlFfO+uxfbmGkAJFxYFvWZZtStQi3whTYGSTnWJfQ8oEH34JzXDjzQ8ZyM1RfZTbMs7O9R80nPjD7HXsNhbGK0SqGzxEZ9htaDYQioQ3AwaGPjqDA/dBdfjmK/UqRfZ2G/yWgaf9SFwuVkEAklVenzzLTa+18DNydkIiWVqUTg0FVso8EscBlG5FgLNEpxLb9O9q9fD58Bz4XPkXr5afPlqqcsXyYU7aPZMl1L6svvZx71hN1yjP+ACzVItst9lb83UhrnlPaOg3OkpNWD5A664y0QZsSMju2TGMzh3pRF+v6OJkAjVqAzY5wi9+hDlCB7BEdp1z84BPHpFxuqWk3ysNcLtX1FHZwFPzYy278yVOVQB4TUIbUIxz1KVXObTPFAJ9bAQy7r8s4KeYsXdwqEw5H5BWZm/gx3GuIxExADrZkAixEtVBfMJlukYGW6gB/82t5MElAC7MSSF33z1JThaX9JiSBg99q0F3u133IcW2R6K6fWCGsKSncswM9yeQ9OQQlsHJIMXsQyIcXaZzSjolbHyRDthfIRD50qCzo4sQZdGFR9I2FtE2JLvG0tm1TeATbbK1/k5zAzczfKNSTmZjyBlS4ftz+cVGeIn2rh8VdgYiUkquMh2mlAipWcKNc/NZw2y3oqQO81uq9gGBXt+3qGqLu3PJKK2HZx3Z1aJ0EYJxt49RKqFqGwrYmEK6Qz/8QwSZ9PbX9E7yIoYoVQuNAZ+VygL3iV9iJOKlxIjCdRdAeBqF/RkhILFdweel6p1pj0wEyGE86UoDP/oNJB3S7ch/WMlRfrbRCsFqyhQW7k6nKUhN5AUBLURI20RiZm6ghE6dbVYtEXRoakmZq4mS3GzXUFy1wJu7+NQsd5lhmXotyRDv0WLMmhiBOm3ruGn3/Xrt2/q0xoirEZ5ahrQSw/saKs427WNRMeOwlUiIepixPa5iBixtba9e70Dl1aVLdYsUoJaJd6dlmSa4CdorNVTRIjGkcAlPgy0UhcdQVPgXiaGvkdvZg7CRF7NB+5Udpc5cVK4jy4gu7ALFOymYAy5Yvj67a6XF1E6pnSJ41PfJsT880Z8iVfHoLYH6+ymS9dY3Je79qu9HGr63nWamMuuYAOiRs7yzf+O2thzSn2khpJTxpCXoaEGy+4klVCoLiIjvI+D8DgTEcaDsR29eL1O7NNsnTjtxh5lNBpSl2Cii5k4uUXJKtl9Xel9KU5kNFKcT/Mve4nU4vmK/4DbRepYODq7d7sJn+msW+8oaaTbh98hPaAHVggVk0I9VHXp1aO1HMgaAUvuSFxzMMaSMlZiKW5LScNOw98EqQkjTsDXsYm0JHzbDnyx2hDCN4FitVtanbskmMOnXII4nn83CI0j7qOjYfcea0GYY9O7OnMJuhmoa4aS9YG7ZSPFvIaKo1wuMESmhnuTyej2wDZ+NVG30Nx5NuifHwzSM0bpM/5qX6j57XnxUGKUY4IQLjH6hk7Hx6Kewq4I4DNy/sbXWf3yfC+Qjsvr6rSkTs2hJsRtkpjtNxEhAV+kza32fggx9kjUmzmSVSv7FY5Q50ZEdSPqcizIA4U5WQiMT28ij0TimmYloLG6VM9E8BgbFOJe0yT0vshnGag8iMDQOD96xk/ndIUmKCp72VHdm3cO8Y1TAbrA6ztRqFF3l9hxMQENun4QUb/ucF1Wsm+n9nIii8zH7TtPqPkAijzAWRAxbDOwGkHkQE9SEDjdE/HCl7OzK4VkzGyNgREojjuZvQJaTaArNI7mqvRy+9EWFsnOhjfXVrZXXElDzRPY5tes2uUSUC5aM1FVrUvHWQpSol9VF18ngScjrq12TNLVv4BwEbmSBZxMPS3Fd84xvQeRGWoAYdxEz420uTCQQQFGF8jwEIAQA6jM6meTmfqjQjwA3uy6nF3kakBgcrObw7/5nNmVW4Mq3pWwf16Azwk0NFeBxpVmGXrvbXYDTl+g2NS2UWBR3oYOA793fq9HYAIVhQbRnRbN5QO2yZnVpCoAr9Q6VO0zaxWzjTY5f5PuYAi14Y7+AefwyZhVJ/ZkQonMbuiqp00WTAFZR4t9yUpXrezdZhLzx2djUQspheJfDNKS47ZE1xSiHHXpvsHOmsdHLb9dyWJKrwQsX4oHWKoPrJSWIJUHUmqnyJZ3zj3QVbfOUB9JQf4wuDfFj1gE47IiwObC2S6xSQ4GWum6yD9sCQnHsftyBDF7HMacRwYRhomXXTVh0MNj3ARFHlK7qMQALBaBoBY1ibVhfxZfEwfVHAWcdmIhI9B8NBDP45HCA48ma6u8LGcv56NRTU2gx8auWOK6d9tlgWiucTaQKH/91qui8TuGN4ezgY9SrIIoodNxnMCDq+rxO82zwpoEt64fqWYnR5Va0c6gFpWfDV6P30RqQJwuKAI97lhhIAb8WmRBGbRIj2sCn81jrwUr1DSXO+fLXZzqnhcVkAOjm3x3Umb0svLknV7RybSAgEV/y2+FP1p8fUX8gsm7WPiCWtRP3r1+9yaGAixQ3dK/mix2F0x18u4aWS+040mi/BOZKF1kWq+Onu6d7qNERNOmg+IUZFNtApCc7J9yfHuNSfj684+KWeJ3HjbcH2oQsxNbBy9P9o9Pk4OXp4eqFbyi1o3XNoNpUjYLhuWd5Ke956/2T6iioHinWqfVAJDd1x8Cl6bO5cCL1kYojWziw4dpdv2PHrlYG7GAikLqgx99cUrrSmm0Hfvrgpoa2OBLvJ24o6Hc0VzJdC7YR7yJ0fPsLLCzTxP/4c3vCn7g0MQ2XTgU94ZDdQnKB85lO9ZMBLNTawKxbGc3MbYl6vvXenO/3d5JEqnUf20JpPVGXHZVPfkwcNf52KMx3uOD6lVpGvbjDipq+3TSetM8e7k2oPlrWpq7aMldHfWxMUf4rBQBg278+VVBkfboqpJkdNts1gTKtJcYZI178bJbYo+1UzOIwGrb8AP34hpkhIhwv1iM34nr3GeOawWwqd3F0vZyigz3zl0MyDWCrzdWAL8a3Fdv8oI1Fbump0p7qXu6iauB8Wv6aLpGulPipY/ETviD9kzyK+swnu4/31cn97PjwxdCq9S6S2gRIy34vliM1W1M6KHaWvFjz63vOi1HlfZaT/+N7l4oQ2Ek88nXhNYpQuN60CXUoB9HN3LnjBa7uddd2i3iUDZodbT/X0CAv9V9PLiAa2UPG3IsccVdQYXjXHWtixPqclLt/wWpd0t9ulpWQ52h6Nnn7lqeAR3rovzXHI8osNaunnOy1kAziVEHle/gWe7uLhiQ1zgY1CUOU9GO26j2MeMOsRWfM1LSA6pinERD3aoqFIWJYL6vQxypa+R/Gwip9l0LbNLEy9YqD1vxB3mJMvngz07nWEE74yRcQ11G4S4K3hhCNDNXVMR7TM8iKsdU1DgcMUtZs4CQQ0XHjZTAmytjj8vlQnCgqXAsAIdeJlqLJ9+T7YX6VxsNulGH/l90K0MtqwXFMSCVsAibVpAzhGmzNWfWdpGrdYepEqxlZtBbzCJ04Cy5axMqTUL1b3dpYokgYSpY8NAcGnw2kWI1P1dyItzeAaq98eBFPigynRbAUORIVUAgb871EaoV4CnEUiG5O73SjV9NYAmlxxXHc07ViYnRSLAqJfTQxrVUMCims1u1N4FkKwqlBKPriNTjBBTuSQgH3qmMXXECYXG7CcGhIzddcyJ41WnePRvxpLXp79/VmhR9M2dNZPs3GcgKSXWreNvNjuZFZtIJB+DI5avATvS0IZ6PbVvG4sY6sccbQW19J6EWZDt/OByOFFU2j1hSpaSl7Wi0rbg6hwk3GnwKwqFOnGw0ucyy8S0qb1o4oAxEQSFD6iHP2B5OTw7piYbC46SK1DWnMb0QwH+IPJgkELWVmf8NLtTecJZPLa2BO2Hr5hy/0heCfWLgJq7TL0cY7+a//jrMtvK/UCW1WQezS/X14ebm5Ia/qf1bvC8G82xk5y6iqgBSMGB/BDMQcrS8fpKN+/nIaeTF5FQjxjZn96fu8Vb36Pnek/0fD5+rgrPtljxt1G291LhRv1UP1TezftVDXrSHdsrjcU4WLyhF6EVGHPODZsvAN0OFxnGeDRzI1akHzhogk5i4734nYQz4szNgcWdnAD4unrVCvydXardg3261FCdChiS4j6Fp68SCbhGL7VUU5p6U49m0HBlOpyXQz0eoEPLPIN5DcKcwb3AR5+PX22SUTI/l4LNs2sg6u7FdWdvnw7BP00rWgtjP2iUDGBw1oHdsOtLou6YkCtbarh72HB7QSZ2EFeocmvX1PQl0C4cyFI+BRUTogXnEvssDJhNmtF6vwpaSauG2VmLZcX5VwuVfkQasWKVtOrFWeoaXVy0vALTEN8x58ThyiNCZTsjRCci4qDKXWYgdpvHtRBhM3RFSXmzxhGfOnEBhgO21MQPKPaLu3iOMWNY9nxejwavj50cQTrbdMkdYK9W/dRa+gmbiGtyGAVs+2C3bXaoJ1kFkA/IlSow0UPFiSPsr9bcwCvpi3i27WQWZA9pUJtYPTDGstJBcZu9zdYobiYHTRZOxih7x9Ru+LlyS9kwJ2Iq3TdQxU1AcwGKsDoq8mlH/MN9noMJHTQ24jcG/HC4QdftaSkBBgrrGjQRpOszQVJW6nJZwq1VdZWNZf1SW7ypK6fH6V50F5WxWTs5aKbyzguPPG+4BUawhgkEkVLhHtbSjbjd4CoCpNQiMucKKxvXUOIuS6QCM6X46GxTBh9NyYr9F7Xs0qmN3J7EQxZsuooK4MFL9JJsq6TdSRwv8qmK8B3AgUkjCWpF36ngj60GSCAMkjYeagd6+6WINtplpAOmtBYmywGO/j/WqWsseQjOR9+up8ZExyFa/8DfPR0A3LF5j529sY6FYddLW1Dra2JwvYOCVJf3LvI+GGFWeJ+wQpxVzGAgWzg4dIw6GcJFgiM3OEuF0azm7602ISUPntdNXCOqenQFAP2bVC/eWoVUtIoy8p2/GbDpqn6hbBGoGcCNmSsqkuwZwD3WugzEK3j6RwUQE0GSDOQl2oi8TwAwJo45Xo2VzDy2bw29X+yJ4nrnEH8HTg2/8KSfsTtbWi+xNIrHYvhQjWXRJwkHaVGvSjOww8u+SLQ2ZRKdMn+MTFquLGNSP5TysHwld9y+d/8JJFtVTpIC6/PU1UDJ9ojFErC8ypVzYywKIiXga5qkDpdcgTVoIs428EMKCe1mN81xjGyGa4aIE0AlhiebwsFZGgtcvOthAPu6zhJKImw7lcNKXeQ7ZyxciUMHUyGv8MoTWw8wG4GbR1hL+mTCMku+4dbFKKfYldnfG/TGpgwmA6dZN42mD2Y5LKStUcLS/hay2aG0azD+KxDoc7gqwTSAVxwZPoFKKVCxeCNEcU60Rj6sHrNez1IGAgTkeC8b4NwLkLID9vGyMSp44Rqh0Lnh3rAajgLZX2bhAb21U3cANU5UsO0a19z4rRnC2giUnNz5GRNLxx0ejOjLUeZiJ1MQJ5yaGM8T466s60/l4DCGdqbfV4QieDhIZgXtRCPdfdZhp24Q1wPVVk8S/5Jo33bpSKnIJ7m4l5P+Qz3AuinVCvguA1S4ABrdOHoDm4UGaPJhMi/fZLIdfK3VCD/Db/HxU9B9g9cNxUhyeqMsqFOKCUKkijVs4qKPBHry1hhDNEOEcFPLwZABkz4H7IYIVRLYwlwKz+Csssjtfucg4dV4NjCpQAJd58GCXlz5pzqFQR81Gc6H6s13BYG6OORsYIr+ZKKQVbnAIME9Ys2Bh+2p+TtdX2UbHRucm/uB3BgQvAAjSpVo+SZHVdQHZWBzU0E8f1ocIY0d8Vj8EHxM75qnoQjWF7xw8dm933eo694/Xsya1xZ0DO1uxcyLexV1Xt+N+jgHaV4WeNsUSwJd9UhatOoAJzfNgR53b5bS4KMY+Q9SHsO1tbRH+TB49HdillVJApFbHAWzNhetOkJY+7KjkI1FQfjPLp2qCTzJ1XTLQQrAJp1rfKf7YlKaBcAgigOET0uMnA2Bpev10EAiCjlBsi4NTUUgs0E72Nnut9dpIW+utHsXx4mheyxKvwy1XO0hBX4/SEmSNUv9OstklRIuF734eo5QCOO3NUni53JvZE1e31BpjIefwyYgqsLzCgI6IbWx3MNRd4rmLveIFezJV9+WxGmjKByyKurNL8IqelFVBEZ9ZtWb6wz4d2I0tgO4H3a/K8QwjHiiEDlY4hAWu5Am8MtqMWHbvs9lwJB6ibfkcTVSemqh5LfFZliHtjrJqdsAH94PeA27N5zQupKhsz+vNVPUjKuu4/U5ttSXztqq3viVqAmYwyPMAkaeBFTmj9k2mUEPx1PCHEnMf2UZ+UwiDHza2XQxKXDijvg8q+b3FOrLdAdE4UcuP8UO7s1vTiBqoazAqnRWZRyHw4GgAgn5cMoerdNfGpKhrdFdXpoW70mzIx4+90Lc67x+QsFPYCClPHv7ZqyCjI2G4Do67mu/u8Rz+wMKcc+4mlIGQCr1914CYEEzobTUwI8g1tIknTNulRL93pz1vCHhhBBpr662Wwgu53RWGydjOuJuFOQJ5p6fu3nQ6XO0o+RmSJoVnyUxhE3rF4pA3qoNPrc4HHSXJ6SWqZPlcv5rD6wyY10ByDHKJNjcv1GKPy5k5f2h8ra7W8FSY2Xs+nYI2Q58X1OZUXdH7GEOhrXYNdooDgS4bTPBUZxC6jyPYQSYp1XiFU0aiMX7MLIfR/5wyv+kpgynDpiucMrh603rmaeuoowN7/4hnhySd+pMraTgxHPC06bUNlhttA7ToUueirqs8fyew5WVQC6FtOLf5eLCZ0GAbmVxoLfirp26Rxbh1V9u/gARXpOGUaDwNKG4j9dR2KSfC0SMdNhwP1DcZFf1ejwqbukj148rP6F1lev7gG4busm1f8TvmCQ500qq2uuxfcmB2zdEHZU6ZJZG1m8PClvHZImwDuNMdA3KCHnP0i/pBm03ooFXh76koA075ohwUwwIVN/mO/4FtcGSbqvhHvgP/gWsQpimUpUjULw5e7ONvMK934/J63IY5lajwVNO7psPxFiwbxgnHye3oXu5W00Gb9ay/G7lr+58D6jc7oDw51Gmk/RZDFmb2zq+GdmE9iM8EJKuL/YK0hpci/epG8EdKRKs/wR81nPgu2ucyfJNw+bQYvCxnnBW5FqMxrBiUmKg3tUMtwaKxE59HO8D9Dng1uRvEdERU4gugq/Js/FsJzufAvqHDVVQyDnB1jKcGzv/wn38B/wGbHUj1Vbcon2JH/V6knifl5Fbvo2rap86VyDIzI8EfNCN4Up/c1u8tbr/01uqXk4J3lhxSt5cylLlIo2vn9WXRv8TbsILHVbcacHUv+DuNd1G8z8fauIkG58u6EqPAvSols6dyPu3nloK1ZDavVmIDArOSCdwTyf8yxsDwLsUXdN2l2IKp/LviCot3oFi2xvs0VHxaTGtH8rkQ0PJp6TRbgi4+sizyf6GK74Xi3ctzMKj98TgYnBsfxMCgA9MpvCzBmzE44WfjW7rPwR84It4INUf7zXgdVMdZEuDYBiqaCaUWJ7rxFPvi9ns0R3D6EFgA/7Zygl/Hdp751WR2K2rxEzobuZrvKzBhQRyrMeEonfyHCXuc9N+OCQOtNjLhKF38y5kwGpyydgijEar9paYCe0rvmiKv/uWs+hgFbWPPcJz359MqD4a6auTRHpMN1G2Ge4T3t4QEfGpYTfI+KgREE7KeH6FPzawyjywpBAQYzQeAzxJMJyVWoRGZ+F3mxdR9mFn2Db8GLY5P1kIM/Qu40yIGMYhuPf2VL140X3VejW7btZP718sZ+2OInKtW6Uh1CyNAbiUaQrFaMRzbHTt6czOSblRHvuYsFHQMhx+erUBbmfbdEhRofEDG6L9CtG6BIjtf/A0SnsqG8DaIAYFxXLVfRuW1gREfMW+tZhrvs0TrZEJ8y2GdrUKabJjLqfqEnuYp1JRzfgAT3gGPsnLWI2Op3gOJQW3h+kDJB6NcEUWPyrYerLCj/LVyInGssGz/gi2lIMIT38CmYzP2Wh0weaAMqx94PucaP3Vvg7EdnID6TNdXlDMlPhWccmgRq2bBD2PfbtYcvLre6803jx+3umjQYf9uMOFgFOEYJLhs4RGYED9B8RZKo6dy8DH84k3g8eO6GUiiqXmxlIvcPKrhiurYN2eBRlDwhtYo9RDxLBB6arEInmP5zaymWUA6zmgfLgklnjAUjqepWgOLsThWPR4sF/hY58NzdAxU+1+INXKUDzoW7GlwjfaGxlxQM+cRWnvo90VBltATFHbcI8Q48qJ1FVwTwPSQTRzxLpapGyo0xi5BMLIwQFZDBOuyyKfZtH95202eimMFjVfGibqhrMCzI/iLs+3fDavWqNUOkPwZoFSIHBY3wukBCxReKMDe5kfg4ZNpCSLSMkxcHnQjki9qXtj0tIAz2Jr4QleFGxVdNeOfhzBavMjgRp5xdP80mKs3qsDgV8Vj8A79BsEKs4oHP0O+GlPf69iMEvtF6vKikq8itoyxqOjMmKUKxMGXsPXSBwxUZKqpr5QkNTs+zow/7JSS6BdTWAb7eJQVb7pDdTwfrbboybLron4YX5hyLyw1QAANkMcTcJbIoSsgDR9z6hQJzRcf7wcDU4iDrfkUTeoOUjlu3vmV57+xsav5WN7ZjT1ae4sbvEl74H2AiJhgiinY7FXdvjnWFsxGDCKM1xsyaxBpp0GQGVzTnddKWIKR1C8ReydtLc3anSIPI3CG6DXwoTEut2vDZClBNBym4OGEPaOSAGySZ1LnUrtgVI1xd1XCVYzhgs5SiIYBAbPqqQhPPN1GidD860LeYn4swTRXC84bs/Jio4jjpbm7/5+9d/9q40gahn/2npP/YdC7jyWFQYCdZDeSFX/YhoTENg7gXJbl4Yw0IzFYaBSNsCGG/du/uvR9eqQRxkn2fa2TGGmmr9XVdeuq6jKSoz5lfnOBVGFmhYgY86OTJDKxssEyj16pD3UB6CGqlnEM9cGVoDqtNCdHiQXtB0GBxzJ140bk5dtzqs+BUbDYQb0wBCLoegS373zOK3vzNaTixnQCj3QjVt6KGy6IhhFmcvT3WEYa59toi0+945NaxsINbjXo5USWdCgtvXL/UGeYuIpLGNVcXuFVgji54JAjuP5CGpFljzvHK7D3k2FyuVArqmzqnasUBY1sPLpisbbJGpI5Bti142y8xmdiVFNmlaFSwkUf00IBTbkAzUbEUp8LA/PH07xuozyVWY0XQ/0vaD4u1X08mpd+aUoTcoOVCxNSIBAbfqG0M0fKkdQLVpMspYB0EaZw5BXtK5gHF7DQI7w5iqOjfKagu5Q37krY+DBJYwkdhT/zJYR5bvVjTr/kff+hcoE4ONUyQWteb4GAmt5+CDg6wadHDf2iuUhcsDWgRdJBGXzKnnv2wN0w5w+y/pWPymXJH+d8aEGiTc73vJONBLVR2QKzWORM0klL8FkhYwk/5PveKKHdaZq/ivpvomEi7lngrHXF56UB24Fsi7xXnvXI/WE6krlxI/aov2wHdQ4Bp38wN7vbx6oogQlE8nVOqipqb2J1cZJz+1YeVG7FrNW2I+RhzqOUM0wfgCwAFXQKBnaBaPyjCYMom0n15oLyVh4sP6iNsHoVkXppbbMZUK9plrfn5An4TNz+AIzvvcqUCAB9RmlKUMe285XY2VM6IhOXxNdNTIlmVgecFNMGBLbalc83624jD5Zv5IGRwpHTuT6jBAY2Wh/pupyDTt0DKqvg05s+EVuZx0ykaFY5jv5dZ4j8ux5wcvNC4vbFN0zI7fh6/Hs6Efdedk3eK9LK4LgJpbUF6oCcsMIBkRHxAxpRJYFUHcymF31MS3xI0wqzNyEm4HZpjNuJQ2+IafuKyBRpFJMWoe19d0GW4ZKkR+6kmir735gfQLOyg9XAnDERCtz6xsw7Ts4vpyF3Kh1dBomxKEh5BfmBcZRKZY2u6P0RFOG9trZ53DHSpIkhM/AX51822UJjU90mA+uoWrBbVOSffmp+IqZgjPszmR2bC7Um2YS3rFPVKsTXsa3zdWyUwoMv5kUP5ZcKnG5vLYaSWUp359S1CnF3Le6uFffqnxlXpIjMzLz0fCmIOdamHFvP5KeJc8/KBW4yLIPVE0WyEjs7HfVDhxnoM2HCpxHl+cU5rHoL2yENj3RETLAbBTmw01Ei7wKht5yUN1J3Xus3VCUPYJoBpnQZ5yjgY3GZ35ab0R2BMkselFBJvIKq+IavmFJzJN926WsqoCbvUsAU+HHSuxgOE6Jv9+5ZlyTckxemikPFrka9jnp7kk/7r/ituXr6Pbq9pWPqT+wQY78YSEI13NKMKd5XPByHoiGqnJyc4HoWmirgk5yy8F1RC6O4s0AvdkzJi5A50UTO2ogdmWRSFtCpxEwhphl8Q8z4vUhuqVtT9RSXX9DS6qZxPbRafFmpaSyXCTNkk6qVeodL3cqJSfYU2h2Excu8l40mkfgVBtqy5C5taOvVN0Fo/5Y5OO3n9g0UqJaQdl9YfrqXQl74lr3RCT71fTf3iLlgS85bzsQJCN8iWtOQxDHUWylEAkSFfcVMeqNKLpAhcB+K+3SeWOTPYHTkCMpu21qhkQ+4N/7Bd62FQg4yf8hBqdskbSOQlWV1rO6ccjQX442ziB23CZH2ttCA714pvl6PEB6hAXJp4XxGbAiWA58IimJOU+7ioGER/RVD0Ll3z1ddFNSkqNiqm57aXZoFEtfYlbgKQs0thC4XG5BOmgihRCsTMeTOMrNTz5Gvxg4EuOgtBSK8iteAf8eiffXBmMfJwoEaz2r93+PBWF0NQq+4/6Zs4FYqrbwkzwiv8aGcda8Zcn/iz7m8jhV7+7Ip0gzLreFSHEIca2UQFTBxH/9EekMCi5G2GW9woCy2dPsFE7ZWIK/C4MuQhVACowJRQgkaeDs9UaUJ58/XU7V8bN0NuP65usKmODBqVLhUI3n9fP2mY7aduFs64SaVTHMxolQ3gZoU/O/pRhHwz9fv2T18kHpCU4JWrRaBoEtbi2co6/VCaSE1nWhFRrYhS36YM7zsIyysVSggLNFJpN3uuHhcoKw6g7cHianJtud6vqQpOxLEuoDQdtdW/Kx3ExHZIADflnR07N0oyUPTfW504r6rR70M8y9x/CjvXYMcyeLLCjyK95t9h2bLoUNnQmu95oBU3dDowNihnGJTYZ4nh0JWFhCdyPqxnIXbc2iPzZCo6NqIMrbLpz785in7k7v0J1CcHzTNm7Ja8kZLh9JY9/BJLQDpjXBep7vDLGRu6i5OxN2Fy2DkA7JG4/0TwpBJul9G9xVPYYx4OmOI6mJIqkuG1KVe8jID8L2lTcC8EnYl29LnWOHEFhVDslSMdVdN78wr65EsdMH5razXTSHj9hqNkHTpsNPCm8IDRiSBv+aYNRYK1F7GALgjfCjvxP43UJKd3I3lFsEQL1DA0+DXgvPTSFw7YfamKI6/8Qryxg2Z0Hrxekx66KlH+2kkTqUPgSD9DIKKHJOHNQSC3nmYhz5Hf1/Q5ELzIPGevGjorRYseDWEwoOJhcS9KMDj0HjCfgUZ3nCHTmrmqS7bmETMq9MUIwh3dWi/wmuoHgh00gZsv1xkXlCONwLq8ncn5fhEHGO4UrypKNvc1hHeEml8woy0tPqBaqGDZLP6kK3iKdumnukCGdg8/mgyHlv7yRA7Fi7y7dr6b0aAD5Zsb0wCYgHLhwjFswslW34A8GSTXkN00doM5KCM2jWUFcvkiHhbsVSG5pEavM8kP6WiGJc/xtvWRldCKjcp4VHxPh2PXcqG0GoBHephv9cUS/DpXMko/tnyJ0Fz5mKyc3nkUX48tOph+J/NOScpYqe4WalEMCB0ZPuCZIDssobuHn4OmVdikWU8Um1dz8YoGmoNjDYKKq0nHfNA2vI0KMinX35JZTyGXXXxrMZunIT31izRwc7W4dbzYHt/f28/WAueistn/gW1JqWnxV6bcNF0jA6Vny99sFxuHa4mWfJls30gQGMQHEkD3fshNFVRcdxGE8AjMX18RYctwpcRUzQmwr0SeJt9nEWKEGUeyfUx1qk+VpNYUmbr5XLPnohhLx4uteTaQiXHY73Ctr35TW9GQWUetsdCJUzT8LwSqjMxgYVc1DwEKJh2b2voFzALTKAZVM1LGwJ9UR0p4G/orSuZbxmX3fJ+cYxIqpC6EVad16pX0sPlm0Cdqom9p/CuH9G16IBp0pEWcU8o+lL5FIl1MNs2bUq+Hz3C4JM1YTqte1Q9QhxrAUXaOhrc0Ya4oVJaWViGYXIjfghCpXTGZZBXEiWtOCHZKgC7ad+9XmfjiGAcQmrzIvRn8++nLuqtt6UovNFCOZ5QYEyoplOinBIZ/LxqdsXsHV1a8CIap4NEaBqW7514IcYI8szWaPQMKofZhDjX7tjQqF9F0xkNixK7sGUHWwxlM2QRFOTwdh+oqthqDgJxIofe4E0SjlUX0Ed9No3G+U42Pd8bs1+TLF4Xu8YcmX2WRKZG4T3WypPZLkywMafBkAcgkFf523p2h+xz8fXjJydAeF7o4lL6NVo4GourU7n7TnHssjAurENOjHZsfq5gbPTfuAPQCocya3zDxbDlwd05GKkVqFsAp7mGwbm2htDvchhy5cWQFDN/LhxQGsXtYQF4x9pg5eDFOzyAx1SFstNs0x1wXj5gsdfuaNyBGviCPec0aO44djEg3oNUIf6ZzvK6y8KgU9JM1cXj+ktO48SYx/r6HLCf+OBeqcsitTrL+YIS7NGio/jC7qHYQWm7uJl8jZ77xkyC0Cg26t6KLvgaMslWSc/nbn+l3dh1FjR9e75m2N3cLWLZ36yX4kSDILA8HazLxnbHg6yufCvNLh4Y9BF/80CdEkzc3Wro+AHjji5GM3QBsS3gMNojqwLwMPvSIV+J4D3JdcVXrYGybcov8ltZBWsXChlVPxCgwN1Q5JvQHO4K/6azYMr77LO/Gab/onxUPAnwlVEKBCq59y5y6LRNIA1Aa0fXcyISeyDV18kvMqFTWb70hhJX9rRFAt6bdyPglcTCrltsi/K4QQEOtJPNniZqvdExkz0NSJ+VEX+YL07Il+QzQTg6AYlRRk84PYl8AORHkp9m715Ns+GU/EFoDvh4oh6xGHDZz0YZOr7+n68H0WbyT+GEIp9C2WQsnr1LY1IzvtrYmFyKZ7K57VGCt13CW9/uaf3U2t9svXq+9XT7u73n8OJks25y+KLlCCBVsKUrEK/4jCP35MXQyuTuLoN2YhF6y8uL8x5gt4Z9psDN2pRaMyMVBDVgyKamOUi0O8nymYxPRzwZZ++Cp3svXj3fPtxuB4CO53jffWkHN0wGL6Zo8QJ1cZQTJsDX09ls0sZD3WxK33M64I1jXAF8ZsZy8m0YuTREXFDIjTi85R9HYjISKvgY5i0bjkaT04husu5HEzT0tfKHreg8+j0bR+/yVj87Xyd6j0Be5232MpvOTjHUCe0zAkPwQJUuGxY+HvrxW7wZMhu3g031iC48CP6x8fXGhnh0E97hKHkED9Fn9wMG93HGBrQkPQeClHthJxyQ1GPWV419rQ+ud6Qru+LGB6ewLkgCUdetMMUvvzLgj3+PxR4VSHSr+alvknu2kK4TPt5az27AgMK6sGZs4llBSOQROQsq8CKs4HxyAbiZvDOkG0VoDKEHOZQSskJpINuNBd2Q4UtMhc8lS5tE0zxxm5FOvlgqOz9STR1rTwjBw90LxlGS54cYAa5IllSkDHnKdH2EXW8IGYb7RjYD9ooX4Iigvnv3YAk43pQewZ9HRIXceFMik9MpBpSi+WonwdhzzUDvmVRFlIMfxiu6U0e9w1/ipRzAGQ/gDAaQnav+z4z+EU4AvTNqGkGCf+7fD/gZd8AXZusq94Qk+xMjN8MfSgtklwTcXAKjsOuEYLaztrm48pg4isFpeDzj5J1uR0DEHZDRqFncGZHVkjGi8tqeIWFho9SjrjENq5wPA+Qd9bKIfVpCH3UUQobPAVZkfpo2jYo2Z8du6KYml7mbKKy/r5p1zNGor+qb/HJjcGtj69DO1NtD7CYUvo+Ol94xLIJYINMApZ4o+4aE7QOOneYqzeL41tdBNFVmwiCPrjB2SEk1bH8GOXIcvEtIVohFgnVgJr2o/0ZLq6iEh8EkyjGYSF4KTPMkgeEz6wSLQeIuHj9dDeAHrQPfTsQRU3JdLNMdtc+WHBHvqIQ6Lz0zpUEU37eF2ddEOkMJcJQPV/53dZM63cUtVSj7te2HpkNjpOG5XW+ax5cL9B4ZbGNUt+RHZ26SpN6h/eXDrC+GJiwOJq22LM6EWiHLJscFOLjH2oqBcuMG9zTab8oSc5t1I2grVDCQSxiB/ErpB9ufbmN9IqojhQSlgavzF9yEPuEF+CEDgD1S934wX+IhlE90YVnBgD4V5I17e0kMWg3VDO7kkMO7zopGsQvyWqC9VjDxApG1Q7lKWr2moPR5HuWsgQo7ODugC72ffuB1x0DqnhY7c7oQ3tJq/oZDDDVf8CAQvsRFv0X/dPUIpKY6f8q3nJ7V+K2mSJObh06oRBCDJCEekTdkOIRHfJderR/1T5M1PF6dZqNa+DYaXcDTcbZGL2o3x8psXbT7ET+Q4JTCj36pygmn6/ntML7IVqzdqKgnz1rbBTQ1vxP7rBldu6St1iTn8vfYUoZMLowit9H2ikXti1WLypVZXWtTTNCaLksw7KCgLo5z8inKyEnfPMgvcgwb7JK421zAnNZ8Q6QitECTdm2rkV/4UFSt5RiZ/LYpBGpZDTlFf99K39JuQkFjxVNWHR7d/hjjXoVTDByCsY0MZJCCVenQBB4+fWLQIDZXsgzaVgtm6N5t/TUkv9l20a5HpMZHjqg338Y00U64ehji3YcPlIoJn+MRDPQtDBvzgOrn/BsJ6lOs1A42bjWLOzOIy6VzShh8iOMySMu4yK1sBLl2aolTdHniuxjwAgi+qkkYuzHumkzhfBlUpC/+EaA7OTmRYYOUkirufWZbSxR4/P5xYumm6fDpk8CNAmC+a7v2yZKqXdOuYnRmmItEnmrZ2Xn0Jnn6xC1F6wzc8GVm+oMpPuwWd6wXVHtXmAqiK6Xd+k68VKWB49e1G3fM1wXruqatRrc7Pxpqr/F83/P4Ypq+knkjq4iNhzt4X+sByn4NbVrTbfq1bGUZt/VsoT/vK/05upKpz0wTA02Jy+jhrgZl5ZXJABN3GWzTSwPEKvk3O47N3u40FGvHm7PTZguFNDYF0KNU4aeVhPXDHbT5bjG8hX+/9ENqlmKWbTGRyjojrnno4SC03gy4T/hgI+RNJvvi8r5IezmvebM6t6nTzjQ7P7jo8YS4S0MDIfVD9KWTWkgd0LaYiofaXU1FJ0i+eSidNitbg4QhSBG5gp1U/NQxSMqyJmWRf7HLnf3csCHKttVLkOMDM7OQVAD4Ofx7BP/bOYUst/pZydkaOnBfzjzhenhWoXalHrJhJnZnabzS1jJpy6X0a+ZBnflanYJIvC0YEG0XV2cm3jIqnNG0u90Yq5Pj2YnAhq0vWfqUCQgag3GzpeB/d6OROCpkRnnYq/LLth1E5fNekGgnxoGQ9pFsC5djfpyhi65Q73YHOBW+ld6oqlJjYoJ5L884kdm31em0xwrAnqSixW1BQ20WKYhonFyaEbmOplpUVJl+SCVVXknJB7icS66qlipGxzLx3mAwguVpFzlzpVG9xADu8TihqsvoybYwp+29iDN8jAsI8/eLVtZC++1wLJUJbVxRGswJx1wfKvzwyBlVIs6ChXFkwR8RHeYQZJUu7C8ZHobH/q94X8j943dpkORdsE1FEasfNGjKaXQqBWPiFxZRlgKncXTTmybRG58xanKqqWIBKVvS36OcT5RUaDmeImVOHNT9osruuKHbyan0ocIJHxjOLwUOmuA9oMHfsQom8Hq1v/ft/vbBQetw73DruWCYotwDX8Fnuwevnm/9Wtd53qCgnAB+b+WzK0yCmQIXjq4MJkMvUyAR0+8OX2Bi7LpYOkXCWq1WXdvPdA4amBOlQhZ5FMSa6rHOnXRxVUznoJKV8LToq90xF8Gto9XHd4m4mw/rBgqLovEVpX3GLMim1wzAoxWc4QHU5GIWXExAWTyHx9EQr/u9oiQGPsi5YyEYGSIMrVNxEcTq2CUKaziGxqySVHBuOc6gENEpD9B9fpgns8P0PMkuZo2iBlh9DPPbqWDEQF7ttV8oDaPAuqKZaY24R7n0bHYj/cKBs25ubEhrN3zfLIlzoT4FfVreQ6GUDjathvX3VRF1rRNnzQO3sYyTPq5iQ7W0rofUDD4PYLI2aogBrq9rHCH/OWgEmwJ68j91h4yxybj4sXZGYMRu4OFjiScs8Ue/kObwpKKjS3X4l/Egk9MUyyjtTxVSzIdMULDtX0/iaJZ4XKN1naWY5YoYhfamNFHIb09dOJaiklMEhC6judX6ej5l/yppdCvtRRPQ5f2tdXDG3OMBUWyvYGE33oLGepI6GwJrkGfznja6dyS152znAIKC6EhCkAwcez0+jcYx+tB+H72N8j5oMLNAHnUhMAUGt4PAd3gHbcmUPMvRjDnocE/OteDU5HNcIiD4fZfIyIyvbf+lk9Q0YqkCb02nnoBCGAL5DLSatU02qwIrScXFvASlNA9GEV7p0M+mKL9iQhlOtobx0nJ6srs5njDKnc2IytljF+3CocLC0AX3JMETusDdeiRmFpPJ8SUyppBTEGKoPKPNfCmgvuFmS96CZHhbMVoZIIQfKLqZlSOJbZ+xLBwKx8R7myNj9EC/Z+e2IW8T1IR3TecrOQF6a5ly2XJF5a3nhYw5CsvcVIEyC5/OQ0zuyOigpR2rRvKOAjJeGVbSCrTOX6xI9+lThgQu1kozZPbGRmMDsG76n7sCrSetUBG4nP+1fpeQssstBFTHgRSOqOMBFmGKRMVGigBSozamq2HqlCkmriOMKmaBrqaAG5kEGj7ko0Bt+k+bd2XCeUHJbB/E9XUZh91DCvly7zAopp38mDuxJBdt6YaEcVJmAhF2gLuwLqPG38nclPWSvfkRt6Ycp8MZUGq0g+dvt5HHVtrAP3JDV6eVsDSIP9by/IlbvEALvfvbwL8521xnPC7d6e6Bg4V4UizyX2Zwz5cW2XOnwSIqYeWfmE8ezNSWxmm8J690UQAqO4uoIAjoTD2+4XVcTbVwLFB3ZAR/oo7d2DB/FkhehYqafHhyHhrHeXiKtzdGRwDbnxB3feoMtXQfVdsXVQlR2bZwkV9etqK2hXdahdNH38ySqc90fhdTs4otOzMYVnFqJxnNS296cwnF7DpGcamVOSDxlNR3MkgsN98a2fOfKVP8B2WgQu8ATMdtoXKnpM+X1qmqOqjrWIAxk2vO5cpVxo2gKt4n4IGD72oBe5UKqZPLh71debk+OKeZsQo21O3LHrzLc6f3PZQsXeG5lam4lJDzsfFiUv5HCh1GMAR+5qkRwljy8l+7r6SfD5f668sjfx1RWwCOobj3gylpy+TvyTknd2qXy9rBHYL6Q/XgEvG5TMMzJJYS/e6WkkpQdDorl05uJ5csmTBqvpjoBCLIkemUxXR+qknKLWzzyTgus8xXvctWWu2JzIuTN5mir/TT1Z9x8g5L0l2vOP9Y+7S/eH1wGJxGb5MgneUB9KOy3y2T+sLccW+SK53BRh83iscF5xf1PFCpHnJ9rm9nJfI6zMv+qI7hzUtV2GUdA2lXzOxMTrv6iNuprLHcSY/ELNpCbbuExz/djodwot7gZafKtZ68I3Yy8msw/f4LScb0IlQ1wUtre2k3jeYi67tM64THuSLtAOfEUIwXnX7r9rarf1YxXQuuoy8PlpvEpZgpxfDgvIOMLhkfd7hpUEiHlRQZiixe0EJe6t3xoiVFZ81breqcvhav68fPplOOdIUDAwyhUL7XlsPzHXTQ0vF2d+NV62bzZfFFuFD3e4YrmFT2qif011diVMEcEVhl+KHfFoe8/f73YdEKoZGOpJCIZeEU+hJrnKiGEuwgxo7J2VQgh8QLcxkKQTV3R6iEJOslUotDoConYwo+gLx+9HHmKmPUgg2FCdLlyCz94bbU1mpw8c6Qx/NHx3fLrSxSKQ9Dx3jYZ0SvYAoIHehuM0/nPkmD+90u6+Q9MaQHpmwmf9fxgVYsHM3hnKM36s94dEGhZV9cj6g09sjwMBBcXYsEs6eDkapysUTmRRvc48shDmXybpv+GYA2FbGmMmY3lAgztZBt6gaF8u+7FJaWJwyes/tzz8k9Y3Q3OAc1T4rx7C9dRBTD2QyG9YWQ4RyU14l5sIzpK4K/ZWo8zD1j/FxxkvRIsoaQNc9ALEiTBo/8RQSFFEfcsYqZPEn2bL13k1FwuWIGBDGYUf4B+1i3YOg6I3WdIMJrlDsGHSNcdJQfGbPQAWU0EU90ti7AOxrLSXtI0YnFIgKFpfAshLkM444PS8bHJlo466+TM5WtU8d8X32dXHCYeabQX2h83PTB0QSSYRH1RBhQpgg7QB6fGTRxatLEaafSzQDGfp4rjuqUFW+jUXVbtWz7SZTL286Kkm7dGER9uUze3i7my9X6yh8iSIxJZjHBjseG3lq+7T8r5AUto2gFYXkZWdlhDEokfi/oaHUkeX9jhiXL4CWXB+g08iAQW3FuHmKPmF8k97z/ZMQmSRE6X/I9QzNPVcom7soTPq9uP7JR5RbTx36bxvyF+i/7WaFB3B1cFRQ1nXlg0Bl6l08UbXngoS30uGci9y3OiTxtN5clLxJ0aoYg8dzZUAoW0mr7HzW4iFykzU0vQyyVx5Ha7gWCfsso6JASd3dsEH6sC/GSpnUjXl48PJkmOVAbmd7JvNFJvDH3uD82jPQO66qbMFHVCsm3TKXAk9Sr7m3Qlw+BBoQt3OVJtBliWy2ajHGIDjflYEIF6VCc+la29hzubF8m/YsZxj2bcI57xIby30ZhNB3mFnoio77IE85uXLbODFZe0y1KGovna8MLjK/KxR0j8wYIejcawZ5mo4vzcb41jl9lkwt0Rm7UUf3YrIdG2zjfjhiLP5wQXy8Lj4ZK/VnIP4sZXus5yID9WfB5MJhm58HTi3yWnSdTeUs1heFPcdqP6+FR/fUP9WPDrfDzdXdDrjgUrdJ+dCr5t+NnlOGHFhT9FaF+ioh+FeDlahQ5pKJzNtfN3Bh0VDfMrdQ5XTt1DoEcC/Hy5j7rpHzPuuHNHOIwuxSrai1uKa2g17LG7PJDScdJNj689J/3rn9OykskQmNEmc/XRZgq1fRlHbDr8ZBUrXn4yAhn4KKxIQmeobPlQ3P0oR5Qs/qJgbjxWDjDFYN5BD/BLLhseXDP4zALiMMg7MQgHjRWRgyXHxWNG7J2YOQiqONWVM9OVGg5BztYVU2jjLh8cg7BEP0bVQy+Vs0Rpnidt2rAuKBS3EhJj88xG91+Mkww68k4eRfA9+3LiQR9K8n70SQRD5F9oJnhaGvt9421r0+OP6cL4S7dYrrXN0lCRzWWnWZxmPOSpwYvs9numK49MmOcjbmFaiChvWKm01Jl/uW1i3vwlpJ22EcVJhZul2Chb1e7OFwd79fX0UeB7hhkWZp5hVLG30V5YKXjH+QfJv2JHDi00OJ2QuG8XglCS6y9RTf8TVrkn1ZaLJ4vlYAz3pIWjU0pY+i5tZLEA5UavfHsDbEQqz5/2TtPA2BNIfTAynsRiCVhPTy2cXTu6Vjl+CsUpJfZnO45pp+fsFQpPalQvCOLoJWWkEK2HPkdhJn6ZJq+jTCiCu/M2DvgyDTcZFkcBywa5EEv6UeYVUwU5ixhDnVuUkaxHMFjXdb4MfWwpRjmrdQa6yRC3plb1GvMA2Sl5/hWy87xUeH6ciwJwqO0mxQsMrK8N5YSKgZdVUSZXzhn8FQmQsav0ue/SSLxup3jhw2XnPZT7l/lHGa0HgbyOgR0zb9xzoD4l0ghp+BB1p+OgklJMhO31p1lN/F61ToihjXjv9j95yIMpiKiHfy4CNVORIoqfWu2zlRiB5K06tohUQWNiGvLLcvYPTv3lS/CxM5x5W5pIanKxkTj8NSwoquYz5308pDTURn+m8vum9KG+Gaie0bK5nt+0qLp6v37MunRBNRvDGL35OlKs9y8AsDu33RYlccqOu+ySJ3IF2rcU7GtqrqbcEaOV+xZdcis8Ma6ppyKm3tcEg3zkUs8cM6ISGYhnicoG6b3r0tbfLREykWanpRFSvNre/56SatHoPNGMMKqSKN3Urap/YLbf3x04gmbgpGcJJ7FtoHg5FBT03VX3MB1r4fSYiparLY0FfWrZCL/wXyS6ehsfxIVPfixQEeZVxsMqaJ09q2ExTNxnXCZtu/V9f1ae7nx7e7Jfar2PG1bO0vrySAwcoriE+nwvywtvXdpiyCejYQlLo8uvTtoDqlarbM3DBIsJDmXTqokfiZ2XGBsuZMBUx2TPPm3m+W38peCy0eYbJG2nAwqkhbH1hMmd0db/rp0oyDJVlbrlHLjtyKIPF3TGRbxOe4XCnjTSTsltByD8LOOGdUJ9Z1cbZJVu5xk+btHGG2tkeOpsnN9l3MnhXG0XAJXKVHqhuUSf+hZrNGk6bBhdbQU0gDwpD1FHwhyVmMVSOPki4J5u0VcQopFu13tU1jAj9sbz4oGH/jXHU/ns+Khx9317++ufDWcQJ2gnk//+Y/5izQv8bFvi49DkZU5lNmWGfLr6+LO0miAWYMibdg8jdAKk4yNC0cxsQd2TOZQmVFDiSJmUvdsYJYRw+IQEDEi3AzITIMop6JxL5hQOm4aFJJ0NBZhhkNlC3p3ikfxaDLCnPPZhFLGQz0OZuJOxI2OrbgXBkaG+vqshfmS3iUUMyvKquzyfHbGlt6InHZxAiplSC6vx8olhEO+YwteT9E4BSCZcjUEJiYgPEEwgRROF4moIDD1VIpq4oiIU9+KBRI7Qgi4biC3ZWcS5rfsDSZaWQ3KUnNEV01pdvVHhxt5vOdwXHmFGyKAikk1WtWh4cvxXL1h1XZluBicd9m4cg9n97ZWVB4IJ60R/Jlx4HwSTDgbBf1RhsHSnPVLXLDJm0ft8kCk4RBnU2/cjA2KGjjZ0I3AFHUcowobiGMdcXutOdIueSsryHzpm9HDNRdIz9+izfEePjbTkBg1oEl8Kdwa5FNx5I4vtOh7om0GYiBkkgxF6bb4G9LVN3iuEuPlHY4pkv5VBnPO4pMpgkDpThHtTrSFgAKRSVGU4jne9GIWsODACypuL3LNVM6Vhp5lOSkzTYh1P++bK586yTF40bENy1JRmgzkhEwQsMIKZFBQ313Ju9RKAXrPm23PHLSda++erM9/OaL4zOhQNUtGk1hkSjZzeOq29MLpjLuy3XqgkKJuiB5jeqUODZ6petYj82oK2YdYyFl2QDS80WzqMp5FNpQqw0ol383Lf4KrigDCxW2olAGKR50IM5HkVfK3wHb8GWJdM6aiY8i2ok+mYISEvcuSE1ae+GbT/FUEgzJJcCw7U7cCSdPFnIQtjl2D3+IgMbniNPhqbfPB2oONBxt4LCUkh1DkVpwmdNI0zuQlN0roEYIA0mBqUbF6daglxSu88D0HIi58X0SeQpUWnHIV0mEyXbc2SHHSQhSC/gfZVIgusiuAn078SlfmMCuAGRmvqAWZIjGfJH0QCWAQvVE0fqNIvZSvSMQxEgIGfcqokWu5ByYw00LeCAY9kqKevP6HRT2cLjzNGXB0ek7HUyCAvYvGMylIfvY3h+fUK5/OFm1hSqoCEJCLjREcLyRr/IH/VxLvyxwkQFefECc3/CMC7R9hu0fo/FKiZ1Gb3LoEWAJoVYJRXekA0m4G4MPL7vB0mBGqB4hyGZ2jxh006K5XAmuzRU2b4wHEHWfjNdR9Q64rsYBKcb8oLOTCCxs5EAzgHIv0qN88hZVM+A0FT8CEuKOt8ZVuAMXyPs1HXyIbXSmAiM6zmdMqIjyOMp3xiJJctA2lp8l5lI71LQ48wsaMIMKleUdhs9Cr7KupoMTBHnGLwf4Bq215WN5m4ZGNBEFAt7RVzfSQb70F+TrqjRIge6IB+IgmifLzE3UsDN9v6F/cTjgkXlpytgf6hnAcWZH4mEoVF4vLIWWaAZ3tXcB2p3Zw0ZnbdpHXPpLTLLBbHojq8kgWBGZ7rE+SrPFJSY3tmjg8qXIZl3bgaqgadJ0wr1AsZALxhgui+ouAE65SFo+B5gUNniYTpGcxbJveFWa6SEboRySdA6FnoB7piNPMcmdyfrh8juTa7W6I5sdIzJDMWeOWa6aRomFOQy+is44KVGruInJJi7itSTYBLAgo28gEHd/YoZXAiPtC1EgBK0dJ9BZ3Er2jlFjoJ8HNW2BdZQlMvuEmWux70yiCWWO4WF69JugTk2ejt0lMG0i2qfWGfBv9bA30kYuZTtFbmi0YXKjFPIgfNyygUfwWPMdyaZLvSG7YNcqY3YrVUlwTlmvKJlj8ijhiYgjbQyhZSl87KDKCjDPBxu2e4KNm0DJG1sBuOTl7BLJFfjXu08BxWfBchksV2jLHLsqIKRC2iUfUEizGlGwlvkYE+q7ICtfXsq6FySVVcVKFxRfIN8Tr+wBsa6TP8AyZU8DMkJmUt+lgvPO5KXkug6rK6imqlSLVSh/Z89SKTdmoRCiWqCYPYst6CwRgDR9QgC2ZO+lRQ79oypXDFK7Mgaf4vLxl2bimrPjvsWhHMr8eCpFEfWmDz20O4aMICKqzepq8nFEcEy1RdAy/LWy2bK3mvCp77tnNAtPcjerdZ0E0BLHB1zbe6lR8ahMwq7xNnMtGBRo8COr5TO5mRb+5ugj6njIxfC5zT/EBhiVJWhTToqzVT4Z/AsEqw036PO1NIwpj0IHok7zgPzvJW9n4CWkWT9mWZKTcL7+0dk4tN+pAQsu0DzHdxGOU+S0ZGq4es6i80nVOIVdkiJJKc23eI6E8l/TtadC5eDgUgPsZhKJXALzUOVS3z2vQwVuUUlesBA1+KVYwDORPFLaUMTdQWqSUvHCKvaj/hqSviegaC5d1opo3Gr4npBv45zyZRsE1JmehXcs4cB28xdnlASoLahGca+QwNlqZJA/JB+YpNdd6Zj9v7ew+3z7B5IxcLacEoFaNVymlazxQb1qvvts73Hu++2R/a/9XUe88idPIqvZCPmn9tPtse+8zw7tmDPLLMJrRYS+VhSUTvbhACQMjLRo00Gyhdt6wDJZohJXAQ3zNRklrlA0b9R3ayWIhxCKi9gN1cJO2g/qqqt8RsN8SJwxxBljDt8ATnvBJBp44RJNJMo4V5CfyglRyWGyvr9fZICca7sovrXTcH13AsjS4RvOxfNPmB2osPJQ5+FmGOffuLaRPOlrNbUMYGP1wBhZMtAhvElSCngvugwR+xkV421UR6k5j5oTFnnP740GR9UnQUGuve/a3jww0yqdlnOS6SDSORmpSytioPCwoxv013v0RWI21ZhkCXJSamyUDj8bkNI6wrePFlXKYXjS6SBr1t5N6iJVET9bgCQMCbnuHs16uGmXJpVIHcN+7l5ihtqwrY3F+KaktEPkS8s5uGw/kvYveRKjW+MSNkRQzozIimxl3nHcCBfAfub6NJXjqHuxcBAPixEs6zv0pTd7Zx6ugUu+OQ8Nl9sQKxiC2M3MC5mYsw6G0NZuCno/Ccj6K8lOMiSJudzk7mpm3spKvBZ58iG0+E46o+qeObHASO+D45t876isi7HDeVzCfRvFFU5dnruApb74wyssLj2R+S7QamKMvvHfckB6XlGtrOYCvz7mYkKMILEqKtpWclWbkxZMI1P9YJERCGwmPuOBfIgbdOjnR91A+085CJydbW4fbL14hmzxYl/kbymap3WQDcZ8OMRtcWO5jIIgDO51oAIrHpg8DZlw8z8T16+q47oRuGSqtLLrhQvRXn/SdlF4La7oHc9HcuRSQuiu9GpDrSKeCPS2TmdU6LDWJzU1jE8cu+LXZ8QKpcBuvb+Lifl7MMBDo2C4yjOjr5xViAFUTe4p70225mVusjvhlx61muBA520EW9ewFP/qI8pkNPsZ1zDXrw/cFlvUTk/AxwcNzIGjCS+AW0lF/ew71LKedGIktPFSyaZy9jVqT0cUwBZTCZcI2k+kDfTKN3iB4r59dNE7zixztzS0swDvGdtZiFKvVRc01LFcPuD6JdOz60qpZGTgUZblRe9zARZ1G7XQ2m7TrwtdJZAsqLZirks1AH8hnJZhtNOPbD+i4xWhhPPTvm8y6sjpr0fmE5aBbhsXuw9VA1NYXU1gamEwTbxE2RSrslx1dyUNrS6gwquWUtRtUaxGpyTZl1Lz4yhZ1bxrs7yvyJEIjCqJTrHq0Ka8DQEH0pn1jGgtKeBcDH1rMugAerxZujc6tYvIELlyAuJ08Zh5JK6F3CGMErxENq7lXkDCTeIeP+aXBmfT5jPIpc8dRjl2yX+lNVtJzNl2uX8UjmRV2gkAFLuKhFrfC57WiRawhjsskv11f91LvNWKV60QtMId92qfzVKN5Hn82FW0zvRsluO8vmDVxEnqec+9K21fTWXnWb8/Vn/peVpMCy8SWdjzunAz6gK1AjEAcbwb8t1E/VPstYnC9NRSefq81xrical7dlbpgPZu7CV7CD9ApZpgfI8StjQem6fgiWTyCj3ZHuY8uWeX+KneUo9TI5ysuplVCrRJM4xYXYdoH4Bh3EH9kFBO9tIKnAr045ICQLJ9lE4VgUmxpJHpAWOCPwDjrDpYytLvze1jK8Qnv5mKBmm/AIjInHINNQnYrvIK2D7NFePUUbwdbCrd2iEEgXpF8UECrD8Eq1TZhFLV/RwiFXmte9qxlSunKrQVQy1Ozmr9uCTb6+6abmlyR0BaFeArupd9yqNpq4J+b8OWEGSkHzVvMxXTct3tmZzajOfV11R2j9FUuCHpK7L2l73L1/V/wY/bJyquOcOpDU9w0vFfXxM4V2raYfbNCPRY0pXNkcdKrhQGryzo0vLtVqzLuBA7xDyzEqgJknMGHOG4b5Ma+wEvfEUOqqfL1Iu8b9rxBjTh4yzbFZYlhJoyTc0hhVY1Yp48Qx9+3R05Cttuh4I7gFGgvIiRSIxJBeTjchnrotRtYig1n8NJZzJSW7lV4UNUSc2DFSVTnk3JDehajsV9rkUfH6jklFPOiEs5buZrK4AjqxTa6nli++1QjjMbx4WkyDtOBYSzBU2fye0DaL72m5UPkHRbDmhq1EC6FpnCFBAsSxnR6eiO+3BiNB2Mnf4NuBT8Yy8+DehTIOQv3dbugbE8kXuvK0kdU+7jjFF1dVVeCmY+5UuM9DqqN/4Q4+Tb+c9M0CwtCgRHJDE97NPfE04ZdSc5fPtSkRzsWR6ORuPbLdnWW7wfRLHLvjg4MM5KrRLJ9mGiHeX27dKQ7zL6lO7Rs+62Iwngvt0tbl705VqWySb47to0wxjv7jFg5psLmrPM5rmn/b3NjllGTS5UakmUVaf4pLcjtmIZkt6r5jktr1+q2da2nSk5YToQklNXxnQqPJkklHwaFeyg4gEvegNwpax/qypcyqwejzAMdMiOeBEbMtz+RRHTlD/I+iUSwil57Kl28/4z9ao3X9Ds0jCTGO/1QZ8WAgXNf/g7sEBia2KLs3oBPT0GBn2Yjzir1QEFzhE6PnE70JJIP/96ox+nbL+pNEHrHyfS7wxd4CFkHKnABe0wtpIYEx9g8aJ1l6bhRf9SbfqM6ENlMSK52jWZoNUPrbYnYSwWIe6AD2Jwyk4veKO3Xm/NwEC3bwjw0DiajqJ+glUO5b7OGlQUR6VMZeXmIW7VMNF2C/d+JALCEPuDIAtVZ+72i+V0hl2CYDclYQ0mHQya4IkpFEgdxXGxTBo7D3EW+YsQ7KmMeCXcYaXmiHbFVg5x3bW8wGKUY6WOatfVBuFWIa05KKNrEomZIaSZtMiYq5ULemGMbz/UtA4qsov2bVgRW1qbS1kmVqqBDELoeol4mv231yGCZsVOcQUbrJcrDwivkF1YRA3aqfeh1ivfECZrLcU3Vwj2v/UOJxu1phksxLLeUZSjGn0swqtMLrz/gYlohZHiKHXq1v/di92A7+Gl7/2B37+VBNd8R15wmfIpMsU8Z2Cz7mvYbEU5EO2Yd6YZleXL5Qy1F0UbTNl0VIuLucVvwQxiW7tpa+Ib1YgnUQPp+W85qcrJLuOf8PBXJD/zglX57IWA9qAHCEe/OwBso+AYLAKzgG1SHrzk3PROaiAxuC8WEPrMyS3wgTI1c9XNBSq7+WwBVGMHW7G6AijGVJmD590cArpmQX01JgdWZ2p2C15P6xwNmjK2cKC/V/xqw+vIayamYdOCOEbbkGMwDV+Ft/19CAsoP+FTUwEeCqVa855OBuwEkmjtMYPLvjwBQa1rFjX+3MNTRpH8EDD86MlrT+eNgZ0Xilu9of0Du3UtSHxeySwWZF8SqO4K9cRzigXc+7fOg8CREjRB/6Nu3/vK4bJ74yAmZ85HT+UjYbWQK+r8VwmYypD8BwkoQqUw07oiTpSodkuZm6tnHlLhMgmFe2rE0eDt4VdQKhzGyKZcyMQZra4GwWgUiOWMY7J5D5bcyRP6nZJrjuc1ma3OjtcHP2KdV2EoGIqdjOju96LXSbN1on4s3+s3gwcbmwzX45x/Bi+z3dDSKwmBrArp6EjxP+8kYVvIBto622hVtvGu+TweNGrvu17pdldh7kk1n+f37NeVDWVuRL8+z+GKUNPlPSxTtRo1mR54L1WT7ukVu5f59/tuKzuMmf20cHYcRV32PS9zr9Lq+Xjni6jH/aftKDEdZLxo95j/eEpi14DH+06YAml7LAC9O4OZGh34130sLiIxhihq9sB/GzffqSdIYhqcEwZX+0fCYv/XoG0dSewAxTX67AMn0/n3xpYN1Tu/fT5uivxQaXdlo4vOBfDYQzzirBGIhW1FrT6Mx57wZx2Jdgnptdbhaq9eandnpNHsXnLX6WZx0ay/2nr1+vn3ycu/wZGfv9ctntfDshlJedHHs3fdiIdvvb246OIejjWMONnoj1zg00YbSEnWp4ObxUXTckZneG/3r66h5E74JdcUoZNDdiELYo3x5I89oBlXAFQ67G53ho1ge4AxXV5ugmSHM1QhuGu8320d6sNh5833DHH0Nk/agORSwvqPWsw+r/qa7stGRQ6Kq3ZHsrN+BxYdXve4oHHURcbtrm53V1egRvOkBEGAP6OI30NTmjWo8xn43V7rwng9+mtfXb66v0cxE4WHhoBu1XlzMyElir5cn07fJFEDZ+jnp/ZDO3DeMH7QMAJLwlLBiAIQgTKGdOOvT1Sgtebx+OXsJWNCoAVqctjJuo5GG7/un0TTqz5Ip5gJqr2zcNMOka2yCtIVab3fYXV0d/s+Dmxt19Et3xZ9TOOosub5+i7GcG90uziHJc9hQT08BN5NRE1BPjqaWwi4CopKNMer7KocZJTCA8TChN+6ot0cJ/mrUOPSt1nxsDIxoRXGmhTqdXqvYnTlDWPTQW4YSAPUwegAaROiJjB5PT9NR3OhBLSpyExqDkF/EMFpsaZI1btpGvwC/w/Q8yS5mjX640bzRJJB3uAvIDnAv2C+bMNRzftHt22vFBR7Av/lM1G1Aw7zLCWEBGJJexzdNI5bwQ+npYor9/gZowvub4/BBcWv6d2MMU7oxaK3gVYpGqI6iJlM6hBoGQgvaKASJKWeO6GEaSFUXiWOat2i5u3lIP367SC4S3NX0C9aln50nXUbsMIKNGwOVFvn4m3pgAzkLqiakgm4UeohZ7/79Bjc+3rkYgYAzSuJuj/vDtdAPuRTmL3tqPm/6Wu3rVjlyHur3daPqmd2mfGzMZChnkjWcjRZ3MOczjBXoi8jY3FMMctISEhjUbt7ESAMeG8+cVREcSyyOivcl3y7OK1RrNtsTGVoNDcAQjUGeSuYDm//+/YjijJEWwo+iHBNdX3sAFjWBBnlWp+lwfJh8D3fw6ApGoS6bgg2lBpPSnN8bDAR/XV83BsBFQgswTZMTuKXkVK1iCfbfiGFBbpg9rmwC9ztD19YaHajC0LtDwuELENX6jWHrLUYqG02c8fiYV7+/oVXscymQd4CE9UX1bk1kcqqJ5QUg63fcW6hqKjaue3qDNcTjKEjHUHXcTygzW5o/jowFRXzAhw3AZnMfjfTCGkU6LpL1rErnWEn96jnLQSx3eNQ7hu24unoKWxg4lQfwZ+EQAN/XCyHC12NL4imu6xmMBZGT4YsjRkysHYlIWLqx8xjoVHePHiBxmGWIbSo3I5NgaEXGI+MeFa07G0dRsTF7lsA2IXkQ1kMIHCGiCMmTidMeTwtvxJKSzZCATCMEhALxYQPkhrXN8MwC/upq+igB0aYR4SUvqVqNM70CY3cFEHFcQJaCkYudEhwXAPv0vxnYANlTB7JDCVlDdD2l2WWwNzeb4QR2bPhb96i2v/399tPD7We143AKP3deP9/Zff6cfufw+xVoursvv62Z3D0JEwMAtKW7JnjNEdMKkbCDYrtZD990TWZdyoHv3zf4abc7NenuisH+rFK/mYDr8LpKGJkJcRBeGOqn6sIi57CxG4LLqV6BzvQs7t1keVWzdxa9hagcEsHtKGIWDiyYmfzYhJ3GW5PjE/DMBorc22plaNd2xYJCcxYrd4dDKFxtNN42/IORRakxNWsHIXjZzmB79miVNGuS/KNZlBMEJ+E9BdIK/8TqcTMlls/ScCTWdgoythTIempbJbitUGvipRVK2upq8mjQaYqnR8mxvZQohks+daOoizMp2e9v3n772G9c7Lf/KNb99o+tJYNuO7rbRAHzDX2nIYzgK9TonuOjqA8KCAjMm+1NkJkfzlNne44A7dt5LWG1AiFJfQcq8wAp6p+gBjxoP4BZfVFdE5C0Z6VhCRewfb2ivxAyKb0TJn+Pck7UaSgAtpyFghEir2f85CydxM+eKAONfNApqfEu6b1JZ7tuPedxWe3z7PdCVfNZWb29Qq29xX3lxa70Iy0K8rsbU+lRMFu5ACkb/iEfJ9EKcEYyn3gteVhOZh6+f3+9cRANoml6nb5C2yz8iWL4J4ub661ZkgNnVkms0JdqawgyOMjvK+tPYeHPkwWFnoyi/psnQJKuCgXlBX+ox3u0gUECc79/fw0tNvTdyKet4sRqRyIUBU1sNbnDGysAkV7Tbz1V2ON/vfvsyQ/J1T4aIFzwr2zeOLoaEKoudAUqa6/bu74WAr5hq34Cm5bVMm5rwAxc7RQUlwaUwkDso4FB5HzDwwafXKToXfbY+O7d+C8OzNLWL3/57HergvWzzVYw4wlQYJwi2kA2OskjKZd1ktXuZjMWlhcQrxItXsXoJE0w6dEVfqYqd8oA7Umd0pJZe1o+sh9Hlm6aKjLm1f1Fw70yLT5iQQ11bFODk+tfY/dNS+pqyCxP7yLAu2i1FlxgNh6idW+SqzDoXcwwT3TKYZRRwG20aqB7dQU6g0AcRqYmR0ii9F0BV6/KrG9gdouvbR5LijK3kKP/SezraTm7rzWVJxeDQTJFAPLav07Hs3+yDtNvCjzoAQKsNmNYdmgCrZtPYWtu4fFQp6i1nhuyMDb4NrLYKu+DiC+JFvEx76LwSYQDGDaOajXArX6LNRA83UngdRNkzBmojjWAfw017Gwc9UAotwSuCGQtylv/LBlEF6NZA5aAAlWBN0+iYcTmh7DXWNkEnMM2ZESFafBjGuuhfSKJqqCR/15v/Dteba43EZblhbfjIRRdb3Z6aMJHGkaJU3bHILEdbR6HmxvNb7pfPIRN0xSIWjgsARLVdFRDgbu9DLA0MlDnMnr8NlKS9GXUbJ971UWxOpdA6cy2M20tuIqOIqJhxyEZOfrKCOcuKe1wpZ12UQ4VslfvBo3AQJKAVSTx3gQvJ0pVkFmfXvbQ++3qsfrWVd+cUatBq5HcNNu6mn6qZjMpmY1/SBTOnKKtX/WjDqVDT+u/mZK60T4K3vPaj5uKbkrjCyB+sf0pt1+yj+jIDFrTHRtjuL5+QqgfC/FO2eD6DXrYwXWm9y28wkcdlnRlAx2gq0Kri1pv+SSV1YpBV8gkwoR3EeFFh2iCHcB2upgMp1GcoJu3qQspMA1anBhVmMz4cGHP2Oi0XaecQwjPD0axOMd91N28f99XA0jDjSTwxIafkoobARFTzLhvMuN+x6Lu9cNTfX1GUKuvMghW6zV94ZiYVsxpuAQ8gvqqOUBgErNMvautYhjwO/muziyD8hDwcTX3pCaL3UUjOiwRaWNadSQJIUKVdL9FhC6GBeBo3xuqJCyPLmHr6TXA4xkxXvf8hrrg8AGFISGaYUPcUzcmycgNcoIoi6RVvZy5LzeMlxda/yCsFMRuQ9gs6KHJBRBOZMGYweLmNqqg3ijm8ojqiR9hol98Y76gnQhYq94CmgAWV0KN2r9rfIWbTODjw47aqtmdix2RfkFSg/zZNSsB872+Zqzu8+oNrPerm53BN6qqOZnuQKrjKxs3iokoyL+dx6BD0RcLA+jOwYmtO7FCRSA+8J2C78bGNlcVe7MsavQlAjG6XV/jKWmv8f7khPwDTthB4CQZo5Qfn/RAgGyvbIQI73YcIj9rRyRPom4bU1rtrfxJOo6mV0rEMhHxnTEpkCJA8JmhmE4nrc3mcfjeblLVuzRt7CguzhmgrnWleQvp+MhVTtJxOiNu5GZqVVIF0GgoF/d2x4NMkFo+ZYkkI1PynXxwo0SslIxrQLkNWet3HAeS844W8hxmx/PIYY9sdOJHfSnRxyDQvWey3z+KjzuJGleM5Nz8KWlAaD6kY1pt9ZFPwrwocGg2RsV6IWz95mMkDu1eISdyjLQHS+E/sWGWQjm0r/WR1WYfzVDGgOKiCNXDA0Sk+sytw5658lsN6UHxXh20I02IQdUhDiVt0wABU1g1KA+a5/qsxiRNdesq7tj4mw1oiogYoP7u+G00SuMDtH9tS1NeQosEb19msx2MdHXeKJO6IdIVEUvSz/J2QGVfgpYiLkpSapMjYw0tYmPTpGY4o51ZJr79XsSP5nu1FGubuKmbSmcD6FoK5RPV0HuB121Q1ONem9ZAbBnxoyCEQVGjqafOGYsaoQlu42AENtB70dEN7dqmwk2McouEegT/CEkJ9mEsNjkfvKBUph8CkQZOLWahROK+QUagkvmz2ycqeBWKv90r8zAEwHAKe+T0kW5T7JVTudPTrnp3dAqUB0Wj+/eH3Hdq0y95Hs0QONM1W/ko7aMLREeDC02dw9IVj3FzDvAGVDykKWBGZBeMgDrECIaYZRuQ5wbpUCEhkI242Y58rah+SAcRhMEgIT0AT+/RmQRLTxPAs6MeEEAGh0X5utimQfYkysdqPJYw9MzUCej8JeqiraGjGarNa2PWnPwsY6uhZhFuRdpGkoRscVJHZDHq4ZJgDQEEpu6s2jDlpdPuEK02OLTTcmEx6p5KYVF7IuHWZ9ofIuukn+/I3EGGm/C0KLHC0jROpXSqDXCxkCUlsiFuqDM7wAHUizRst13Yhn81gKJa9PRimmMgdph2N+eBtq9Bq8U7fWZzCcAgTvQOvqhDUtoXaIDC/ApiSfD4/XEPxtvut2SqwYY4oes1PuJ67EizHI/cxfainaAPLJKl2E5cukTSWQR2mFwpdRiNNsZjZGu/R3y60ms+hsqoO5SSlOhxr/0WT6d8okYPUUJ39MRAiUE4JJRQzqIJfFUoQattoETsQYkO7pEuaRWNnnB4YtCksPZozUKni86wzAolNxzX5w2HKthNOFTGr6FvbXnnpry+j8XfdmqKMPysk9CCq/VPnPVPrPVPQrQG6vX/9qPRuid3vzU5NwGJySXwpr3i0batvUIFHLujJpUMcPG3feoBeGwDfLkN911B5Sha4vroXFUO454XxnEoRFZtJoo1jAcgRZow7vlgjAtBWWLRX70EwugKHiYKgEk57g4FKMXf9tADyr4Nyr4Dyr4Fyr6jNe3eJSi3PgIo8drQBhMHDwOJGkPBPAQ1KMAR3dYK9H05GH1fld+iKPxoQ+kqSLf4ZAet+H8KK17ZBPbL/PiH5Eqy5E46jx2nBjte6XtnQ+IP8Friwc32qf7aOEWnqn4rit/iGXqDHK9SPzFJP5Tx/vAXR14H7LAeR8dlmMzTGJqw71mwjxqnKKKShtIjYIc9U875aOj/XJxcdt8ISze7KCt/1Y7eGDgeUFEAw6Ku340rwmPkMBL6foO/dOVvNk+HhhLeNb7je0OqIO4aJspVjxvR5kFqWZq80YqvlRlcHfN4yHzXbPvtNt7jDaEJwvZGO41joolNE03smGh6EuAgjHVic5pA7Audw/SqWi1U6IxhHM20NGJMIAHRUk5AWbY6OlxmozN4pNyPBlJHHHaTowGisWMAC4cF3bAvbWJeasmAEocoYvVgu3Y87BBFMrEzlAWOSAVx0ZKzFqMOCz1lxyvcSqnmJ1vpRKrvHm+gEsU7cvTspKBn9wGGoGf3TRhG4URTcd8hqLTgNdiCd31tWmc8R6Y3bOQDed+DUAojSlG6iBEerH7vojXZhBYb1GHVeU2ko47cvYZtvbAQsVoI8mUQawGkWQmlWLk3yvpvbDywzzLiaTbZFT5egSjNN2l7z770xcOUhQnaGifUsLi5AocR10XnpUjkH3spHvV9eBSbeDRpxIBCGl/uCl2Ewhx3qTidykqbrfa0qM1hyi+U7upx6DB9s3SVl4qPo+EzBMkHCHTrH19+rpw0TrW/Bt4fW+ui8ot4qxw9QDccrq2FhTcP4A28MGMbTV+PYTN84/p6nDHKM9AR2t0vmv3us0i5ZUUAeTxpsx+tbh6jk4jz8AE8HLgPH8LDN0fp6upxt//o0YPr+JtvvpAPGptf3o+bjx59cZ18880D9fTh/QQefnX91cP7A4+b/J4BQnc+5E5SqxmT6mtM6j5sxqswvqM+TAo6BCJAP6FDfEID6dPkYIzqJYyRHzZx+H2a5zfffCXff0WV4ZkK25Q9/s/DbvfB4xj2Q37RY2ehxkYYq3VsrsIKts3Sm2T9KSn/AMt3axYCvjLFdZi2CN7pd19HykM/pHAey7efEYKsKhhh2urR7/v3S0up5kTRpmC9KJN8G3UsR1Kj7mOYTRQmq93dCMRl5PxcXVt3duXK8WAeQ9kforZ6rVdWv3/uvn86is4nSewUe2EUg142v3Lev3SaKRR4ZTfw8IHzfs9poFDgR6PAziiLiiX23RJffeGUOIjavYYRpLwTpSPOpkd3hgGlIXLOJ6RbIrwCiW2yuodGRBVkWrSnqdNl58R3IE55i9rSdrTKJ6mrtf/UoH0ZpIEqaafX+DZa/T5a7ZPBhA9uTeoTyQAC0Cx6hbSLTcOfQ7KwRDggZxejGM/d++S5MAvIWAoYR+lHsSHhidcOaijOCwfDvnmA9KOIeIysrfVd1FzpAv5K3YMGRY5aUmJACmPWOYzY60A/+S4K4SE5FgBMv4e9thOxe2y/qU5ahVvYDhTsgTi0iUe0faORBAPEeZvLALWXeAyWv0tZM3zfR169G7WlpbRDD75XD4YNEFTFaTdK2fT6B/Ual1htNbRp0vvn1nuDisoCL4oFzM2myr10OxKbSRV4VWjILbHnNiE2iyrwY6EJt8S+VcLccarIQbGI2HJYRJw9tbUfvNh1r8dvsndj2m6AZKuxiVr7+jw5aiWXSf9ilhz8NgK83d/eOtwODreePN8OdneCl3uHwfYvuweHB+QopL2AakEDBI7dl4fb327vB6/2d19s7f8a/LD9K6bauQKhLP3tIgkZ7Zu18OiY4//VCA4KpoGSE8uYTyzx4L9b9ICFp4/xH8M5u42/Swz7GFnynj26QH4zhZ2GUG1FK33t2YI+chxMDj8xYDL9XR2gGweCSCv67vm7NhY13++jXTo06JMyS3RBo29YrsXIHylSBcVWQ/mH3pNpCrLe78m0+1NkGrkP5ZKGZJiyllU81c0Pm++HnBYCI0gPfn15uPXLyfb+/mMbGw62n28/PQwoU+nO/t6LIP9tlM6Sk/MonyXT4Ofvtve3CcG69Rlek1gPtl4+C0Ri08ew6gbGHJv9nzbfn7YAX+XB7+MBDarNeGnaDz3TQEjR/22uRT8VHF7fqbFf0kKxUqD7lq0w8IBDPDgKJdQ+Z5DVVhNr2zDQcI8AiILnuy92D4NNAFVkAcg4ZjPBJH7BGpw3Npp8AkebpsPeIImBH4i28gdyVeAxcRmSVTXo/fThJ5t3DFGkLLarqbaPxAQtsvQpNQXdDoa2nwFB87QZnnVTHYd2BvA8K4fnGcBTnWpCwahxFqZ04Hm6utlsOkbZs+ZNr3SDV4X9z4YPEMHQRe5BYSnoaDApXwrPwV2HDw17oMYpo1snNcGggWDs1F541nx/9ngIU22ni1Y0DWu7Lw+29w+Dvf1gf/vV862n28hK9mBpU5vHUAwDM5Hgp63nr7cPgsbjMHiMLAXAcWzSigEsogvjoSCiBVudIH691o+v9w63kPZJXyhr7QaNn4VRNcEOT9nx57jZ7FDL1vINreUb4CHkQC/fL/IQWpT42TTWHvHSQsO6wq9/OiF7BtsOhIHFZMwhX/KI8kOw/V8fenQg/DvVhOPSCfdwwgA+d8JxCZUR54P29Pru9Obb7P/+Z0xPkNGne69fHuLOamKcUH/RdHsFZiTZT78TeVjKkpA4+VNZCiLwHPxOY5dLr27egk9DL8yl74AFR9GfiDoGuOaiixLe0ddP+sMaAOITF+FJaMAqIVg17wKvetEi1/HIP+kYTwnuSAp+9A3ebM+hi1LTQJgfYrmTk3qtXHyhTER8xhNboMODHhHxEhugGzSFgb7XQE0qCtXy5O3kpgyaVjhjn/3UDR7Uj/4bzhalCiaaelwSyRd3YvfU8bF5sNi29EFx3lWr4X8bdBRgHAEiiGMTxEfG2+Obdi8iQ1a5t1cJRpbtRDvr4IJmbPR9tr/3Siv0SpmPHJ7mYdlqx2mRGupwtjljugozh484H9+AsdM6xMsxzQmuG3ngDopUCfsvnHpopPQjarM9/xQkLNLPOBKh6+IMxBOITEEVIlnn/fs1THQHOwxT1NlvVlbM3y1Rbm7YdhKZ7E5G6azXVG4IDTEM89G/0EC+akIda1kEbxCpw6zaiZHY8iS/mGBSmBM08NXMCHHf6Dn0KbRecdo7ftsMYT7uDDfMwPRIR4PikK6vrbYYVb7ZMAKviwzt/RwbEFl3lDkEuMWrKazfZZch6/hiN0MczuOGaWpxbSjWsZuBT2Zcd3GI5exV5Y7ULFYPE7NJFsGxttnpfwOkvr+2JtmzVQqqo2WVoj70OVXz/v2yZUJj3xzeeBbN1y3mi1o9LWqFzkCHAol6esarkQ6/JxtFb56NIp4n+rwpDDucN1Z9OGuO1xgaOViobE6edQFatylDFUybQWFxTsmYjuuTqvWJhSn9zA+itKnNDKUg8ZsZDBs8IDgMS9kbzm5u5gFwtBwA+TAhNiRrOgcpTj8y7KG2iwFbFnrGkGMNf3l6QAfb5aM+/8Dd599zoSmbsq8Es7jC7BLeeQO98/QUYA8KMXZgzDHyzFFCJJ63Mce+qUJbeWGmht+4TDc7p93srjZ8p4zi2Dt+3nJOokXu+OU+96UWq77213JFIjKHs2OUcn7vDCtYtGLhYoj/d9QxoJdpDs3Z43wTnSgTsw3/eJHNou3LPnlAqWDvSHi+1V4eoAFqb//k2d6LEzZI7W9vPf1u+5kudn2NJD8cSNfAeQ7vv0UqYLlUcg/nS+krprdeQcC/teR+s6zgbovdxOQTl8m3tRzlFbk1I/Dz3h7y3p7kvf0iBegxBehX4r19culaWi6dijVD35XiKbaqqwXFBXEp2I5KXoqqsiGj5ZFFKTc70SM3NUsnkhSx1zUSuFAQcE8JZn0UzHrNXus0yvfejTF5STKdobAC+/PvUaN31D9uPtb1N47hQRefitg8WDvPSx2ra7wk1JlFvlxNB1fnvWyEojp9cV+ggjzFnCePPeRTIr6Rm9mKsp7TXWQmKQT8UM9X5HedgO+xHFtbdRheRF103zNUENWFStcWNR4yhXsbdcXD8B0AgbBvjSX8tTiZAaatYdz3mpD2a+FlJHMXX0WYSfL3qDwzZrgFTSJCZePRVS18In69w7vUauFTqH8ST9O3mLgpyq/GfYH2tZACMcWv9tNQ6hrtAcaVEdST9nYoZJ72s1AQzPZOqHdM+9uQAjLa34WMe+3dEC1m3+O/efuH0HQIbD+/CZ/B8LaePH22vfPtd7vf//D8xcu9Vz/uHxy+/unnX379V9TrAziHp+nZm9H5OJv8Ns1nF2/fXV79vrH54OEXX371j39+vbpeC7ehlf/8xwqgR5j8pxbuRN31//W9ahz973+OV5v/WQ+/RSXrZDTI+ycn7Vr4XdT9VjnA7cK7aNob1MLv4RsuSi38Ab7l6cY/a+FzTIpG317Qtz58e0lvN7+qhXv07eGDWvgK307x2Y9UDp/tI/aP8NsBffvqi1p4GHW/i1Z3Ve+v5y3zT7CSitu1X4WGrNn+MWTp5TBj55f2y5Adnw5F7fbeTfiziQrvkt7Bj8/9uHCgceGFgQs/KVx4rXDhFxMXfhW48C+JC38nXDhhXIgiGxn6sIt+MYdkEuWfp5gDbOoM7DTSI0NbgBram0iN7SxSg5tE5uiySAwvjeT4xhENcBTxCM+dEf4GI/w1ctJLSuqCgsz1dW18cd5LpkZWLaA67jMQeNL8ZfSSWA9/wwC7f7lN6/RtkRZ0KZtCh+SBX4HNgAaNiU9VFpN4dVWn3gj/HnXJuaSVsisUCB4Fwuhm3e1WyLp7E54QHYp6+G8P/t19+Wz7l+1nz560n0bhz9tPAJnaP0fh872nW88PDvf2t77dbv8C8Ov3uke9XksVb4nlhkZaXM18YlaXzzHuvntUM1emBsI/PqP1rIU1sfbwTSBEjTN40b85/GFowheND/BDGoeOkReAwNeIga0PYHKG00i7VgsFgvZ7kvGFdKt2zTDU1EJ0LWl/8fU/N/7x8CttXGzjCOgMdBKlUxiKcE1pw2INe6asoA8JGnSwIHLVd2x23WsiD/fwbHmS0kMeHA7oAJiGTcnykTkPYA2PBsfX1yQPMtd6RkUwBJMe2rJZF0QNWO0BAIXf9s3HngqhKsldHyQzjl7gh7iTuUPzKecYWNmUNdnUYxR4N8Urf3p4f++LZHaaxfnP6exUJBAQSYQT0XDDHGiLR+F1x9YJRYwsvTw9c8dY9+t0Gzo8/bHB+Nsz1PyaVNqYU9PQaXRq07rIbCrl8SAa4EGEgUpGQqg8iVs1I+cKm9JoVArDakKjItmTBMdpQlchN9b//fP6MKyd1EBJrwm8E6UliTKcsXrHngFLi7rKKaSvY+AWWvI2BgFzOQhJkxo1XgRxe0gk10Rg4fyFu7FzJ2oa+9jqMjpum7/xlEIvqonnFrm1ExAV7PAyHg31G0mgEuv2HoBEdh7wK0rQSNGoaTSedYI8SdQ1UOd8o5P/Cqj1/yOwiKFEdqUV1aPlzoApSowAoqQnqVbN5JG1Jhn5U+U30xk+SsmyLwxag6MhKQKNlX9FQPDCM1iL6Ojs2LpXwcCLs+PCKG78ljqPDF4wRhgA5M2MpxmrNZnjMsV4XlQakjjoXVEms/7FFO9wCSSEwr4RPdGz7SZzM1qG/RtgRwCbuBv31K1Aj+JOX2foiJF6djC5Cp5xYaIVzHmASmGDJfk3Vh6qE2THOp1XCpSrUdtPaEkBY4Pnxl1igomQN2dIFbsR8FP82w/xAKVTk7INbZbHgAXitz99p3ptlJQq5RtA4fabxsqKfkW/N5qFQEWd9immTQF6rb2BnK1j558XiHp9LW/T0RWHcm+XbDuAQXRsBgrSA1P7NgmR3mYDzD3UqjUXjhwGcKBPC0zsZFw0uv4pMlrrkVO33RZzqWIbOiuXYnllSr1M1CDYA2XzFtyvZzLHBtpUxRtvVi5rYHkplPWpWQM9Rm3a2pVfGlYybSO3WeskuZxRFl4MB2xiBCIPdtgy6U1DtayLmKmmvbRAH/QLAgL7UOUAVkGmuBXlYdHqqg6BVBGRPB7xS6GbOqBMdHqhm7ghveMMpHqZBdHbKB3hgb7KmHjOZEliWUfDQws1GkVPadbqjcjjtKHiTxviCqchG83+jpICkpYuoroYEW8kxFbeqUnME8FQWbzTA+a30u06gtVj53dZVlc7zZTYXeJnx7OTcXpnJWnlTo82jk14VFoNX15YBTKDuQocmy/tDS0pkpwGPSfPKD4zcKM7Xu7IWW7QQBsO9JgUOQ+dPcvrnHs4JlBsvIvOLi92olUchHB5m5Vd1oNHVkXNr9Gvn9hhVMINaQeynCZG3MDEbT3hIqCEaIdWzlvDrkdyiGAQPZRnpPXyUY8smFMxxQQh4kyTM7RKfdDKAWtIsRHp2dENpgdg2WPYMy5aOYWBv3/YfnhzjLebhUdfHDcbX6Bxnm8EXZdSbxvv5/zn2sZXaw++WNv84uEXX35JN3euf/45/f08yNbu+JOJhq+DQwBBgPepoow0iaazgC5mSoL9bwHMp/Co/4buKg2usgtMGBqgUozXDkxBTJ+1A/tzrRq+40+FhlEiBoH43bt3rekQB98aJ7O7aPh2H92wACUAeMTXrcYBqndTgvMeRiYfZBfTfhKgK6Eo0oKViWZAP6JxDuUiTNVez52GAVtB2bsKBlNQCGYZanRBNI6xXVwd+H+c4XVqdGlGimHPmGIUG5OLGWfyerUV3fDHQrd1+iOgoT5dcQ1IS7y4vg7epzn/aAez6UUSyp8HP33LT246RlMteCybMp5gO4Vyra3vt36xyvETURg25Qu+KnUSzUBxHv9Nkf2gAcMMAWD9MFDKefNv76kDpDP73+oBhH+Ts7uI8Kkntbouck5FXkRAm5x9/yJ6k+R40RSNERX7VrDLGn5OyDMEAjym3z3Yp0FD32LShHWGV8Q1RWviz/8Huzw6FzGGOMLpiMeBiYJf7z9HRAIiN02Tt4ldxfD9Ex1u6WeMozm9AwSn3nGIgH6TDK8Yhnec+JHRs04TSy4j1MlA5x9l70RvpR/RdO386qkYQK1lY5a5xHrhYIahGnOTir5X0KclF5ci83UjYdBqtdT7dEArjwj6y4vn3wGN2U9+u0joQuq/maMjaUu/xlUHjmDXAbnB6vhgd1v9vglEbKvqb6uPF4j8wubTat1ZVUAJTvvTLM8GMxr74eGrmjGAG/XNaMdz26kFy6aqZA8Hhy3iZ6E2pYgNut3gi+D+/UDdxHWR47MHGxvuZPDDMs0JbpATuVgnJ9C5/NGpWEXF8RLe4f22TbvqzSIQYFKT+rfbh/UwINxBkmO0YZbNUYcR727m799XeweHdGkx1vsz97Ew0AeUNUNVoeHhk//aTd+iKRR2Ps5p7v5/ncux9/D+GATnTAKEwatKkwI2vTjvASYHR8edT2TkExmZT0YQiyrRkZn4+h2lLaArIEAtm62hQlILa+ivkfYpBfT65RoIuXjCf74G7Yrc7uaaYA6FRor2fEoc7wOyuHIKIVlnJK/7wMnILpIrB6tBvVuHf7nL1/u7T7NzAA/eqo0dHaXoyL0UkIh+ik7OshQAdr/eLKOnsFGZXka97G2i0QmvpdDElA5AiFJNojzH3SyPEzCoKZ3lynfES1CRjgqialBSuufLLqgIohrHryDGex433p2m/VNWsHKkNThKPaJIO7M0yygbqN0vuUJlwcaozgUX7z4kBjAu6IOyRlA+gYXbQPbfgJomWbj7RRSr8hdaRD2iiovI594ffRFhXNCHSFhQeQGh1sdcQEpt0kjxdO/76G10QGfgUhhp/pWWlUYqBlZ9banWx17ZsxxKdIPkbTRq1BtIiwvLi1S6WS9bZGzgFqssFGYSZKtvWXFFsru2Ld3H4GKE/Ogqu6hPEymvYt2nBz+Z0uifggcwhnU1gYpYgOOujAS0V5MJuyBCNcmW9VHjg2Pg0JpFB8Fj+2U7qIf1Zmit9SgdJwfJJAi8LT50Wnxsv2sHtX9PH/97bIoTt8TVGSIjDqKAovZ48TNNhsnlRIif+8lw+3LSUJBpFsvjHHNv260cBKVZQwDBUxUDI2lYpvyOH5KaOIxjoxOkj6gPaTYOVldTn4CE5TG9TpeHBCKQGIAefVHiVD2ddTfQW6wLLciOzh7Bl87q6pmvN/yg+Ablj86O5fV8/3u0sfZ163j17+vNskpi4lDJ5u78zDNE/NwUnhafUJgpiYfwrVT4w48iQVjFT4JAmdkex8G5bYO7aQpVhsxvvAM7nc8kwfpMbPm7N1vKlu/eTK5bvuNPlZZvaSj/I8Z816Zy3fJd28o/OtatfybYi2kuv52x3GxJWsu7zm+2gLslWzuOtXznF1WyYCz/bJG1/LO/vecOCvbyzxQ1KDeY6zKGxVwOmAa3v/0tPH+vC5IbWxsI/WeCwgiisR6waQMYTQorfmW1srePjbD4l2NloxqZigB7QBFPhtk0pcifdJiNs/MEQHClOGNuNXm4v/utXkIDzupt67ut5zuvduHtedSCv58HrS++/vprT0F4KdevUPvz4IGnxuHPe1ip6zZTKL17sLsNxS50xtP6NI0B9vVm8E2w4Rbe2XEKp9NkkF36CtM9j8JmpoBJRBU2JfJj3GQA1xwIEV8nz14fF3zpFef5EbubUvdmk5RWQjVGWX55zYLoYpYBa0yR41y1rIF8+3zvydbzA88q0HwYsuacdtSkVrrB2qZbZ+/V9v6WW4cu6yqr8fS7/b0XLpj5Nt6yKgdbO1v7u04VtjLKKmggW9nX7btN/Lz95IfdQ6cJzj5R1ivgQhEchyZCICnw3RqsSqNl0o87u9tfFRvH4sFXZRX+UVLhH2UV/llS4Z9lFb4uqfB1WYXNDX+FzY3SGpuvX3lqQPGuXMZScPv6p9bsEV1fux16Zgr17Ipfu/U2VL31dbXLnpJjBOpCyDZm0dAuIeqz+wSWMDWhbDJrcjGDQpNBnXPhk3ELCrXUb4Pk4we2t6KhWI63e0cXQslYVW6dnORvhycnTbM7/EinL7eg0dCNPUB4DV0CMxMz22Yv0pcHjZohS7172Mqmw/UHGxsb61CjFgY1/NPs2N3DM7T2bs2AcYACnTRAE7saJfUwqM+ySRuWGWTHwYy+TLI8pTAB0MLzbASl64ube5fGs1NoTk8wGwygyM/4fHH10yQdns489b+jF4sbEG4tOKHN1ubCAc+B4uX5aJyvAyDr9A1bLIf3nXRUo2/tS9Dl3uDPYvlN4Mrr/N7sUAMLI4vG8dPTdBQ3YAj+QgLlAKvgb8fBNkQHeIPGhOx8AiOPD/CRRu2mg/NUoyWRBag5qPcKYZCk+AoM0sskLn2bA/d8c1UvbB49BacW1JkmowjPjer+nQTkYytmw8pwml1MBDsfRP0U9GUkKzVUD/EdyOWj6ArwqGaDZnxx/pyeQ3ebG0Y3huq+iap7V5WUirs9DXKaxEFoIshbu+EUFIjUxn/C4itOoVsf1j3vQCiett2OFRxHUZ5TCE9Q17NGe15arHBjP7pxMR0gS1djBBEQtwHoM3g9AkhTCtQFOtpi8B65faN1gGoU95KnrPgUq8xZdWQacmzEQxAH5G0oLMWxZp0wkc1tDKi0aCULVrZYpQtlLhKMbE0Oqe6shzHxudsdExx5oCUYkqYEN+WMNwBdKicYArhANpBwnMOHn2ENixH3zoqMGOnICmIGkk3sxLtnYm6r2pYRrZVvG2zNhaWL2+aQkAnDHz+iyYwBukApGAHPCIRxgqQarcgZ+y1E06GgSqiPoFeG24J0odAnF2iAziZsMkAyhO1IWM9ZlWqi0ZhsnHOlDAfHozJRZZyHJDUh7E0gGxs0kqzS2HSKsmZ4nIwNYKkCchhnypllXy6UVFPjXNBZp/gaGxOtqC3obwg/oiEuWvc0d+PvgcBO4OCuojqKwPaz9DwaYtfAJcWAiPW3T4HOlo8IFsGVPDyCi5YkQLDJQnlcJ0F8lOFhumc27OBRsesG5d+o3HY5YfMiDMkA83CFCnwgstCUsB0YtT7VVK3jXDpVxk1YBbVgB6MF2e1Kv7JEOOjdbN4PfRoMEKl5FQuUCgqUE6ody8UqiuM8AL5nsEeWyZ+DpkBmTP55mKFURZdpqJZ+Wf8VOFE2jTV5Os9AVy+jbEzVEqJrZLYRj1Q5lYADD8bYd0z1kY6RtGEwMsxyMk3yBC+5GxZ7dRcZgxY5oRo6u434uykmABJ4qSlM9QU2/MuvBkVtJEVyKg1OGAuY4E1PEZrrACKg+zpsMGnNgBMkRRzhqZcrigmyd1k7FIuCFtQN+eNX/nEZBleOEC82RDIS6tYrwkWWxpUJFXdIYI8pznybRna92tUtIrJ4Nr0cmFkUEMndU8G7Uzz/aDR4kvYwmyWofknwmAAR/cUocKWe/toxy651g8aD4POgQQdUu+hVJM57Wr0svhIqRw/wLJniZFijRaq9YQ3gaqmWYK5lDQHO/JzI/RoFZ9HbiEP3BfbTecAlbcCrQCxRYZ8f4WIfl2/1Z9PoHR0v/xJEl2lesi9xm/VP6eTJ2o7WZoihqV+2oJHF8h6i62SaoSyNItaEY/3TJLenj4Nj2UANTSIsVmld4nOvqHglWtbM9LQXTfG8GZ+ylSFYozG0hhd4gPAkm2HMMwuOsIF+fYokpUESYD+C9ToH4vAo2CBurB9Gl/TwsfOsHTg1v/HV/MatCQXbDhbIGUUM2A8VfpnJqBKoFJSLyJMIbTlLKpcxVHzxfvMmeP/gJnj+/iF8+eKmjtcDnkezhr8OjUyvBW4vT7fyczXnHc6LbFD26u7jgs9r0v+qWVJlkI5G7UDj4NNslLkGQ/kB6SJ7k1QtXefia2xHa8s0ULryc9jmPEFCa/bkQ8T2FWkHm6X9nEaTZA2QAYgQSj+wakBc8sl2PExy36Kbo0Nvg340wUr5bxeAUvVi+Qp2g++eAGL/4uxu/JC0VNy+peI8z1bseTpVJqIarNMD9OSRSWf887rkP92KSJgDjyVm2phPTcrQB4D+K3W3qH6waizrYdp/cx5N3+TP2VejAE5c93UA6frPQBumA9ja6wd9Oh31Arlclv8zQWqT340mwIWJ/RXO4IUgwo/L4UIUdBHgC71UBzR+JH4u4gwgbpXqaWrGBoCKkk9h5HZpiTUVx12ijFZjVYtnMod1+hS+OSti111ydcoVSfyYcsVMtlUkP54OvQAgyT5hUnaRk3WHBu6HtG71AAuVgtT1BmsU+UDUg+37SljAkWqrcT7NLkB2L2cPi2pawgu0MKIKsAjGRkQM0U3itsT+cGNuINdpggzjtX27AKlK5c0P2QKBAL3KUj7XdyhSCarhx7MB5OeySKtwyo10tdK0N1lyQ7HfSzEdaHotIPKDRg70TAheROOLaBTkk6SfDkQABurgwn8ftXE/Brtg/jD0Wbgi1mpU72QOCPBDJvcIXUklq7SgWr2febDmpVcf6Ai7/DxIFdWx8AFe3g69Fgru5meBEG9+qgn05meBcG9+5gr65ue2Qr/5uVwwGPlhdlOxcNVGkQ8tLlkmV9jDW0beNz9/lOxv91nQA2paD6jNb2AOuhfE/Tl15huVpemMT6bhC6aOwwxayHHR+CFlXDJQlNBBm/fa9EIYgfly9vm0rsixyKqAlnvr6TspgH9cZqajLe3uUT2rN2/bsb4/9zZ957wat5i4uz4eoUWMC3F743Zk+A9nrQeMVx+du3r7uR2MXOFT979YpsNPuSS16ZePdAdzxSL8LMVG8bMEK8XP8uwUP0uwVPxUZqv4uQvWip9LWION1sZGFa4gP0uxWupkibLVWC5+qrBd/Nye9eLnz2C/3O8HsGD8zNnK9HreniqpW8p0kbXM5bQGY5jPcJN4OOdcHT9/gOKCVA54yl1pLfMlmWKnkuVKe4tgv85PyfUe+x62g1tywkLAWTKuRt6lWtYlLwaLljeBmDdwamtoAqiA/6h5zWUW0NEnluB+PrGETyxh/ucjsASf4uY1h5J1lTLtzKYRSdFIydHc+iufYoqEyL0EnTPy0+zdeI6xlM1uCF3Qp/Jyi2llKlBx9y+36yvu9kq7/EN3d5GaVt3jlfd29bNa+Vm8sxftaLmTbYeB6nv6j97LC/bwnZr1yrbsB7jZmd/VluZjRPeAwyxc5ZBjSaMBFr2kLrX/A2YzwSdlG53dVNriawnklDG+XZD+SNArqXYxTmf5KwztNKq9Fg/n1snyWbtQBx6WVDqPLmXstnHmEJUx1PN07CmejkuKT1DhbjvFSQsvqUDO926FfXxYUmF2ml3kEdUxTtPEw5I6cdJPzyNcEqPOM/Gw3MMiFYtd2NQALms7lzl0EHGdYRJ7XXdHPvRsIt/O4oQaQ3T08p2be3Gs2Iorl2v0b41MI9h8YR0bKLHDyCGKMw75c7UwwD3ysbssERWkm1UFHwaDIsw9uV8NviLTnlNHU93ra9ArSkd6VTJSQTMwI8g8wUDSjHKCgZ8l5QLosx2YNEws4lF6PKea3PfzZOcrUWaeN9RpNEqHY3TtwXsnSrEfP29l0Vk2mVduFg2p47pARlqFeRUGGZMZY9kBKDvwNKDAf3o+E4/mtEOXEBXaOYCn3I5lKpjJVz5Wrl6ugsQ2qwdt+/E8QaSXjeLiIJ7AU2cy+GhOO+kMwN1vO+3s0lOrHX40p6U+ij5td0QkENkjoke3lxPwYzjfA7NJzy/OA8IC5OjCSQDj45MxpqGPi/V9RiE22sxzL2FCI31E5vhultKF25CgeZhICc4EVWHcYlaxyPhgSCULqAx+oGWVusVi6K1ZtoPxk40ih1wkRE+mFHXUtttcILzIDwcYuBLAIilGda3ljYoCh/wYckR1QUJ+DM5ejbXLT6mOrLJLdf98zlKQd9TEmPJJP2ykfQ1PqSZfQ2DjVxN2AOD4fP5UFCxKxIf5LOwT9wo+ca+Pz72Ac3Xv6uPoz3O9aJdVB8o0HNJ+JQukX545u5rDJ6Xhv19p+KQzfKK64vPfR3Xx80lnoM8nneGTzvBJZ/ikM3ziXv813GvBcRhyNHEexojhL+7XD+a4NvEC8vavy8yKSDHS/OXFaFRghs2gNCwyGg/p0MyG1BY+9UwfIwizbAITm2YXw1MxQXdu5gzmO3gt9Ki2FaRGSeguUYpiMG/To0LNd1t21aOy2gudoCqoSevBA9JHUlCYxLN5LhdOEB6FDrpBeBRkaBWq5Kl15YsZbJhpRx8HXwoFSsVa3okGZY6CaS0myumR3OXLlCM/1Z3orqrIdyVzvVNl0T9V5CsfFCy0SEbATzU5AT+3iBQiecEFxXw1FD/A6i9vxdzxs4DB40dybnW/ANM5k/HB3qGnTVhyKQvAynPNBc2fLtn8lHJWBpWEDvxQzTb/WbQCy8oe+FkkN1i8f0Fbd8e28XNXkhF+7kowwc9diBT4uUXU04c6SpdF/yxiYKegwQ5T5fksfpYNfyFJtpssc0kuIXkeQcAwla6phtU38jMu4d/ke/wnigAmy4ff8wGLHx/zL4Tgc4qBChy/Op/FzzLSwZo3KP65BPqXt5YfPlwUqMhx5YzvRGbwQuDOpYpPQoL380lIMD4fRUi4UynhjsWEO5UT7lRQ+DiSQqldQnydl9ft1zvJ6/br1uVd5XWzPfsLHE3kU/nFTOlIaSjtAAKZ+juJg8hxolw2edSlzj7zC2efsSybIkub/QxzfZTkBbILirxAxsNFeYHmDgeU/gqGq7lH0h6xpVOKYLISB2H8X5x9bh7DsQWkeSbuOe/myxz+emV2WSuo6WpRAISRrG5h2XlBEle2TOOzMztFlko/VyE44i7Tzy1LJcTamerJd9ZyvmVB30jKJZ5Il4Z1E0amulEy2yv+UxDQV93+SupjHKauX7lbCgL6pUCEXPHXycR25ROJ52di+yUIfL2slTf4IRR3Qfqy4oQXUt0507DrAuC+rH5YHvQvctRCKiWicM8RjFW+gwQUpRh0m6QTd7GBMEa5IiC9wF2U+K2sqi2zzE8Ih59bxVaXJ7x1P8twZPPz/2RaKd7eFUIU8bNIqZQf3PdVm5QBmIuLL51eaiE/Nz9/FG+3+/yD00vh5wqziTO5Wc4OOTd4WZz1qjuHRBTz78k0C8o0PWhQ1L6UisvCyGf82FytQvSzrOTLeV1IWSjNiw6LrGRenH4QuzTbqco6l5EG5Kf6EWK5tLOcHFJxdreVom5nIfzEJz4WnziPWhQOu8CPGZ/p6649Mk3VNBZL8Js7G9rd8isnbP8T56pQpxDEUDCVPYmmIeX9DpJZn+CSo8ZANr35lecbiZSw7srqRSV2XtxCiQq7rMI6NzRCEnDHprVI7yzxMKpI7j+GonbbXFYLtbTKKazmrPonzYs+nzjqf5Pm9Unj+n9Q47q1woV/nasmVii5u3QAcpWxcnig127lWxUWOpp8IjgVCc4SPL0iCZkvQ1dspJpkslzX8OyTUemvI5pXz6JlHGPPCxuw5R5/Hi2P25wPYQyDuh1jWyLLO0Dw5SNaKrK4oqf2mhNkvCbn5lmUCq5Pi12eqtO95QNyL82gNYsi/cO+0EjFWHlNP2vBwybZfyw7WBVHKRXpW1qzTOCSjk1ure/Yyw6YofBlKqn/tqT+T7r+fA8o153pap47k+UqdHU7j2LLFUq18QfGWVkuSmoAy7kyWy5Yqo1lHbUt/ybVSnVH6AIJXWzC8EYHz69VNbrXM0mOwzW2nIxjtfZJIWCWnqqA2dY0mYyiftJY/3drPTTqUWSqvVlVqKvvUsdqIaHzSVlFn5pC6CeNbmHop13KCv2UkCoP/fSEfP4hBBC9Q5eieypqtJSyvV0cV1qZbn0ozfpT6dWH0qoPp1MfQqMs+uQTzyzRLPj/2XvT9rZxZFH4+zzP/Q9MpmckxZK8JX1mnHbnOlvHZ7Kd2L3kTefkoSXaZiKRGpKyrU7n/va3FgAEQICkvCTpHnOWWCRQ2ApVhUIt3egoOD2OEpUmRA9ZIFLuGkfR1dVCmVTGZH+JieHcTdoOIBqmqtu5qtVORcRy+jRU69XLZy7vC2WdYdwOoDRJqYrtD0KM42/ntnZymTt52q9GpbHdL5cTfM5cPVBEa/VWe7LFJOvWqknpPO4ArUU6JlLYP0Gm3HppykRY57XruSOudTVdMrflsfLImMD8+VwyVIpQj+cv+fnCNP2Xf6oapyDohkdhnNxzKGu8KYzUlNywW90TZGAZl+ZL2UsVCiGpgWdqHX49l7+P3JMv58iXBrP+bv5zT2Cdt9g5Dq3LzJVDq7BcmJCrOOLa3YcjrqmrUW9BFvIdyppCUTWFoZLi2HGdI04LiYwG9h97mqwI+0pQ48x1aTqJwsRUxakiW42CHD5SmHM2JWS6+sZEoa0Wch8+V3k+bXKmQcnuIBx9OCLzCrvQsh419xWky3GrQcobkZcMENeyRJCn7D4DbC4ugnEa5UmnCCKYOSwcJ0c5vMRXh2GsHbvt+2roQhwmxeZYMF66Gimvpt1lTEfgBpCLFiAXDpBUrlwXWvgKf27nuHJZnisZhm5Z1nMFiOZgXRn321NZyUXrJ60AZeCZvRVLKPAAIVlsS7cPksM+ioodGER8MIdp7LDSv4dsb6NV0BYfvScG26JBLuhs0aPlbvaJsVCnWdWvkxBD2R+8ohuJINTIRBBPwyMjV0bwHb0KziZx8mHrOIsOt28exvBPejZ8Pzu6GZxt31y7GSzo/3nA2zfvrM3ObvK6iB+r39dug11sw3ljgEgI28iBhZ2yS53K5BBAx2yurs4yIDnZSbSDh+TiFWbShD1w9iwev4b/BTlQ88i1G5z1XK1yAdIcJ2nihFXVNLnVQibCWAvr8BBydWevyKJiVD2I44OTO1TnGntDeDa3QzYkOE0OQNbu9oHhk5X/mOXZqz5whpHQEvdNNuP1HgNsPmFN/y/trKLESmwHHiDt16L+wGK1c67VdpwEGibh9RKTsPBNwuslMKnFJCysSVgOVZefg5+XmANxA+2eh58vpTtPluiO2kNuSC1cfJuvVUYjMiFE9WCpk2RDmM1xfXVF+cS68cg2x+5RiR2wsr0sdRu4a9jY4XBHjqdHrb2RL0uoI67tl+rw/533TQsM4+A7wc/CUVwszAOUhQ0vuIzzhOgpuhU47EKaHGLLAwTLGZRbXSAqIEQSjaI8D7NFFVVuLMslxRJu4N/bAPk0oCpdp0s9lBvm2YjLulryVUoTkCTN05VDC+hZGYAwzB3Cbr9uqX5us0g/w/JQ/wigT/dUbV/IvrUdeNKmA09kBxiiM6BA4ymZ+ijIRKC18EMWj51i5wxTBsNivHlbxTt5BXycZvFvaVKEE8ozDEfulN6joVmjbIYtP6FqTpzzU++y4hJG1zgkJrAVpLTg+ZmpT/MMgq75+iCepROfc7prcPpVUptwolr53jJ3T7Uz4riDcteun47WjaYiOfI5G2ucZFd7eL3R0N55NOC+eWQEBfxo6U9u3w1uE+B6g3jaqMPZPD/unssgs6UY3DreBt5HVP0RaCCYIDr2KTsaYnHU3Dd9mf664feWC7Ov7Kg1DcQR0CPO266RU+gFmnIEsSuPOwCboyYjibCkZoqNIgFaUefBfMYaRbavhiJZNHQKWOfGpYvhUbPz2xI4c4n4cr5+VWFV8KKa8EZy1RPUBI/OzVN/quepjtiTyEEUk9nJsnDRlbT5zdrbXi1PRWemkpSXee6X5qItWqHBVtJK4OW8K37l+RnHpbdYmy7XbLESJdN0/LbY+9I9OYWTV3YI56Y2fVlmVVsDq4HkPnhI3uoXBn/yCINVedouveXxk7tokFfq82DwR2L6XTuMq84Dexfnsstz/c/Qx8ui7vi04fx+on+QngUh83/8iTJAK2p/P82A8TvxpBZH4I878Me3+Md/wR//+BT8dqUM3kKHL8fRL4SXX1yyaB7UZxO+ziXk/CBUVuMwPwaEB1lDyqXSPBPknQP4Dk2TrSaVtBNNIbXE9wSg+RoIN8pDAuPcKAoSqjs2+3dsjYdt+GkBpp42A17vby4JGGqTNNYIu65y62scHWDHNgGsLuTz9DQYSwepqnCKK0QHmT9CEMrRJMzz5+GUbAGIvbwrZ/MdDsNngDTeEmT2fRon3U7QaRUC0lyq5liQ0KmDsLvWp//0fH2xXfscTSmT1isJ86gwCKqpvx08cWm1O6UVi7JHJ4AH+Za4VV5OY25e/GvRDYpJxMfk+QH9MNWlSnq+UXty0OyE9hEImQVVW1emSrdu8R+3gldRMc8SOOVl82iV3JSDkM58p8cRntJZGohh5AHR3wPoLjpJzycTJI5wmJeQ5L/CsGmKzjBAYY/IxAn+nZPVI0AeHUejD6K0aefEKkZDAw8Vq/ZNMIPTeV4E9x8FD1/8eP/po+DR//y483QPOMXzF/vB/qvdl08fmROJHYEppH7DqUUG4aa3lr4Tm7QnOKNpollyL6ooQDN4t3G2wwQT3cH+gBktIrZ8HdJECTgn4WROEx2Oink4WWAN7iNInEke5wXey6WHWxJyoCyt7TdxYr3R7Gwrq4aNyIaoP0SNDNu0sizp8kXhHXf/8NdhfDTPQlrO0s5MwRIDxke2a8AqQnLFp4S2ccICIoBy4s9RVJDnq2khNyvcFnI4VPXAAXFWDLlZiz7QMLVyhkWdVRZOfsKOXMFUr6yic+lIVhadu3MkzqVLmF2ymhARLe21vj6ngyhOAeV/sgvHia9wnNiFgcbGo8KYLX5llRsLp7cq0LEnfyRR18CAPHNkbJQZGrVihTs9Y5rFR3ESTjBKHZSEkVsF+JxjtEiv7CGLLMqi2EcAtLXe58XcevO2T5sU/7I5isoHWcJXr3QTTEkY8LnFhvDhJBiFQITxUL6mf9X/vnUreIb0D+TUwziDPwxAllc4osT2tgjhh0tOP5x3blQ0WG9w6FYIXe8ixFlbt+HQ3KU+DLBxNK1X9fHY3I3hrLBOBnr4WXlRKmRxHGoNb3I6X85Lp0xudqXcNH4IvH4MQTMlJAh2OLNP3mV7FiZAoYFEj1OF/O7V0MRt4RGzTgyH95Hb+C5D27s31RGs99eGdxyCzNpwHWS04Zr72xp/9H2Vn73fVQF/ibJITRmtUF0pvVhtOaNgfUmzaENZq3BTabt4Y/lKhbU7ZoW3fRQFnPfg9rYEVGl03ZOo9z0i1pv4rf+C2Kk8xOcAjlEfltY0lX5gAVJEbt1VRHBPx3j1PVs7H+9xPt6bZOq9l0yxpMVkirvlo1Tvz0updDpDf7cjakskf2727KFEz9S4V4MjsjZ7hBD5yATNPglEweNUzOWNdF0W5jL7suaoUZ97Wcu5fOhPtPypTiWk0WMfDTZoPT63SPEwSqcRO3iwjHAM/ZygnIpIiGfFo0hglnVbeqtqeLd/TGI+gEzHcBjISwnqYMGSCgKmiAewfeYzeSGXoN+XaKsqBKLYMxxF8QT3uyuUAJ1ooYtccpaedoEW4Z9Qvrvel4LbXoHn8K74RUlEB/IbboOe7hfXC5xBC9LZT2KTyUatUqfHMUxiVxX8LvBlK1VFVmDHqiGg22GjwugJrhFML4pXOR5vs0jNKqxAF5cuOgunM4yccwe4qwkBsUQKs6V82QNSKt7KrrnvKy/Q8QccNlLEKRPdPSJtFh7P4WR4hzQIMLicf6+vVfsuJQ63E662Rs5RQs07ZWKzNlfJcPhf21hdX1/dACZHx37qcXAziUdRdpM3Tl7tJ57KQCjiA3qX8L8XGC5h8FW8rh8INHvLh3Fe9rStIFyuFHz5xBwZVryyXuVTagqYj/kZ1mfmBK3ov+dIJ5+2VL8Vg2VBvxXbvvhkt+NDQi8lz2x6arj2HGohaEQeFUQYoPlUVK/nRufA8SsWW1zrfa5NUZ5A/5j7oY1og08Vdd0tXGiiqiCbWcK9e/f8NBf+361W5UKlqmxbLcJddyHUkm2XS1ApVSqbtnkFKiVKBda2EsUqhUpl1LZaokqhUhm4XU5ypVSpjNoO7jOPE2yvUrRU2G3jyuiqJDM0zYM0QSsu2PkTijOtBFVxfAJ2zPvTE03QJgQGVtUdMvWCeJTa1n00rY+e6xGhEKbCfk36y3Ccr+LtFIvh2lVPVafNt4qoStm3i8oijBRoKYRFhEgLszQLxyV8eGHX41sOfLAenyWh2jyPqrVRCRqnIFGJ/WMpr6nQ45juP6ofYLxBO7U2jlNqHamqRWM4/Dd/d0bYUSdiwYywoHiHLAktPemmHO2b6D5lqyyirylfu0ilBAj18AcgjN6Ul/3oygwRlDte2V53+xPxqX2bO97KE0HgGNT0Y9hOItYtn0/VvLdDMYUucNiYjOYTzkmJKIGuCumhqi36Ueq/sTa0NyU7BC5cYlAOckKEt2i5H4H2oLPm/VnmvD/bmUzgHCuOj7m5aOpyLKv3bajMojXLllcZ4orZkOlZgF31tbHmboGQpY8z1hdmfhriGOSsC5SsD+WAnjE+wd8r24Q6KysGKZL0Zz7144a6NeUDGcUhhFmKQMQS2weOtKNjFMKAZIcCk4Z81leLs7uH15USZhaN5lken3iv5hxkLOiOEDjKdwfwShD1PjbKHaC7hLjo5GJYeCWbD2LJwm0CiM/P8uI3DeKjJAWum8O/cECOUedwFBbQxVWOsX0S9epRWc6NuM5MKrTagcHPSCJowODytqKKVZeFvpeCoTon7QPeuSibi5GaAyH61uRmJLSZtAn4tj1/s47ReKbhMDzIu1LluyUgeuxOPUcQr6pYaZtQcYR3bdgJpy1iraUug6me1K35tH5WaXopSjbtWxE/tHnf/pk2pBj0UhsS7wyX25COi2b3hxAlkWehQa2v9/Cl7WFx29u8h2mBcA/HCap1z7uHCcwl7GF1tmnJey9l736tZ4KXllMyvCRpp7oJPRK3Ld5XUWwDUcz4uUXb1a8DPa+Afi2eX4vnVy6e74cfIjSyW2i5thR2s0p0PCYKMkUsSJMoOIiPyN+ND9AlMVA0pcCwvpJne/BsOByK3b9PJuZFiOAZbJxHw+B1Og9QQMjpVi3vB+JSA/4S+hg0qmRs8iPRUwb4m2nnVqMNwNtyi/PCdOQ6Cajldkf50uzuKFf8TrOtFO+dVEK/v8d2N7ZFadX2e2x7w3+dL8eczw/KGxdzxroC5pv3b32RFFQ/PnA/NrcBnurDB+zDJvbhQ63jNyI6qV+h8psP3sZaZArxclzVhJzVS6OtvH9wW6SHTOAOM4xpKagdmwMLmgqbKdM4Mgbn4MOuZ4+4hGaAPhU7DS+3oXV341y6ArgcEnzd1ztRQ4iP48NC2z9+qRag2+YmSLB4h6wvIw8CJLlgWaP+E/6pk4FOgFYIEwTywKLpqZd5XDMP050xLP9Uicaa+RYZUuAXN5fw8whYL6i27ZljTaIZBOsww9+TUnrgkDYYUPtJ5vL+eX7GjCQYTRgfSzNszxzj7TUKVzjDwoYZxQys7p/gBwS9MapnfEiX49tVM3Z8fUMjtT42DZ9bHJOUB3aV3XO84emsyR6NdgXHu6Bd0ZBXUeMcUAkZR7tjC3aFJcuu6TEQfBQjFrYM+O7up16XodccbHw9YYZ9kZ4IQ5oL9MTMuNGiK1xv6VNcCaCCpHXd9jMf14AM0aAOzz7asYVKPMNzHqJpA0rFyy6hf96WYLAIziYsZYRgcUFHniB09MjmxfFCu54jRxL1ArnsSTyKBkiJQxOavki7fO3XSKnPq9FQJ7kbFfVDKxGjnAB5fHsHq1Ke3zj0cBZN0xPB3GAWi4U6WKFIIEEcpMAQomSc+6djH2G3Ul2lc2byfXI54WDyui+P6DUBpNvUwkiYXGeLCwcYp6hcY4Fb9sFyOHIgIYIS5Z2wYGQ+fmhBs2PTMtcvdRWIhIUxAQHlSiir8Sw6ZIcufNFbFlO+4Z7z4K5/ZnE4TTMLZT7TzG7w1IoG204tWpBmzumVCofCmNMN/6RuOI7G+Nov0jyMiiibUmSXWBfnhbTCSWi4Ry38+5CSs5ZL+Aai/B7lspLt3rcj/HsbJR1lB4hCBHqUwXKNCkegbgoVl+bCL0srOSxSwXJ7wzgZR2cvDrsdar9jyIROVujw5rOWsZSoQPJieezvf6/giIwZkua2OVelKJbhnK/OT98FG2v+RdV1ouFBnk7mhdQ8otAqlAul/oEuKGZhLlSlEkyJiHERnKIpQjZPJNBur1w2+G8UwmlN0OVhsKvQBB3jyIxZ3WdOFhhUHs7BA6Emw2RI1IMiCwmTx+0Oi1KZk5WHl9M0+xB4vAGhzwaqsYGCE9nEOmlWDj5pQRpHaGYtDJdyh/il62oLDWo7ofCvWFU0wvXJVERJSWYSHfZITSXamoKTW2oqDyGxMayWpX2dNabbFEblpCwth2qTa1uKVDd2ZbOVogvbNOZqW8FOoahnwiIsj2gHpBnlUqCrvijMY77Ay6KwkglCnR1nMgkEHx/pZkDF3zJV3Ja0oxtbnsP5lZ9aF1gygayWlh/uyfON9rLnSvnCRpKOdsUHAxC/c8IBJjebFxacSilhv/dOrUlQBnJSfqYGlkMHyg/Q7tAGKddZg2mAVHjggKq+AeC+DRjW0L0i8ME5qpxlZ62k8UFD71fR0aOz2fCbdTFL7stWw0216bQp+Z9eB3k2KbL9gQ92+QKbYnZgCgOuOcaYczkxlsPg5no02Lhp9lDgBIIumTnGv/re4clqHrglhq4EGhD4JXDL29OfUY0YjVnvLzZ6iJuel7Qsm9CVjgbcOjKQNlNoMsUCUcyOYBCcor//QGA+sFy8icrMkQPAcsRDz4jpuEyn5WRux82XaEXf9ESk3eGt3mofsKF3l92QpKKVOidUvTxwJ/oh2k9nJUSEV0L9ZkODawzbA9ktiJVtGVhrLtV+hfTqnzlDWLlXrYv1Ui+j3vZ4f1rnFWO/V4iAvuimf/DPKKJgGJTTMBvnePMk/bkcLEOruGo2f4gmwS8ti2Xm6duEJZofVp9cIFlP+n5lpR8PBk6cwRjv4Yh2O2EH/t4purHNV0kseB/8LdgMpCM5ib1uXyJBmle2A9fsWMtXmTCetPvzeML35AzN+m75LZQtqhF5kMVcGjyI8SZPjQOZvcXttYCySHGpVa0h0Q0LV+UaQSUjh5zSY1fXphwPVnKtirUB4vEimM/0d6ov/Ee5Tf930Mf9OejYprqioCI2gw5QySqikzNWdeHLsVM9AQyEfpjLrh+YIy2hrYYQ5FEjn2a/xUtfyGnVMTWrDqlAvbMQ1UN+8Cl5ah1tMpdJKk+UiwGFHgMBEe30f4uy1GOOrw2Tebt/lPZyr618s9rvdOwd7S3/67BS3lyQZzFw8OBgfhQB43ZikMDXNXbbG1RlB2/jA8GP3MKnxC3xu1Z8L7m+WnXGoxqNpKWFZBMBdLIVEjhlxHCK3yIF43Jid524TRHHtFLiBQZ6V3U8schyThzIdTXJLndkDVTvVcLArrOGKcXi+3LNZgUjDHqGUvJPhGT16YCzPZfjoRf30KdzMsZmOwlKghO73mGamBFn6MW98k+oCQQlH+RRFh/atTnZoFZbvIB2+a+almXuXFXXmVryxC514iqFKeSNUSC6WGWMqD1Yxg5Zs7AL2G4dI85pWBbgF/e0v2G0B7BoHyrLo6cWpOUpXwDKOew2Z0KKCUoE5ReoBLH9TeLkg9FzeoHJuex+4Id9EMTowl2WFC+w/DvofVLpfURR2QR8OjaKN4i6rE++J/7dIq2v7ecXJkcyzI84iuILQ4o3KOCDYygQKYOdIpXmPH7iLXYVYkKt7ocKSJEUfnjJsHmoOtSkFtbM56yUCINRmGUxpo+TlzIY9B3940bpGMaQJgMK6GGIOwAyn8HmloSPdf2otCmG/jFC85Lfr/U3mPj/mv2aUH4K4+N6j2fhV8e5kmfg5q/ztbWdtZtATuCFlxc9KfN/0MZDAd7slEwsva2SYFdaLHNPA3swGHl5b6mDEeljcVT662k8Hk8cIZlL8KJEo/K5rEET7z/3/CQDtXsGf6J1r0hnTmWmaAlRGkm8e/gn7uGftBh+2QRWzIDS3vUVaDs/ZY0Dig/bTvjaRT04kZ5jOMYfRHCqzznztDzk05EMOXmCWyMHYXUyNkCQRf/oGE8mwtqGipqTjk24QzmRDhPD6V0sHKkINBo6UySKUKX877JhSM18jvi3N0cy0uQtjWBXy7UOhmmKyDj/mHSW0kTEyWgyh7WwiFgNoUXywb7y8iBj/eze/DW5yfRnULUfqubTvnDUWEK5e7D6W5ok519WbH3p+LGUs5oki/BIqhrhr5qM2xzXdVQT+fVsqy4dty8OdAfFsgFKiJ0t9RJ/1pY/5VRVssaBP4E0lz8Mp/Fkocof+pNri/5gdNeyQ3FdxmhagUGYjI7TTFWpTSzeGafTOAmhnYMwjyijxZYgUsttC3wkBj5HGrQNW2FEaimBh/viiy0b4IO1hMb8AdKorgTj0ubcYBnJHUIFAdGUDY3At0hxKfKtX5tj01zev3nLDaxxnOo+rga+gLNoFOZzoU7GXlenchzD7OV0j6K29JRr4Vy69jVntu88W7j2DudK9yAoZ4P3YCOnecf/b4EBiERPZM7Hcgxv1itB0UhcIulqNokLOL9n935NVqu5+ipzV8n3aC0RXQOjHY5ndjHnzww14ln073mc2RHSXSkidXlBsG4nAlKmRxyTUJfd0uaj2WTjAsKKarzraR3DZWzUd+GahajnmoV8ERZyhfQdn0pskKI57iRtCjhTJm12BT4NOwMfuTsc2hQ1UrEhsGUfGtfuCnxqsBifMaCyxmXuBV2DXnOI23vBOmylNQqps4l/ueG5vEFcNg7thQSPkQTNSCthAZ8mhCohLoFVnvGek2lTF4hx86A9C1bLvvGpZeH4MBsn65/dpOjiT0c4pMqq1doChiIHT5YWHCbdnT5X968ilZUdIYzfYvA8mInKSvG2N1LEnnX6QSWan6PcomU5ON8nOV7qQ3n+MaE9zrl/ejxA+L35qady/Zz1gRPAWQzNz7D/vXYHRUpeqGsuWcUJc6RO9f5TophFXe9Zb/OVSZX8ts6M+Z1DfDvAbErbPENwOL5/Pz3ruqKLZWjrswxFDOqyU+PTqACglSOyCFwH278IXaQHBzvEmGFCB1xDKxd6lUWrKpQtZEtU4cxHK0FXqptvBRu+qG34cE6hLa4sEgy1r80Cjq4evxjVbkNGM7rYuRAVJazj9UeCDuenPMqK+2hsE3URfp/pg9+mUODj7t7uI6QmhkQtFYW9ZegM0o8Fzjx/G2XpZKIynW70HPa4jm60EeCXbXvTR22M9h8/9g72NSxMDfTaO0qs4r+OfBJNZnmwSOcBXn8cp6x0RDax93LnOcrrpHzM+bKSvisFZpq0uLAcHsaJGVjAeWtJad7DDEOXZDHgYxwK1ajUzm0ZZYOUu9CdYOFwIm8l2Lr9KDrrmZOs3TcK20fbZ1i78YxzVqA6KTQQReNOFamkG7H0O86TagIY8R7vVhsaslowJuJpmn7gw7VUKecBCvdjuTrmkZrcIKnQNjaAbOORcHq5v9gPjzA7VJePdrYjxaG4ubPdJ00PHwLexsdHO8DSrZnroAnI53CQESN/dBbCMgJvB5xJM15196AdSMAt65fOsCLUd/QEj5Mkyp7sP3tKRWR57ynH4+bhxISyYQ0Vqg0PaVxd1fQlt10G11sW8HLLEB7Vr0J45F+EI1PmC5EZqOUIq7mTJMYsMyFhdVvWta+vCvTgUrvQtCResJUVeRiP9YicozQZx2zjja4Y9xwrIvECwRMPEp2ia2x3EAXoLjslyfnyJzJxpK/C6n6e9IAkVDSC/XH3ITMe9BeazSYxG9EVyu3ZyXZYwsW69YErRG86Z+IZ0P/dxv9byJ/y6ZSmKG/OFm9Xj/qlT/9IG7uDymUc8wjOKeN02u3dWv/297V+gKZ9I7q9PkOLFzSb6GZ/Xzvb/H3t7B+2XCf9CUpvo/VvDa7f889m1RML5ih4uPuTTHsVZTi9h+ho5ZzOOKe4vMZkAu/wWx4xayllQ9tgJkCqrjuxiMD8mi9WwawIxvs0PY2yB8DRuj20Be0cpOMFbdQ4+C745z/dnnl4eBHSrZ7NmMbo3l9O13ULe/Hh8WEDKaUHfWkfzpZO1rYXsX+u9Ixj0skSCJLTGIijL9aCkHoSmCp2XcI/xL5XEaHyyO0n9+rRDyjEGuuKAPqBx4VJr1eAmP8GS7siojrcXxwD/8EcOEXnuOShH0ZAr72DP3IM3ksl3IP3j+6V8C4G3C6iARu6qCEKt9Z/g0CF5oPkPKdbA/tGi/cw+6UNDpLCLJ46B1jYTsl4l9cwuAlWkgeSjH5grQpx0UK4QBn2B6wZ51UMb7LU+FB5XJomd3/Nf/91rbdimIG2Hhw6WQg8u6q1y84/ODm2b9yD0w5+8Vj4vo/mGdIw9J88Tk+B/KTppIhnTl5wDLX2+XsDc+WULLKkuetAnOIvFetwWQOFEP5T4yOwNqgnuDGPyWAQ/0EhRZR7924UJidh/u7dEL70bq1Wj+0ViEOOASB00/y5ooAUtZihjOMcZnpRKkoC66mrfBLn8UEMR1aqD3M5jpKKwbdBnMuZ6pOBZJ2LZnXq3r1j2vrunS+VK4//SXx0PEFtQtdRs9pirciWH4fj9NSJPDCePfpqqwNQOK03ZN6WfopuS2bmxWd6MfHGZSrK3xaV0gtX4YPJPDN7QG9cYIE8xCZY8cZROBaWymXhWDc1pwN3PGGfmVrFbc0Vlp1RGg4YdnZQcXXFTVWcKH262Xi8Bf9z6TSFHvXm+uba35x5lKWulEv4zww62l10/Dw6z8gjTvPeeuxZlM8naLkBOPNi7tRrd+KkAwX20nk2ikiYiUeucuOzLYm5rq8L+XXxNUwTpe9+FgJnOlt+rqZUr366/PMp+jB1No6PyJAadNaC5v/gNdGauhdyoGigtnL1Y80p9/MtxQ/hPM/jMLkPhGj5tUDyVb8StauVF+OH0UlMN4hbRB2/him5P0Gr6rZz0XaDQrmNTv2UTUGKKN07mqfCH0YUzmn/nsNQMTcvGaNVgh7i7dBslb9RJJRC+DLHxTB4dIRSACryj8OTKAgl9ApUEs5DBgan+gPhoFlAE3rWAIzfcRBhOGFSuYxEqhfWxiRlOGIrx7jex1E6PYgTPY+2LRonXFD4PZN0bHXXqkDBTmVkXY5fIPLH8aeuCqQqxlcJVG48+9asNmX+Lnu3i+X30x/ELOoCDYHqU3/cQg21qPqwXZENRNffcZ+cqpLBgD9+73KSrAbVxb68IbBv3VpL+ray4rj2q+uMfFCRFCctVJMcb5jDALNbSwgn5GgyIZ93DtsiFCDY5dy2+NaUp9qQgqYgfmJ0Vzk4A1JlIrHfZluwcNoIfF6lWufPsTS1OlhuuW8CqegzSgmfcopwgGLlxCzDUh+g/abaAANJLNSRGKrruwzISZXaVRqUG7aROFinDDEgsUH3yiqtPCcF2slIF/zLlt1pFMrdj7a7dRTQjy3iyOK7NYNBsYXbtmjNfV9m5x1GbkkYJGq91azj/LEKOR6OHCQ52OMLGkONtQDrGaJ/tzOugoIVfK3FxRKyD/FKtiQjGo7SNBsjd0G9diIuBZA2BHiTkuVwkgXmtlBgUOmNczjOwlO6Kc5G7pB++692fxgW6QNgiRFKWe0Oq2Ik1gyebanj3egM7+/lrww4EmbOTXP1Spgl2Q6ZGoSFA0IeJzYEbab9s8rKV5CuKKYQ37DMc4qtdrBQtwQ7XAAY+VQlBzQjChUcjRYVuDKSkBZVaDXMjuojC6Ft2v3g1q1gr8BAYCRuiA68jIVtAYcEpP0/jQejOMNg+lnwDC82AilHuVYRr/Cy0UscQqtFtIy/MCxvgM1hPl+hsi1ECP8ZIF1eRKEylyC3P8rQHOSx7q2lA5UrxcAG28H68M5/3a1+59hF1e9kF0B1t33oaovWIzagKtHQduhdmN9te+lsy+iZLYETzm2ZA9M2uG1EwA72X2XXI93w6pPd8XF8eKgpa3AcA3PUdw3c2U1iYjp2dm5O1psdRYCYqARcq8R/OY0iEg7tj3SxpXZ6EY8m6ejDaZzTjS117/tgc7h+u0LGvc3h421Ou66ub/W77eZm18/T7I0Lj7a22fXzNdtmuLWzvO5xJNVnmvf49wa6scnQVfZs7ap6drlLZXastKWgDqA6GxjOtp3K2/Gd7mWddklk5lSVa27u3Oxr1ET/c62vRtPnrveR1g3P+B9Lk/S2inlL9OIZ9IKWAaHzH4t+8Lm66yFIHHHVZzMipKNx47hlweH7FASbm8HNdtcPX4s04xY+Nq6lj88ofdQw8T+69CGCtdYIIVZUwMuXQlZX9188fBG8nBekgkznudopx1EWlX6eaUZuB5oOEHH1cBIe5SJNmUlJ3GzXqdsSPEVfx5e7ztNrLYfBx8tlaBm8+QtqWWoz3CYqeIWDrPT2kgZZhduWY6MbYh3H1r4vz7GdvPKr5uwavfHTFir99FoOuCo5ILsSOWDza5UDusBYXu6Sk0ydOOAudi0VXF3Xr6WCa6ngcwzyWir4iqUCJ5//D2TzmsWEcSV0hExfmuNyRP3uL6uv9RuiHpvpcgqaLBzH81zlAsFkJZyjhLkqB3MJEIK8d+Aa4qfeNCcvoUFIcKIj3A+rG778I+KKc0ThOfe1PnBlT+mFVfp1XWmO2allmJYCAw3NXYcd/SmLYzKJDPp8yy3ovCJoj0QE8VZen6VJQHGaaulzyWLWxD71UcbMQQR0R1cTkQvKOJsut3j6fy6TVVHV22JVkam3WEZ4X3OFh5CN6oHg3fsNgZ4xe8drQr7cgzWyRYYFl8GLwLKMBlLe92MEhBp/BXNP4S0pb6oiLibR0PpMaXXKMvn8gIs5kQPL7ePnoDEjE4VAyNLSOKZ82OkGP6JlQWQbsmoxcs1aMgSUfUMvzIaoY79o5bGFIY3ml7oqr51VXtdV2ROz9ItRRb1tU/W1s+pr65ZIslJziGbsCfc8aE4Sv67YAbp9oF+3Af36XKC1KTOacBe6UBP2KNyFapuwg0wad9hUX/q0j6PDcD6hkN8HEVkjHMgQaEzMz9xQpXMb2TlQf2exIz5B1QBMw2q3AZhWQMNsSnbGHXJIeg4krq3jiKLm6+Xrpl6+NlrCIB/4SzDqQbDezhZKOQuOQg5po34Mp+EZ3qitWW/jJPiOX8qka1qXbliRctRS0Yfjg9Bhn1YdkoggMuBPR3PMeXOfiFiwUh2YyExHXo6ilNNPuAxnizF63eyuYUi+rHhm2y53fXOQ2rj2gdY7Vkun5s4AvPg4ogt+iBZVHLvhQDIo2IxhqPLYwMhasgqGhdrDcPW//y4Kihc922nIG4iJ4gNLfonqqTI6cBkFkb5h2MPgIEZrWwMC5+FGG7oRarDSMZrdxlZM5urWdKJsSfxs1L1hrmsD2hqz5mqdZu0WXijVpEKiJHvzwhAprFCWBuR9BXnb98FeqLstWnytcNrTbh0rLlvkn7Bj/2FxIWvHtF+XmkVw9wqb3/jWO+EPQTArEc6HQM5dT3Gn7F7/Yid+0D+tCJhkuJ4Um+MXwkMLnaMwrYNGFZ5GhxRBCanhEZrn/0wRmVDx2ADHQRwXlSlxAlg4AcgQYMkiCMfv53mBMrvU/cqFNKLaywlsI4Q56M8ZpuPRsj6a9WvITF27tmzjaHdR1+7rhna1cD+uuGKsSScHD5dDSWPEMduPrZqNBB8KLRpgWEzsstOPiCL36dtGy97qjaVrbDPOegKY0jXICiDVbUrNuf6tA44MYeby8pKxylwaHY7luaW1/4T5ImapEDFn3d5QVrWfVDVn5hB8KK7dlj7WB5zpQ6eg/Apbdyb4wIdDH+pw7nNWFqjli/PDUU71Du9yCpWaOhxBUW/nMWdx0ftLr7C7O7DVK945fk6kCKPkCc5jRNl0JYiNl6DXb0Ro+v5CHg761INfSOtkaJECOoF4+ifAkA10EvE9mHaIT+dH/GbBEFECSSg2JBK3anRlzC1KF2kWTy5ydxO2agKISmtpQLS4a+oUfsGoQrlib5jUV6VEwXQK2G/US2HarzxqRw+tY2Wd6wj5FDvrno8UW8fNuqYXvqZf1zcteJY+iXkN9zrXlJ2bhSk4DSzlSgdxUX6o4Fw5X7w0pignsR1flANsxxS1XX2l3E82dE4uKKufixvKyrVc8a9h6MyXUmWKEtx5mKOsex4mKeteBrM8Z9Cb65g3nyfmjZbe688b+8Y5yIYYONadBxF58r+O6QqHIzyTbYSzg1Se9vzTGMSfrJ1fIXsE1iRj5Ga1nHqW1uDGSJIZwdn49406RiYmyQZnKUDpswhtuPq/R6hDBar6a5cyLfe+WY2rmjIRqpoCBqsMpSI3SGer4zpMkeUCFF+HY3yX6hppaqsMHCZChkkdx2g1ghNcecHRglWCNjczZ6frUDPzqQ+CLcIKTGh9fxAT4otg3SLKinwag11jYJUOxz8bcOsDuR6c7xbawLBHKzL/LStIqMAD1IRWIiToz9k6595gCuUISmMU3uDCEWdn7Kyvrf3NNwX4LAB4HbzFRv13OYwfEzhcbAU3QaTP9pDovEh+zKOb7optYmL7TVmu0YKes4aVO2tYucUyaLVYEq2uDi28543DOMsLQV7zIp1VSR++bYM0AmGweF0aPRyj43MtWnBkIAx5450+andA4+hs6SISk983a3bMVse0VKZNm6csyosyyKycrdwsr7mtr1OAaJ30ox+7CBDtdllfZlv6ZhmfhpnGp3ETyhnvvgfJgbjZrQCwl3IR16Jw0zq8d60DPkuisfanFCaIut0LOvNs0v3rEgSk66AgKys01B6mM7YlCoegcfniFhoXtQ3jcC1uLSNuLcMIxW7LaDHqmGBLBli773TGxy1eFuOz+AqigfGKmJPJbHx7fMRRHjDCA2ZOL80ffOUXovzCLO/LVHYo4B+2hH8o4B+2hI+KDrKBC2R53ShQf5ZgDtdMtN08XTPRPyQTbUOMroaJvoowco8R318x0FyoxeOsDIumO3lU1DN6EH1bD4PtEN/N99MXAtpP3EprFuyJfyTNrmQnuRnXdRiPVg2zaYDyKTcMhhNr0ZTslWD275svCPAxLVIBB0t6RhbyDyZpEjlGitjqsKezyYYTKxUq8ELuHhpuaHifN8OlS1R6HuHHBhNHSyoNjkY6FDG5A3GRFmrWRLcs80N5r4Jsog5FKN6+6FV1Bhuqd/13s0+m0+lwOAz22JKS7PEPojKR3b1gNxhDkxTPMPmAVv1opW/AGKdk0XEcZlOcl0mEERPJ0kq7wKwuG6zux093DUg2fr5EaXVMDk361emik0Us+Y4JNyVVADn4KNTtu4hb65Cq9nRGqxJQMGL6YkKyiA+KgzZh0UI4T1CZKX0kMQXIAd5FT6KCDFSZ4IBkpCpwinrK/1EBZvpQYiqjfQ1wN8dg/Rj6T/hoMukr808E1Qc7IxNQllmL7i92x92eDMtq5wGZ2OpZZ9oKNXYcI45/Ei6iTB8YPlrMtnWK1gZsyx2pjRJLnxy96ZQZ3ZAdxG+ddKTSOqdnOo0RfRm9KaJdtaYIBelsajgJ84LCmnuJl7ueHhC9CXILEubVvR2ANPKhrdFkdYLK+YmCm/Dhpj1J5eTgzWjNdMgS1sCtWl5yxF3DmwBh532cFvksLTTMEfjAEKHgOxFk/Z0sWumT3XlXpYYVrq/rHGxDK42L5RBWQMqlFB+UjjCYxHkRJZJIeYQRcXTnyKyYB8SQUax7JYZrp/+gt/0gOgIWaCQzsJtCwiBcqGAGENMtf25LJgrH4wdzEESnlC3xqRiO7dbSDziLCr50UhvhfxvnUdldEf60OSer6ApXeiNkzreNOaR81cx0biZuv8wizNwb3EyTmzUdw9EO8/kBrEl3rY82mqQlcbF9WiX+BsQEf7kbd/eWE05VJQmPEQXV3uJGrU+4NFviX60DOo6bt8R2T0pdil9S/1GEToajMKBmotBT5LcZESaJ1T/PlmDpAqHnJR4tvU9kD50Ijx80jHdjehXHhXwvXSBq8ylSFg95dnJcAwaB1MBxvo9SLK8SvdLyzlg2I8db61pvyn1VV7VaRyLH947QzIR8aSYDudJh3guh8WQv56gKAc8izs7BB/5JI6PlqzuvuwEgEpADn0MCwMd15j4H9yDemiu+r28YxUtkYlKU4A8i9O6ltFFRFo09e0psCXZlhvPj03gaCwdiEhilgQJKXmKj/bj70HNGRja6M5k4uIJ5SnYfkRn3dY9R65CMBZzL2EDfBW03TituWczaKE52ULM0pJaOOR6rc32aCVsDpxe+yJg0Tg9BLSJJG+cHPCN4eLRcAOcCtuLpsZvMBcGyJMdHbkxWfq6qb2KzdkspgKpReqGatS/PdtLIC5fhWGYOKu2fRMje8VhE8mUBLCe/lzw+mCyCFIqRKid1n9uspETt3IaPteJ2tin1reIRWtYqt1mc76AoVn6jJNTqly9WeyUVrl2jNh1upUOYgrRMVOUl0qur8n5Fl+l1KD4i7WlpKTg1VL30KjTmuJyUmsFV3VzzUYiOQW5VXAnTzMmNmdU7/aBTZGGSc3Od9tYhrp66J2eJo9Fn3UXoeN/AhZYMq8A5qT0MS2ubGClpWxw3jUyc8nKfvnjF2zQeb+GxwEweOowrR8/KThMQ2+4zv165XqtsTK5fd/lRO5Jgt2DvVG4c8Ck/U4iEbh0aeYPGFBg5SZ9JfFEBVc4YpdeAInU3RYw5XSzm2PetsHsHhDHcsP1gmmL8p0l0BkgbUVYU1oSimOULCS9Yv996lFSpqrSZKAKfHfGjj0pGqVzEffQQmmeTgq5719A3LNVsgipj9iTRKcE1Zr16zJc+/66oW+IbaZjN2c4jzN9Mua3W7PuxaZwAnXN/O07nmfsLrsBWMMYtx722oaYJpnCjAs/w7y5eWa3bUUdgg4tCj0FweI373ZF5QEwFpwekaSDwUttBftuwOLSs0Vkxh50nCpA2BpZaOPuY8yXK8ANCa+d9mMzDbNHpdw6jg0z8OQ2z0TH8G86yeEK/8e37eRLRPxP8Fc6PQPqDP/JoVkTkjNPvpKMi5b8SoNHi5Tga8Z92WBfuzDvOfL4tfnJEo87vBsPRCRdSKVG0TNxRpVdc5I34J36Lklp8t76MUMagYfRaf7Pnr2L1WfxcCaDb8P8+eF59EexRwHX00OJkDbMoC4uUT3DpKUVhpAwcq9PVBfkBLOCvMSFkbgDq7hZkKCTM6KlbM75PKV1+pBYj//ccmzzIAGGiwgSEZ4NRNh/BNuyZGAS9Q0XUm8Fw9d32yv/769bd/tsVM6RdsJ9+iBK5fXUzdwmkwAK4aTEFK5vjrAYrqxYdeJqmMwCRke9dFI6OuR6w+Gj0ATFf3oLE7usG5nHcVhsWx8lAsfQb/50Dbli3BKqqKhulX8f8n29W3TET8JEUbLjgOxcFpVlqFD0iWlP9QhnU6c45zpkclWNzwNY0pZm8hqxzsjP6ThgPLWFNIHl3Vbdywurfoizlg6ftKOkfFZLY9vN879dx995WXvyejH/Pxr/DKeNeq0kfM8Mi5rWbFPVT5O7ofjxt3dEuYkNvS/xzD7rMf7bsLfGmINA7rKzafKeVco2Y6bkqb/gqk45MFNqs1XepZgTfdTWzeX61Fz4CKTjR3FbwCzwD+m+72Udpg3vS7cBCwLzL//ZIeAa6BgS863/1DR6J4k6vLVotNQWVrdR+kUwK0ho52swwz+9FZrjd3JYzjBMcXGSGW2yEK5hh57q2M0tZDZ6np8FMBFNRAi2l5goDXgvS16FAPkqPkLF6RHJ8UOYH0v1x/dPqxw343+an4OPtT1sf78D/vv3kSd9qDNCS0oSnmDl9PXnkxYeOvWjotUbWW1bJYMua+gb4uLIGeC98KslFtkzMaGiC6GirIXBJuwl62zRNTG61VrzTJEqabYi3Da0IatuiFVnSbEW8LRtx3ORpeIbHOUNGM/B4bz6bpVmhjn+5u6RmcsVySXlIxMdxVmcxBmXFIn2ankbZgxCRXpAdXQa3t6EYAgK4J+Vy+PFmDc4DWxULocqxnE7PL0jd8IquRzIMZzO2zt+lDgG/NSpdy+JS/ULXs9a1kOg5vK1YHrl6pdokzb5MfqtZO8q2oLLSQymAmLM2jFEvFhxEWxWlRBqk07gogOxg1FEVAVVdGCnNFAp7FZOkFK3RgYkYlWUN2WNp4eSBQFa2CGNH3Gmp+ofCVgw1nq7K9hIdRUWDag8afBwBYqk2qIGQ7qLNixvRaVMrKIRoXddXCXOif9QsADZ7JoJzPdTuOZWKGQ3ljX1SsA/LVXyrOzfLYVRqIZ8XF8mu7m/6mTb0k1HcBXM5xqntDPjHe6D2rd+huX64VF5qRoHZOcjudI465Amnycw5+GQZf+7Slv+2c/kR4Ney/upewTWCO18fBoSJYfJxHJL/lLDjLW+nL2Ht3Ft3Hjssir7M0s1r9u7tr2blTOOhsrHL4YElx1IMx53KVlwHtLBEEMWMlbzYKpITHV0hONexcsnj1lQtA8C4BjFLtjI0FYuGTVbWSVsvPQ62WhwKXh6xTbLQbYvFwgU6W12UastYXXdA9QnnwJDRjMIjdasRqD8qttTOtQaBAP755XWzvTPHbwyqeecXrpcRelyak016sRs3bpQFx6m9eBQEKpoM2eEHAzretRvTC+ynM+u7Hd0V1ceUHP40OvgQO/LCAyxYuudojGiTMOA+WJ0In6QAu3sPnrx68ewR+rypV3s7j3de7brJSBnWCk/M0NoBRWKlsH+uvPGLJcp/csy5mpuXNPGGJY8wEIZyMKJy4OYvaxpuUCDd8cK4kWDP0vEY2AIF3eSlptj7Q/39vXIkzgJ4PLYxR3zGEL8uuPi+Dix8d0HlWaROGVDL9xws1AnaKuSHT512wIf3DL4OvixE4C2DkyQ8iY/wVmSIzqU7R+jOQCrlF4fdzuM4iw7TM+C1LttBEwGVMwSuqW94DlRbtIRSDsICUqWYb/DOSMeWFW2V+tiijgsr5RRX0hH46GyMJHaUTmdALg/iSVwsgtMsnM0wSQX5Jqh6zB//PY/yYieJp0ReH2e4NySwYaUtQWBVa2QWvq97VQF9xtwhgk6ris6nvnUn7X78y3A+G9uXzm778dM4Gbqb2DYX2l/w99+rJZmqvmpdfpovUTb9rV3hrjX4j8gZ4mmUzgt60Q/Wvx1+++23vbuGQYV3pAzFRjJfzgvFzJMgCsk+QRyYYkAz5EHR4SEdxPgicoGlOHp0ehpm47xEjVsyOhZZWVOthtQvh9hdTjJXpEU4ke8xORZ9qqnGluH8J78XhStIhn5TNLJn5cAMjKOm+gzLLThM9ZrTcDhLT7si+whXD1ZFjzEPiZ4e5snO08cvd3t4xqjqh0qw/tV6BvM9J2P36KxAzTF5NJNzWvBw96dAuANJkkY3zEx2BFWYRCdhaSFPUGBDxxxpVbuPxdKC9zKxR0jixRMKzu9bTS1pYLCjDm0jDE0VJxL0YYqncfi1JWt7npT62BVXzz3GDtHrKU9GIwQMPRh0MYMWqkx/Po5IO1ZISOg8iSVS9HcrGqFhQEGyhlH9oTdGZiB/bQwdCRyQUJRr0xuxT6g/XVjEWSGTImrzK/CERWv57PjF7lO1cCKdgtaKc3uICcUQ/23yFiGcPs1dn+agbwWqp0MVw0IXaPoTQ0rY1jg0+1yG/vREc6Rp5mKHZpxGq2DO4fApHpMIgL9uizh4t4JX9NinlaBDRnfUuPxBTcgfeSVsvgrMCl+U5dwoHB2TT6fYcg9fPJMrQ0bbozQvJmz2MQrnGAImR53UOD1NLF8508RZrAt29h230dLVyVHR6+zUrlllV60ZC1fKvYHZrZ5lTYWAu5K/aze89Tr4NwZnTDrVRsnOBT7BwJWcx1EghPdst7P3cud5xSaWcATqSXlcnlxhAsKDPJ3Mi8iV+G91VatUuo0+EGEUOhksVkNLAncCOojWlx3H+WzCtACVywm6LzaAL8rEUlBlsLG2NjtrqDKhc8ZyVaAjzCWwynpUyVtiytwoxcIksSsmQHHECsGL1bxIhV1VEp1OBO+Lxsj42mG/gSp4soE/jDOlste+MLK1AuDGdprHOEmi7Mn+s6flamHFMsDnr9m9X5PVo37Q+e4gC1a/NzBYWwqkY4/DaTzBUNr4w1/sZ7liRAjv4VF5MsYoHZ0Eb5onHX9VkRRgWwUjxYQwZWdnhYhDihR1VlRyqhIRBdJEUDWpox9obxih3hp02MQjw6XXwqNasoO4gH2oCmX660bpGYSckwhDVIVJyYlZUiAeob8WNp3DAO385sIOgIxDoXPZ6lE4P1LSBM0zm8PnKqQCoOkinQenIM7RH3jxxzkcExWRFqEHOd/l5iotLdsN5Er0kv92bt8ZbnTUr4Hx8w1/fVv+Hpgv6Htf/V+HTaAf7P0kul8bI7d6BJAuapmYMtPi2RJcxBzvp89FWPxGw2XsXFI6wClDTSHHoc2GSCkdcpJsC2PJdFJPYEjiSN+yntzFaBEdVFwDqRoD55cDpYj9AsXsvEWCCZP1R53pnsTQoibQmg3LF82F/POLTKlhYHykLRtUfSBo95NlSmnxicVtdZ7XqYQra3HlLVMEaxgNI/K5eVWMR7G3luVovLLtHR87hJm9bOUJ4Fwa47bDzCIJEiBtSS2lg7jj5FStdNG1sjrQIv8buI+51UXmCsb+dqGJyARfSMn0t625zFhnid/x77vOZaBS9r1aaSK58vug132zNvjn8O1Kz2EWqRslrjOcFV/4YuyumY/Aa+ylM3IT+qAO+qAl9LolJ0jVRX/+Yj/4ce/Rw2Dn+evg2YtXj4wlDIW/FqzYtly6bu8jg7zrYDsUGAeT+crQN3ikkLobZCKS1FNgMA/NtTxLFCyDUDs8Q2TAw3oi6+j1D+hVStlbwiCDHqeK7h9ExSk6LhP/i5N4Op/SkKbhGf5dzzQwH+G+VlGPo2kXDc+4KMOtK4rPi5f7uy+e7zwNnitN1DgaxSAKcf6Z3DlJYmitdiH2nfcY/GX7VIRn8ltoxzkcq70Jf2HEQvyLu5a7wg/jeEhXxZ3rOtRPPMYuPNjwALtGaXRRZsO/4ejwOD6Lxt3xrC4zwGNMB60EncM5X9kay+2eNqrwClcd++r+BCCsTwxYJuNuM+XQBzF18FfVm+hqlsO8UlZ8Cbq9Dedx4EfQFw8/gjLGtb1YwY/Qwy3scB97toX/14d+bMH/PhmpGKs0CiAucemAYWFYOiW/DWmJk5Nvm5JGKQ1jEtx/oACx6lGyLDYowyCcGbmDjYcgf5EKJYtAQJpEILgCTyGPOOCFU9QBp95rCqeKESOycW52qY+Rw+jjZSHakGSlRVzgeKTT4r5yPtXd8d11MHwEhlGxA4vAWeAwPgqov5GKSuaGQWRoi2EwK2IjYc6LCzNtzoN0MKUp3+N1uJyIwDQAuTuqIWMqMoMp7e5rHn4cAYFuraXbLuLSJB59MAUJDodD99OiIAUh6IAcwc1RIB2qSMKF9nIKHI5OfC7DHO6pqFi7HT5W58AdMUcsk8Y0CKB/L5UMb5IekZCHUfvgb3GWa4HeOKcCq2tRNyAvQYGG2gWIt/RBmHNee/zDiV/Yz9YU1UtSqR2h3A0NE1157RFiS6gS72GcZip/T77FX3iFvG5zHJlXPU3mLXTVlJw+G70Mi+P1UjlDVzIoPvOXTTusUhnU2A6craIX22yW36dz2JKvKIBwRe0M6169cI+S8ZbRq/2fX7zctQrBQT8eTdLRh1Ogn1tOFTnq3YpUfNNQ1DZ3EHOx8RnmghRZdXPRNGyaG3vCrLnAXM/nmArLTFTz0EVL6FGcjSYeo1K2GSHfk9rQwpzADC8iKgnMRLRhhGJfYHhDCMNMKDReUavoylBWZOmHSOakwL9dqbFAVBNhso3ooDRPnikTmxZ77ad7D9IZ67KOJukBikBdoPQcbVSGKAKm1isjPXC5MkyrgkQRiOIEUCUBcVsw1XkWes0IAIV/EI22CpnCB1griq1tAEgRA0QDPzx9cX/n6Z7b45QPxXFz5FxsizUM1Vi5ZkPnjT5gqRkoCCFuig9SOEKjPKk+bcmI5KnSI2a5uQg22Y5A02xgFKSmDXUQZv4NVck+J2N2i1qOLIHe/dY5w+5vHWfRYWcrwH+c+QWzo6jYMn6120zaBeklDBwh+cYeth0xkHlPkkJX6HymIO2pB11hlFcbfKfRpCKLhX4cDZBEwJIoy9IMJiN4tvPL7rMfn7FMxrp0YQLB0rECeYjGggcRXbuyTlbq3JVHAEv8k/ggAzRvjOdba96gFMO+LaJmKm1/6BB+1+KcIIJ/pcEhmsfbNPCRmKD8WXj2k5CFL+OAoLSCBr20CnHXtgX7h7/9usOhXEkzWhgK+vLCN86fzyeTrlm6Z2cYVl/eUItv61XnugLUWd19KxgE7jYbIiQGQfN4fLWax3iRZgWgc7U+JIWINssuIMvPPIKtzn4NlHq7TI8+dgkKs/v8msLUUpg4+eooTLD8Rl1yh55/a55vTzZuxjjxb8bz7MLYYRlRA8UdORGfy9qInDPqegNWNqA0Lvoqdt+JXKkKZpUpog8moamT+7xCQVtwciM27j0x3rozn3tKDAC1u8eZEGeZ3YPqELIHvd5B1R30VE7O17SLJlqnTLQpu4uWrX+abaQNuE52989LBVDtlrJLnY8phewhdL2rHHxJzM3XtKlgvdy480B+IGPx/3Rpspwm7/muyuJ8U2sDrWd0ZiGfYhP+izfHujEkeTbwFaLYSQuKEqB8OqAuqZ7jZDSZj6Nxn7XLCjcxRVaQH6enZL4wAfyS9eIETSblDkOnRbNXVdN52ZEb/hRgVkmHfzo+1iR/803Y7ez7R2qO8IZhFKwuKv/PX2AqHqF5TTqeT9DlGq+QgUB86nVPYbHS077SDCMAsu64hTEc8wkQrXgajz6wmdHLJy/Lbs9A9CneZWRbgrYdDGr4jTk21sSLYZEdBGAHGROVQZjfbLwN7gXGz62ggxXUgDh7JpnpwAx3tLcjleirEgNi822g4bPRxOZbzVGVU9QymO+3gzvGuglEVW0KHM5PYwxToeWGM2qN8FpTioekK8berxA5Q6PooEsxnvTa8LYfyKSKIigU5U28W8kcxdDFuFpD90NCX6koTAjUxSAp3N9SkDoaogcfP3mrlu4tW6pq+c4/CZNJRyjjZS1656sgyOqWudEodjGXIGNtW8PNTgJKZy9oL86H12AWeiJwfYW79Gtiu0XUG80aADhgRvARl6MDkKpV6OpKJn/0p0CzAeNLBMrLvf09/VB7GYf45v3bPl+52tX6avetYPR07tndasOOgIWVfnyqTI75015NYXliraNEgR+TD0l6msi7EmigRGFszW5Mhy4aNozckjg/RhYCQIOIw21Jc+7D4DTCXIdkh59FozklMUQzqj6ZsyNnUbk4yuJAvaVLpcZWbug25sYiMhzNdlp007A9/lSS7x3kbRlwy4TzL+rxuEWfNFlRJ+DfhAYFPynpN9c76Zkt7WE7A9UQCKh5ik5B6RF+xf8JeXaK9oTBibpbpPDImIwyPVIudVzZ7NBo4uuQOi6rJiu920GTlHgkzV/ZGaLQQ7EPMW0V5sKcxB8iEhK2ZMcl2+GwjMHHDfjfZhmKES8fgXri/42IVXGtF/NiNscU22FwEIx4LLS47C2D4myRIj4KOGKdPV+1sTMaacwUsCXXHRPuGtOCQymdcj52fx2v9D6hD5GCB2ODTT0+s2V0CUBxVJDqxmgluv6WZZySMDNb1b5v6XbwjKyf5JKsBidRlkPLW8HG2vo/BmvfDjZuD9Zvb96+c0duOrFR0sElP6kA/Ls47+ExLS5jbmtpymbh6EN4FMFwpKMN5nZIOK5/qK5+5fO7AnzJTwvAx0Ux21pdPT09HWaUUWiYRIW/eHvA53tKwGIqYYIn8ShKkCQizjAdejEDqXUvnWejKHi2uy+LYIRDwPcpiCLCLYKOzyZgihUAculhFkXSeyeUpqVkdZpQ2l/YTBzKEmP/UbhxuZjjlFJpAvAbJeCrQrdVC62tDAnKxILNbPU6Yga3JTMWv+HA+lFml2NLqE93tfJD9MDSqeU8m4i8jLzFjfPxqx8CZYzQNxjiPMQvjtAtZrEpFXuG5kHqvRwsD3gvndqJIMqvq+pPolXQV/FzO4C/75pf2aeKv+KArM/jsAhlZbqeMD+DtJyh643/8yideD+XDmPb5kFFuIGZpSNYsENUOBmlN6m08OT0TddOwKm5AvK0UuuoldD+rHp2EG9lJzyZOIQAVSsxMyY9kFIIhSOU5WQd3DgDFGHgTwozOskpfGIZmq9kmBp8x/Ox/jM+lME7O1GGjiiRq9ANqfqMlt1FlAOFjpph4pC2cHnUVK/6h1oP7pMXZ6m+vemIr9KXXnm0tw8cD0UoX+M9c/VMf0U+/JVCh3E0GeuFOp1qoTh5mM5ByvqfecoB5DlurqPcHmBLczm1DLJR5Z9Hs2griuntUFbqgaiA9EqF77UnxLM2hYnS2lLhozsJVjrRs2bdVWFIW8C6znGfnRi+Vu1upZw80tUCMCiGqmkdDdmfFJU85YYjP1LO3S4zZqHDILFJ9PudxNHYALOEW2SlQzwv5PaJf+4U3bhX7TZpTLvlHN7skOr/hol6vimtICgiSLUR6k6agNju+qqb7FR7cs6OOFC0RU+apudm56acHn3H+Xtl7cvLmx7Zk3N25HzTU/ZE9YP3RBVjPLMkw/tO0vRDEB6j0zZqPLIxUwzyr2WXIrxsGZTkpMzN4+y0crsiuurAc3yY5lZJbeuRuydXguV/VwIPZfmL/5cWoQazlzMko0Tt+ETADaB+U/b6YjMPPf91hebeKMl6dVRsRi1IDjbdkuSInrKpNP8xxF51HQtSNx+a55t6/8kncpnXf4SPuWI6JFVyRgfp5KguIVgsOqArgsP5ZOiVEejizFT5e8SCMtiAKXb2K8OP0okspcTNailUd3Gpu5UVlCK3leuqDF2O4qqz0O2e4pdbTm5JzlBFkMUcUiGBSZtnFBqHkz9VZLil+uXDHEorh+ulBf/BG0qO/HN/sTt2wd7s9UobZT+2laTrfFNiddABBIOIt8J1McN7Kj6OQtQ0Ub+FxNCNUY+hZXbuuXBkKKcN/hExHgC/HB0xmi0D9uHJyglXnrq2VSuSFLhphpXi0qjRhnjoO1t/4ByqZEk4Tscn8RgT7+GmcZdfdYNfpRDg6ak2IIq3XIbF8C58WUseGboaiH7wsXIE4vMLQP3kAUt0WEwznl59s4KPVgy6AZ3xLgQ+VYSj4Xtnd1d4wUaTCSnV5lmEd4fhGIjjTIt/A7goouYE2qHUgOWeeYUd7zEy9/vvtAEE72sQAh+cJsw1NrgnYlN8swpbLcqLLkB58/5tr64yPlzMjA8iqrqnDx/3FOKD3DrP4yPerIQNg/lsgAgiU0CSth73JLGc2kUVCMSL2nY1nQTlgUw7z5qWkiUWWUihosJTR1+wD1SB86BYpxiP2KPdpe389w6F6RShpCRh7GvcEodYpVvuNdMpmdJ9d0np0lsRYancs9SGdiDBUIY/sIWXQeFl6GxDf9qS4IbeLEGd6zsk8z3OWXy0Z4mU7efa7RfhBXVd5m7/mKv4cpa+rdQ+0IBwa2JMF0GiG4SYhsFRv87JSPC5ImaCzzIMBZ/lmAo+NVSxdqkuj8EQPP/KXITR4HNhZoPPuRgOPv7pxefyGA8+LZmPv1seIeO8jEj2yceMqEmbQTUfD1+phBc4T+KmsELUXHp5QZzZSLG0pJQpTfDELYwqq3XFQ07zZWCiXYxIlMfori5vszgnzoLi1k3mU6ZcVAuOqF0OhEK/c3yxhnao4jam5Kj2eRW48SsiMCULpq7XnVpxOD5dNfenGkBvzSyqUX2qgVRev5zxk3vcpKTdUDdBwgqR3KmbFQUG8rbABDHVl4cM5dpdHj4IBLsEZHiAugbXW+zzUlgC4wyuEEtQmqlRaKeTCpa8lRazLbAE6ruxRCatciJDqQGSJ/tPd69tIZZ9rm0h/ny2ENK0O1RmzRR/9RCkcZWIlMc+DT+QhRYmqWBF/1iisMxQQXfRhyAPDmIcZwZlz2YweWjg5W5+aVMM8SxrkYGRN4LSzkL+xmqVgsPHv5jRIeC3KEiJ2XUD7r9ouUNOMTDcOB31A2WZ1fsLU0Bh51E185iHTRYe09Aw7rBWrlwjCjdCgV0wAlY8UovCAqXuayIAiH8sR5eD9xXfFHMZZFaPcTRKMzt5DEp8VK6k/JVwLo9/sRlD1Zj/8S8k0dqm/C7FhxHThep5xUtB+a2JRITdTcxJse4j4ukMtjilD2D+shekQJUxIZDwi1kAdY4ZmaFkHlF2it+iDO8sxgJonGCckVzYhKwH6YmgPwAgTklNvza8E3BWYfekY19jk9/b811xpgIxgdCD/akKa3Gh35xYhpikDkWZh8Z5pZYqV/oR0fZCGOYNCHpOiY9GZkjaUWZREYpauiSJn1Dwn2tmwbEIR4TGD6LUavDtGsbOXF9bW3NA5Q5YX9A+mM5c3J76ickwDHt5Q8zYVatcUKA4RoP8OJ1PxngRhYuuypN2QOXpkoW3dXkKrVCy8LScYvVFRp+MxvCdBSbMrGdUxTtDRAptheLE3Hssp62jjLbNsyVTJxqz0fWKkPhUt56VJMm+U/NXrJsXbrpM5uPXuXPB77dV2h//iV4urOc8io9DO9uvdAbQS2KeLar2unE59BKYZgQsxU4H8Xkxt0iyIwtZFqGkGqpknOEBUI+yzAABkWXOvKDgXSKSusAFJx1JrTB+14TkMxISmBdze/cadnU6L/6423odkOM/cmvvTeIm4QKLiX0RJich6ew5nwTUpXRwqbI+de5jLHctFNRsz9kokK0NNqxvQCln4lt3fWMNBj4b9RReWNucIkqoroxUdA26h+iYhdkxV41/KHzGo8xItmJUESnDvFU4G8tlyDAXEDi0iJ0jFGDVt2+6ne/G8UkQj7dv8tn/ncLOd1T0nfSsjCnn183vv1uFCt93esNRnnfNTV4mctoKOniXFWYDGS6/u755Zxwd9YPs6CDsbty505f/A8qNbcCCA/y/sSsnLxO6y5EbJX3bWCNPub/1XIu2ZSwgZs8567gWaktfNFexIp0p3YyFdpjgacv9Sea9ws9l4quSAvVE7qb9tPtN18STnrZUpfhQCKt5r8ET0lyYlu+CdZyXKrGFlYV1+mvjorrWUT6faz2rxN7BFrDONm396jc7N2pXzl/ba/X2s8W5k1y2RjVszT7O4iO7qIPy8iehglkt+ZOUP8tPj22exGJlhSkNvVxFQmpkLs0cZdXL9Jok2D8rH6I1oZzrVhb2rhDAev9hjMsWpr9+1lWlZIrI+ajgsqzr6+Zc8qjA4XKfp+PoK+ZeSzyfa/Uv2M/PzhZlzHa8ulJkqtrOH4p7Poiz0XwSZuKAB2/lvyZbJMUx4kA4Id2xxAdSzo+UGljwWroMCmV5UgMA62V1voTfVXHcMb8LWp/NC8oG3vOzzJHobZzIwldzZOzgrHV0OH+IQ+O6+SWj/AmBg40D4gLvDYKrYb9f/YGuikYXZJGM6CWRdFHANafwL9aoiR36xZhGHlkjzvwpGCfj/3cNmrYqUW6BBE38dGkcIC7IPV5ZMVR362uCLTpPiO4qd+o5qc9C8wqOh63m8ivgdrKf0EvZ0Stme3i+uzy+p/X7WlfqO6N+ttPfVR5h/0POlm0ZZ5GFSc7sAn5fHxzFcxH+d74jZO3qteZcJbNbkkt+KZb35z767SY6K3RzwnMcndrwj4ZjXpw0M7uvjP1op65piHlJupUlRiRowZV8RZkbGUW/GlbzR2Y0QJY8FKme5VwfzsTzh2NOymRmEAh201ueUTUCadB4fsZz2lfMjbQjTnyJ7EgdaC7MjMqO/cm4UdtDkrfs18yPPs/Rh6Be1dnnmiH9ORnSBThKvbLwq2VIf7ZT1KvoJAon8pf892fUApJdCCv+dLv2PMgn6elkQcbQ4QS4l6ENzCKlDWS7FMUhz3cMc7M8CdTgfKr7pjMNPC9E3l4Z/ptHNQxeC+evoxjNuBnj0GPMAqS6TtlnCFY4KYm8EZq0woB5mtoz3HqO62S5bkZlcKog8DIrxaJNHh3Ummq3stVWM9TIB42pgJ2DAsobA9abjthMPJ/vkDS/w3iminX1gUTjf2tYB/R1w1OAGcTbfm2jGZbBVstGuw3N9fprLcqcv0vAvWgatC6twX9qJCJ3bwSDxN40tHiQFkU61YUG7xAF0Joxtu2S6pHmV1aJjYKIY8dFcRjjCxzj4Ggi67QIjdbtPNz9yRUWB8qjdOR4tglf0X967a27HtvhI8K6662/FXJJXfUinXma3WhTXd0oVKpvtqmubhcq1W+3qS6FpbJ6KTLV1SuFD5nrkfMBmvKbiTssdj04jifjLkDS1rKkMsT4UJj2KH2qjB0DhiTxVIrY+XEWJx/I1Yc9gQBtylun9/8zj7JFt/NXL8mS3D9kmN2PQvZd+9R3uUB4AGrkqAKQRdfOyjanrfETINqb52peIz2V5qVAvhxEjbRUIJKYXjsejV70G9onBEDBSy1eKcU8fPEMedkUhJTDQtyOci8QgwG3yoVucNMxyY6pB2W5T6ApkCErPOPN6lTfLGfFIlAXgSym/GqAE8ZfDWjGfT9sj/TsRodmOflBmowcgvK+JiML+ZR9BCMVPYLFP1FmoLsF8kiAiEhouvsR5TfEJvHvIbQ/PUBfdr6gl+2UgE/J8RWjAyh5G1PuBEk8iqDOTMm89bKy1/F8tSLXiu59YU2SU0ptrX5poeIJ/ILzuf0W7xoTVC/uimmWzEOiuxR2ffJuvewogUoGoqDWyGheqbJdU8wsVEMNMupaE7gKp6jvXX1b18LltXB5ecKlLdt4dnBV+GsprLWTqHxbvCoiDpYSES+3dyZVcMiPbQW+5ZptljPrJsUlZ56zg5cvh5pMx+M7XtVrnksU01fRL4ldGHyjiHrhFhrk1AvDbxJW8WmpWa7TCrvFE/VyKYH3SZrFv+F4J8F9kFHHOaawjhJp4WnJj7ktQNL4ay8mjw8ILAL9TzcE/dwBMC5ws9nOzBS6f0cncvoyPI6zvAjGvrtOj0bGcempS2gokd35LPKYFEQF+hIPiVFK0bjJcpLa2nKSWbeW1dzCKF8w+71e71yCW+O963KCXANbvNOmk1+HfIePLU7U4UB7XVgpObrVScHHpXiPjaBreqd6d919uJKW179YyxtfrOXNL9by7Yu0bEoV51WSOWSG0STNo4rQ8PkMoS5BQqEhfH0GU1+h0LB9eTLDfypzb8fbvwbWXjuyPyjPrvSsZOKVT/hIzm744lRKnpftu0+EGjRoEO2orpix+AWIz9O+X4z4PO37hYnP075fpPg87fsFi9bte8ULA0JFnvgpyop4dMkaiM8jfpRSxElLPce1EHEJEZGg9+tGVN+Lax6qqjhbNoEWL1k4KSWRk3NKIlX2b7iVLsfqmy2qlxOK6u4QhJCzvtZKyqlKUF9OLDGJ7HJSSd0yt7YSuiJFwskXlgNOvrAccPKF5YCTLywHnFyeHHCh9u984fa//cLt/9cXbv8fX7j9f34uORSfZmVXRTg1VF2fVdN18cu4k2tV15eUUnXvPV6JzyhsOp6Ly59fkdBXFYVri1+2+Pv1qsKWEzrpnz+oKutahL0WYa9F2GsR9lqEDXThlOLOy+xE3utZynxELgSUgRD9ZQ8iDCs4Dk6PoyTIT+NidEz51Er/BRBvQwkOk4rTPHwFsvHyonGbxC7XUvFlScV2r9NpUDZCP7ENlC414cmCKfIenUTZ4YSSN3eOY8CrRKvRaFwmX9lCHErG0QTm/USX3jgsA3QOUyVS52z53IJH4jGsG6YY8M+IWxi2QJE0bMi0IniB0Sko1bJPa21a83ec5eJqz12dYsPey+zXMqK6M8aDu+0lr86bV0j9JWRyhYGWdf5aH83RdX1v32nU/dG5pW3ft3Mwh3ReIaSXxB0qbMEbvuGFjLgg3oiFQJjw52F8JKZmaAFQfXyxZMiGVmlNvoBd8tU4yy3p9QZjk73A8uqnostfE5eqZTywXi51TC03cTGT5XiFi8KIIXsLKY2HUYgS9qZ+ntNAW9pyHx/x0WRRBALCaM9J7kUXXRyoqYfo3YjuOG3ZzSV11cOX/L2VnVy56k4uvcCeHl3CAi/BSjS70L1RnOdpZtlyfA0nAnoUpwizLKQs7BzuJ7fqlBGB9Eo+9hLow9TsS3MxGe1sQ9pT/9qjyNfnR70kR/EziaV4zXnPJH9wDxiPp5rCRfJSK7XBIsKPaRmJpPIG6pcdjoSyNZqg9ncRtHy28UvZqY6rU34ouuJ/u0UwwSZIYs0v4s9iAhRc33kVYZZk1n9xy2ATqi6j1NxGmJVa3Ujgs9StxKcKasXB34INZMTOTGLqFgMxoSWmVDhjI0b0g3pbG+q5L0jgBbvYomUHG766WDTVEVj3KJcJev3qQG9cHejNqwN9uwb0JQe5ccppD74Ws4bg/zolNanQ/Tyi2ldiIfHtH1cXfPXeQO7n0n2ElhVOLtEi4fgCtrcldw3u1fHBrWDtfMYYl+fD9PWYTnwmsWRNiR2NAsoXE0su0rOLii0tYmS0GORaxdbFHYS5Baj1ywO1cXmgNi8P1O2WoC5ZElHGlW59kVcyUPwdAzXbgsEw2OULCsDePM7x05YEVHnSkqsNOCQe/RRR/eQcDenTODoM5xOKAEgcrwao4uiD4Pl8ehARxDKqj/gcJ4Eepvohw/eCNR7oxLdrdcOSTH0Q7JRcHS9vOjl9lDc3ZQ+CUmyrfw7jJM6PVd55S4g6aa3vuo758jVJbJfledXNot4VaL1aWcR61F4nDWqvqhTQpPe6sNLr5DKUXuXT6PhlVr8c61cTZlUIbWUK3BJ6K2tgs8pycqVZ9ytWgjVgjn1f1byw/aAhdA11fSlxs30f2zT9RdRg5RDWOrZ0dBmqnxL++hXD37hi+JtXDP92E/yrl0qrTj8OeadZaXQt8HwJgedSJZ7PKZYsLZVYzzmFFBPEZQss55VUWjB8zcimeyrEjHhpAaOV8kww0FrtmQn/z3YXt6QYslZKGc0SyZcTQy7Ut8+g93KRnxjTptXMSMNk1Gt8PjnJ8rk5LfCuR8k4eJaO58C9ZmFRRFnyl0892K/JOD3tI8UiRtS7e/f/YGnMshBj/r2NtfV/DNa+HWzcHqzf3rx95w5z41u36N9bQTq45CcVgH8XPDtmdjsjTiuyPvxAfgUzmJHwKAJ2vRCZxnAFk2CaZlEQqtSC8vldAb7kpwXg46KYba2unp6eDhkthklU+Iu3B3y+pwQsphImeBKPogQNi4HqiXjYL1CTtJfOs1EUPNvdl0VQLRcWwTQKk5ztkmPUbpmAi7QApF2ArBFFKGTNc4yvPUa4uDrwvyQFVM2LLKbtmQewRU8RmFzMccrpOOLiRgn4qtBNSpc0G+rZDnh/DMUHlNDinH8A0crmkZBi+RWSEVlRe0NynV1u+GT/2VOjHL8RhWELWptVI2TQKdqxfVqrQ8xc0vsLUyKkUa9+UHBLwWsewsskPImPMI3hEJYj2zmCDV+WmGKJZ2FxfNfa4pg5leVd9uf5EC2CLtmgHyxIJE7nOX/Ke6KK+KelV5AqyHaB1MBOUloJkigenRVk2n4QAR7mBbQu9LhQ2oRCvDqvQBCvGQR231x5WgLUiv0LWtdPE0hzrQMFzvIs01Uj20TP8R2eYiJL4scB6WWx3BBeOqTovFrqAb8HzKA3XMwS/1mH/Rg4KFXt7MBBZWLJ3QeT9GAv/i2S8H0me+7PsiN7x+EssntHL3X9ZPBzmn1A/4ZApq4EmjJL40QRcdwZRXhkzCmXOxOziRbaIMLvFEAjDkBs63aoix1MVrphNLZ7GJxGHaApuH7ouRDSlMPqhbiQSTTBJoG+ODqVHuqQylPdOD48jDCh7GTBqTZhgywE6hzOJ4hHKRIzUbxYzCLjrFikqfqJsh6OCAuBuAfrw72qGEGXE0DlaaeU2R9AaqBZP5ojSXgKYrfLYhjafpoCbhbH2VxuECK9Ujs8NfqFX//+dywk8q/YfVIaZiD4+TzjOApclM/JYaGaEQ4qPAyxw+Rj53w5IvNBEqfKxr1ilbMXSBScpzL88BAEwCQn1rIt97eovA+fPUEnseYWjuVNbGXJkc9BOhlvKfRHUPfhDR2RQxCS3ZUOYWealWivyj1daC+0veyGlcMeNmHRrtZh4YtKXVfaXkUTVPpv+aZvTeKb9beO+tIKVJ4t1/H6VwFdCe6g2G/CsXPtfLKx7QFvTJ22ywd3htwjA9GoQQx4rjVEW2xrW2YftsUguGOjnEORILryMCU5OkiZ1RwSBnIuYOQNaTJZVKrxwW7bd6qTRUx6MIujDm5D6uwxnHsmePbZw9MoOU0A0ZoAn68QDP1ZBINtF4AXXJfoiPvk+6mKK9cb8PNsQO1uTptplawetxJyTFapdcPRKJ0nBbI4xPK4AGpL/E7KOoSh1Ui7jlZwlfIWvFw+5MED+AqdEdUIL0mK86KlvwFY3WobTqzbCUZxBodzZ4+0rnApb1fkKZ/UcjUp2UHq2JLih3v58cGZ2FJt+stxTnoFcAhnIn9hkPSzrZoNjs/obAuo4Eqg6DRLBlI0gDl+QcqTM38zBGaxhfTCBmNDWdRDgd7q9esLw0l+siWEXFh9b9kqEtBb594B5ADhMEyOHOiheZ5pWCKLf148gUPc8efEEqCPnWfBx/VPwceNT8HT4OMm/HWb/roDf337KfitMwQKMg2tnFau56yKXBUErF96fBDbNMFgKTzz90JJKy3av5xGz9VSU5VamA2Te0X7CkWGlnuqVjL5M++nC+2hdlvmYgTa0/SSG6e5FxfB37zI0g+RhsH1xTtcfsC6gK0mriOLI46OwhlU6NDFTjWRgHyW3CfjtCoBu7cJlLzeJbXP9S7xPn/cXYLPtfBtgLkC4fv2FxES2hO//N9zWA0kgXhO1j5kcH6so4xm/FanVILPNQHF55qAep9rAlo+Ar1x631O9HZQz9vVVW7AWKKdFSDnP1sKx6v2egxps/KFNR8PRvO8SKd15LeqrpO3mtdyaO1zTUa9zx+XjJLAgiSP9H9Sy+/bP59xe3whMrw81b00Irscgf3cxNV1C+HEpvHYfwnmqKKZ+hT++y++UdmSf7sHL3FCFKrHiyI8UrZwHVgxD67xrZaA33S3VXczJ1pl5lO5ptvmGHDpJAqTTnCvWmCrbAl/u1uKi3ASj7Z8Le3S59q2RBGtNX5Td31YnRznJaIbxDFAP0oYiCvylnxO9HIiWJ5nYemqlJ+6C9MzzRRS5ybifl4fT8lyWpGHhQZ54QTVWu1OO1iA08E8UN6TB5Nw9MEzFaXFtnUzrN573RHkMwvH4zjhrbJWJQrVS1WYpe2LGTzwX9ITRhncifNuGOzv3H/6CMaGtnZkHYhWC2hDl0WdPJikRa45YKMxDhpiCiD5/OgoIju5QllVQin0pEaiJQ1+2ZBhFh5Fop74R9jSTeMztLRD7wSygcqP0zns0QPsHdpucpRY9PfGP4Vp1+7D0uZOmHSbUIVBIJnQlb7k03Am60mrwtKgThtFmJA1aSEthZ3IxJFrI2lFMgz2osgzcLpKD8mqkIPcmjaBOPGIToZRYDzuU+dcloFeBxTD5VUut7HkxE7Iw4iGexCN0mmUV0xhbq0aDcJCoM3fd1zzIM3GUbZ9c+1mMIomk3wWjmBt1G+B5vQ7Hm9LpxgAfzMg74ftm+M4n01C2NtxgoLYXTRXd9rRm2M3u0SWK0GnKrmReU6M1ptMNLHTD/K8zlZGUPhYqJII72pNYWTz/K8wuwdRSxIj2SiQTPxy1+MR0sYuRpjbU0vWPu91yUvlJrXb1RqehHkO7Kgzwj+2b1rdoq9YrwPcqdMhGN93fJgjpZA4AbyLx/NwQpZ4EeNd7sIZ25uB2p6EByD4amZ42+v2DCOerRCiZd9/V4y//w4xXeDMhXCkOvuqi+8VoiCRbYcn78+NJ+8tPBFtvnn/GdDE2nUDaHv04S5QxewoTgYZy8R3ZmfqFTn43MYXQrxep69SfOZfJWMcCA6rBqdkZoFsEkdp0D4ULT/aGPr35CCf3f1uFZCCsKMECMP5kCvrNvqFrQL078LgOIsONfjqK4L/XoP/HRCyRNtJhK/ebmpfrX7e/HwYy534zCgrG/0sOCtI2+XNIk4JDuNNR46D3abe+qakOu2tq+LTMJsVWJc8q4i6GjrKXkiEdU/69+Zay93y3SrukHbbbjU0ttYqEvNVoOp6Agf1F/mnJiDEkQgKDKBLjIDqIcP6XndshXPxK+mAFgkBVsh37CrE0oyUZlU9MSs1nul4ci1zmQuPtum1R9u1R1tw7dFWRbdVC613k7iIQzjkRMYJi/dmbp57aAZbOb+d109N6sKOIwzFoJ+sYJu7DlXoupNjaXfAAvPtJMK+5OQIdf/Bw0ePf3iy+9//evrs+YuX//Nqb//Hn37+5fX/1zGI1mYZi0G9Rmak3g6lywrw6U2bpajeQZMceaysWHWcUGEVjAgQG2+NDm04OuTUTettr7dpaP2ti8rjJM+zCc4Z7u0cNnc+g1PpmGDnw6M0PZpEIDROVw+jaJyv0uFy9c2/Hr1+u/rm5xev/rX35NGj/bers/kBbKvVw/lkci+cFNvv8zQZgLiaj7J4Vvxd9mn73TtB2P9778Xzlw/E684wi0AMHkXd1V8R9q9vV/vIKHr6e9UafVUTYJyutSPSMuNZ//e7+8/en/zrxbsP/zrYebH50/s03N3fe7jInu58+Mfh2t6/7vz4+Nn00Wb6Kl/daBis6/Blxu56mkKHOOhd2TlXWfKQn0BpbbN0Yb36SIcyOXs+F3cZk2RbcwvXerETHIFYj+F+QYSaZ7M0N40s3EtlbFsceJPwh3mPwhOmPwhJutWYxMAKpyIfVHNjI9Aq/tPWk+Kl8PYDzM/iMvgfNY/rDi8oX9JRFo/bgMSZxLLQjTdv+0FGKdDW+qi+dMfKsA/b2PkhtjzELjU6IeHDjVgVQZQbHuXfINYOscDA3vzy4Z7V1MYC3toU/wQH/AYaqRWlVSGamrbysVHzDXTlrbuzqEmEH8Nviirkthc2DyPgClNgQ2xKlCaoIMXZbbvw0/AMepiz2yJFFYrwnfSGFMIcAMwb0QDH3GbtyyZplkh+Rydt8tUTH/vym/Lg3JL1zj9ZzwGnjtD9LUvnR8c0MHYxQpkHL91wK4XJIjiYhMmH4DidRPmwDezzzoR2WpZTQWdmJVvUHptVFcqMtoMjkdPnMblx42p53sTev/9OznPw3u236u89HiWXGIA2CKrpPD7X9x0ftBxJEzgMFUFCggp5xAPrmajftMDAaoAWk2irezK7hlX2CpCyGB13V//3zdrgn29XvlntLTUiOBHl0W5SaBA9a0NjLA1dPD0YnrMLj3HwLTtxbjWAe9cp/kg8RvBHD0d0QEAmOQ6LUJCLtkwSOTq1hLJEXg3fPwx+FB9gy49GUc4iCzopUmvxoQsqFFkEp2FS8KlHjIT7Jy52FgFsp4MFtCtzGDL4NHMBnEbFcQriUveA5PtWbo66dGSFz8HnU1UWEvp0JBMsxeEFuowTJ7UKfEqcgdhniBQWMBv2zzgPHCBoOBzWF5ZxhA7S8aLTE6Glujd/na+tbT4QHcuz0XYHg5ih4L4S3Ox8z59X+Tv9eHSzZ4+xMmTY8LhEGBnB3TtS2xHM5+k44tstmgc7zNneg1e7L/ftSGdl1SF0GapDf80SCh4O14ijVdbVIx/pRyVdnn4cwfaPMGsmykRAbAnbkKKxgglWyylel9GuORIb00Ji8PBnBEd6vGCJzrRgIvNpglhxiC2iSizMMKhgEaz3HFDpsw6VoUF9/kJQYA+scjfJp7fg+Nfk0quDdD0YhCIcodt8nAfrjg6ooIMB3bjO2H+9kvJTz/JhTRGdQFgU1e5BcRh9HkTt4WOGx9OPn0hiruw5EYKbmCvPhzEKfPj1tvj3999tebWK1S+RlNNiDUH0n6oDcF0148SPqlPBsvVTuuH47CnDLRrmJy42RAnZqGS1tkWnfFZpGghUydSFVuC1o2XEXfGGURAk/7eYkxVO1jy38KJCMYJ9bKKUAWGesujf89iO8UGBDUSPXAPmLmiGUAQOgXfhU20MNKEgNtCnBRkQG/VSKAGrlZj0j9Isi/JZmoxzFUOUmvoTb34+SV5g81fwgSHap8XLoQh/6r1sH6LUrm46ScGMD2fz/Lir0YG3Gimo3YOXRwh44Z2EAD41dQLPpiIUBs0E6c8YS3Agf6m2hMOuJ3KCvkDBFvTllSAhhdrM3d+iLOW/e1JIOIpPokQqo7276igqdrHai8OnSm1d7rFJ3caakcyxHcDYZpMYxC9b8KLrVCyka68rdh3a8EVnhzH3CJrHoD5O/HXC3ui573zjMQW16trwCcCbtbfUDEYr3vgW//SUWxflquca0X1opt7WrrqUFJEuKsThIpiGH4BvALgsjk7IvA3Vwnh7uED7lxBtKwDlTsNMs0wFMIiG0Vk4nU0iNtUGmN3O/XXzbtTJHDJpSUeJULC5bt5ToqWjCj6iikrJkkd6MhbmUXgnNQvzXNubTg4i+FcWTaITPK4Bj13FbWNkb7MGIFHXQFbolA9doeEfQarPRmEeqfsZmCz4ecMi6xkR9WxYpFTjARSxw6NWpb0nwNknkaAEeIsOk8Fr8ADINSwO/9jZ6dQBIqdFaFppEcLBb6hEiJ1aBFm6aW/hQ5uAKMV2ZZPhtFW3mXy0eK7IgSXXXe8HNVdM+OiOmGYvN9r0srpZAUp1q7oKiX162eOpZQrtEWLDppKrq10pgoHEeIqqzIpWuAlRhMLLjSj6kAEw1uyDPDiZ1I75/CN81DBE1LZMmNb0lhlll/bDx/X+xqdel4fc840ZUUkIzMDoo6NHZ7PhN+tu02shGpflPG5CSJQCFTceh8ot9IOPKGhscQAwl09Hyd3fiMZQ2Lms+b6/sVU/5Vjn0QZNuKS24ueF53/rfIuy3nZV1puXhSFuaAU36yDqBW87iarq4rYklrUUi1k0Xcg5yxBYQdXcIpdsscb5jXFvu0K3eBs34R8+mszelXNLcijI7/LNhnhTcw9CncERsxyPKB37VNQORXTJFNT6wiyL1i86y3i+V5OElE604Z6mhtVav8hyEYSNJggbVR0yPvpKia6UCyUgL7tOMBtLrVPljX74yiJ05KjeMhpnXuAoeKTVf5dnWVqCmpgLz8Nx6EMedyWJH+5DHX5s5WsnKTVW8MryPpkazSlYTw8HW6/YimYUbDshbzqu7Qr159qu0AH42q6QAVci5TfbCfblT6AJvrD5roj5FwyC746C3yIMvicOPu0y+C+FvsdLv9NUnX1zzLOSwOrTAuPKmbPFXr9pOinimQzxvq2lBTC+D6VVeklolXMIPB3dQURzZpSpbrBQmetG+645OHa+xQx06hO6tz4Op/EEWqjEjsePe8I5uLO+MSusbz8Lh5NOguEV9JroCLkjvFk7HLdZ+8pZmfnRgs2TW0v1tZWTB/3mjw66G3fu9Ol/m//saaB1Z9KK3+hJnMcH8SQucLD0w4gi9RtJClxZk2PZre5VOI7nOdS7Y8zfQXq2dxzCJsCBQr/C7j+/7fN/14Z3esEa/MesUWRAE8RykTdwgKqQAV7BDjfuADphYiTjVUeyKPynTJu2d5ye4kWHQB7ra+lwydolO2GZeUeARfRLgFUX+prJEWaFy1qXbQ1RAcxtGZatj2Phl3kQgaAVSbDRiX45J9o8hLIPKNDJI/yMN/j9oJMmRlX95EX2aqR5BtxDQiI0+uqVZXKDReT4UFCR5Xq6vqQSyJuFFJ8ZLfm12hkhdNtU3TiVlkTO7TAFcSKLx0D3JxNcVyTxeGAUPKIIP7BTbQankRR178iC5AlTziRUyvJoUhplaOanmh0SuxwKmvNCNlwfJ0YzkMCb+mAEnO5DcEwnY3kzhrIFq8ZVHHJsNonQsiPMFhZA46dlBzAe07I/xYQfSZR1O9MUqO981ulrOBg12Z3iQnCapSeyQ5V8S30hETsvBbrOqeoxNuIWcGGCGbhMrs3D3Z+kb6aJswIJXz36gXUKCrddOe7ExxcyzWBQY5LhyDxXVh+S49xzyge4bWLEgzwnBzqvhYxMzP1gb08qNXQiJJ/yMIVM08nqfMrVpfx+tUERULb2c7bXIvi4sY6vIhbKguhMeLrbA3WejKyVUp2prrF3ed69YwL67l0TBsskl7OMCGmuWY6BaJlOiWzEyRw2EBAS4KSYKMXXrJ480LQ0/GRgrWdAA8CbYlFF3UoLxPi880JgzjruVH8VWJRJsB7WwgGrHJAGsXR3E2wMWcJdV8l37/DTu3eBUVKtBoZMiMiRP5wLa5QSNsruQP4TOJlRTniSHXPN/l/vUZkgEhZEGeSLElpGOSPB3Fz+XuHbZdJdeMZBaIMDsegAUWCKnkHEvuOpLvGUGZ/B8DUXde1yVtvgqmu80VlpVNnoRnNUnFurjuuTq3VUCeiTa7UvPrfvgaig+iB+N/QCRdiZrw/00eiBJp7E+fP5ZNJV5ep217t3VET1jX419CyP/j2HlQbZf7dunaxi7efLqqj6Zr1v6KXko5Y9ZnlQ8hoSlp3RKCe5lnHiq229u1omWlPHKBKjOgpzukoD8Z+lJyb3J2cTeU5z7SODLOLs0K4cYpiSXzCy26meDMokZD6CaEJ5DVDEGAbB+p0KFFM43YvYe4abFebIcjAUbwYmPMqTToEaCoyAEx+KCqgSQPLH78sbaE0W9TIcd6ZaPDqEY3tCZYvqTR4kaaGl6zmJo1MDmX2ilmQ3Nhbbtjbbm+7kw/h09RAxZ1Xtslt0aUhX2gzAOZspRn4pMG4N9gWQZpPzQXtU0H2z2P/f3dM/t20j+371zdz/wGoyQ6mmJTvPblor9jz5s7q6tkdWkrtpOhpGom22EqkhpSR+Pv3vb79AAiRF0kn8+uald4kNLoDFYnexWCwWL7e3i/y1raZf4/1VfpONHwq7pditKQeNw4pHgTJbtCwC+4A87Bmzo0XgF8pFy3p9YO3VtSxon75GpfRNxrkDRrZw/8UedhIR3NhY3uSOmM4I7XMnf8C2lECVPOv2VL2RbFplMCQFLetQ+dfIcHjHhXVGn0+/k4OLRJkRmUqpBLbKRzcGgqCjGXNCaaPmx/Vi0RWKnsnLy4tQb49rZ1/HS9a4M/ycvMJbtPeJx7D5nQ5piy2U4aJ/0eNNSv+rH2Qf1E6qVZiR+oPRhGstuxP/FKnaFFld7W6XWKF0HSMY85OFFu13YYhBxj2irz5BCnRQvC02iegB4uH8Gmw8946yYDXXRdbnMFlm3TR5PJbz58SC/Q0lODBAPRSQ8bz2h+VigdO95r22UjzNqTOxfoKfJLub/EoviDkIEa17f+INuR+D0nnHh2kC/OJ5c7xO4dFrmGMvs9VXt18i7w7QiwpzlGnrbaxvex2r0CZbAy7Ls1OqM0mv1mzroaItmPbW2ui9xIlZ7L7s5Ea/zpOZ8QE8+QhSzypqODna7MgmHECX7WzDHxsqPL755/XgdHB6eQJ/nfQu+r2b1ehkekdWuhyNAEcduZF+1dyfgHD8/W8bG0kGH3Iayfl6UtBVICO6Ig1/4bV7b+zfPvAWcKKOJsUJhjtfoSQaah/Cz1qOQXZvepO2NXyY+2NygbqUX09M0XE4m4cBSkpiqiY5yZS+del2ExqUqTM2wRKYAv05eG5No9toTGAjEt71Jw1LnqVXBbSRZjrZDsP6wXy5ANB9q9GQIsyrgUlxkBh6Ob67igUmueSjG/gzIjoAMBpQhg7gBh+XUdFKgGmfSUeNGjTAXgAHTrHLEwCQbqFf2Llh4Q0mPBzTJbWG0dxsiTwzRSB+PpGLp2E4v2RmKPuEW9IbmMqxYE/HfTIoHED2u94OAVCG2TIAbOHEi9eBLBfhwLuFTcZ9UeVe8PDWnS6zIxi788Uy8s5AjuLMJ16wM4V3qHZhtBeYQwm/KanAuWipSUCG4sXkZvlhiPNtpc8SdtfBnPgx8sskhYUvC6jBFTqd4mYnXvCgGi2C0ZvVYf1btZmn2wIp/2cuIovn29YRH8UoJ0a9tFX4KEtpDPgTmt9lLzdbDF1MqXwDa6G1wa2rtUrRxsSeoqz4hoT8blAPC9lJO5qwLoSt4TGftDRVjVbXbJUrsFr+zVAWv1dVj5e3YF3i7HDePP1vg+b8Riw+shYv8pMoWNCY3mqqJzefSTtxrDcfeeMwmsTXXnSNASIH6YTLlIIy/oSf8ACY5TSMEo4vaOJKAtB5ZuZSU/GJsBHf+dGLcK0pbEjdbHBsRT3CTF7OFbJorEVfoyQa2bY3FYlGMahAL0GphdW3doAyEQdolYCqnpWXv7ozqOoHpNLbo1GdLosrJB3XGvptGMlBC7+rbb3GnsyHtRUso85JFNZSKIXeGEkYm/1aro99RL160LA3qZVNzKtI7OFNDhrqpwZlo+NuKF8c1z1M5xKGtsE0TQqqe6rTqvpplUxdEQlBGL4FAa2Kaf//SMcRy3j7j9APmraVViJ5pmPF04m/0IS2WE+SLfSWg+isw4NdjVppK6iYPPjXzkpiIWhqnsKwTo1q8m9e7b1mWlNK5HinoYj1qCZx1bBUjtHNtDOcLthz0hnOQaNwWXgPQm4MedN+bxvLw3tRA4gxfmx1U4H0Fkr58oU9QqvVlamLJe8joX5o6zOw8GbzKUizqp5RyEqVDwVsHV2yzSRZuOzHbFMr2zGro3+Ll7lubk3OMcgX8EeePa4jsKOjxNbJMEk9HtGQxBFeqlgxYhIy+NcxgiTylGS88BXoPV5G+FIDkoPzwvWxBZl5pB5W1HmNoYDbgK/+9B6W84MGkIadSvSANoVoWDuYgq6cw0bMU2ynD0NEIcdqjsZU0Gfn0LA6U3wUmxyJr8Tq7Smrq32/mE2bsM95JOtr36BsY7+xWWy6OVgN9iXGoJ2p+xAuF1CMp6iNlW4wPQcytZBwoDlMiU5oNwyUAoXKGsPpODv7KfMadQs5RX3XzZ517bqxzleaCjW6SX/JiLEM3XYMjs+ZPV/TaMHMZa0bTfLo5Iah+jOo7lBYg1EQ4OsOegG6dLQCaTzbklCbivvjMBCwTPNKW0KpBpTpQYCwFIEYJoOWwGBpCkMjnLp3N0VTKTUKp1njPYoIwy/xE/kI2Ght36Zhr8CyarAmFxYr4bKGacutmKJwgHaBll6kn59bE9ju3pYP/R2851iIy8Rbhp6B/UelWlf/1tt5b9u61iDW496ZreVn5BH5EVmKf0wnjbauc41N+LKpUKvT0ZotUInKosAgIHZltc/6g5uh/VS1nZDEh6YaDv69n5UxVJm5xR9QTAdbD8Prwenbb4JgRrqL8XteAtYmnL7W5HB8TgrWpVwZghlh/z9B0vpCS3Xfc1L0Err/NYSvPwysWjSKVZkuoaJU5+qaJdVG9SbxoveN9EpmvV2nVlLFWQ+/y9N/fhv8Mmt9MX7PSb26VCvVKc9Jvrpke4JO+evpWV8SsWqhPjFo/tcQvf4osGqJPjE3Z8rJPi8yWvlFCjGJ6ePVLZ2pFNm1Vk4pZc3fAbsbDEAp0z3t4kTj12CS8wutUD+boXslun8aS91bTmNgFNJgjhS8cVBCn3pSyfiiW7WfOYwwa+amic7JiDzGLEerzp2Du/xUP9dt8/NCa4/9M7kWhWat1NhMbeoDeiREs7HNzZ3aGcnEvli2gzZd0mo2qazzsuVsO/bE1hq3mpl5tbayPINBXtxmuhAZRK1sQa+UTBLjhMFt+GJ02qCpaTh2SzV0SGAZNJIWpyn3mghqHwp2QKO5zhiG35kqou/5kFzQW1u6QxSrabK2ZfmJqxbdA3PrcFv3NjM3sxt4NE/duokzt3BMUovd3qnzQQc6tDJUKSJL1ulq0Kcpk/F9OhVcu2Uol7w8FsqiSU8+NxOWHfn6pxyludNiesOgNUbY8jEWb7uVDJk7pkAxfnRHB+0ac7Yolm2RIhBFbCi/TKybQNNhoo9ph04tDnTeNs8tSP40Ftq0fIqoLDL9SkZI9cwxfvEgaUYrxljP5cSazXaK9aTuhyI9WdBODmVNJylXUa4Zo+BL1G2mye9Y6SauwvIOc8uyvvZxlrDs2SpU0bdmm5obAn4RpksOdqAo3yX84XnTwTSzZtPKOTFSv3+Bu1RMGDqpOLAax+Fs7o4XYA2mNcZcpiomY7PpHcKMU14dbzGUNimJXQMzkhzM8zkKvlwnDvDkkS6szR2qgBm2rjCmRi7ANYwPcRqVYwsAPrWlJlPe/FayIpFEUC4F+9ZvUmI//tdv8Tice3hYpMWfrATFjd+F9rahMhWaI7D05Mmf//b0mBU88HzhjoOMmenYhYFhSEM5JEijC1pdS3WDJqQ+5AJbUh8+gmML+1YhpKIGm2fYnRGIs7ERBsdYTRvOR8d3Hd/xpvo5q48Z0H1XBQ/8WzvSVId0BIBv8+ofFm7EOe3g0076CS0i+UJRwSA6dDNHK0QJypahOGTLUCpsfY0uPvUyDm9ophxupJWs4RmnfJ2G5BSosLmM2hWC27G3GBi6Y81s5uG+1Vy6Uy9aNH13zcpA/9BfpF8k+/0ja8FOJ4nwa4cBr/XX4XwpC4khExPvAz6ZHHWTxgL3I0dB8psRe+23vvfpKPzcHPkTh3pykuYZO1EbXBEKVhXhlqwyfuWc6nbyWjIdIVbGanL+4dj/6A2WUy9WrRB7YhxeZQMjuUl+6fGlVoqBrEQZmCc+easssEpYOQ2gmB97spzNHqjY/r2iLkzVDGhtVL/x3Gh8fwZfKqtPw7E7vVmEEZ5Sa0GeAbArPomMPNu7uP65N/rx9qex99MPr17tutu7t//58sPu7svdV+NXE8/d3tve27Gd28j3gsn0QVjddiYeZ6Xn7A22M8fj6TQAi0IOY8Xto1GSImhHQR6ruFUMy0zkAh+yAjyvQZUAow15Vs7C6cSLqBtMAgMMDPKnlHHSCTKj+jnW2lw5uGpCxfhEg5j5gX/7oH5LGhuGl+HimjGkDgsRQj6Dr0f4zA3m81AdYHi61gnwUSX/JXb8Cw+j3FWAs813xoDwmnyCNIEaLmcZqN6DCh+9C5IrFAuo+dQqTZTllUMZy5hChUtj+6Tfu7g6p6WlfJh43tWPOQKXLv6mR12lFU9P+sOrgfxzczpUeq2skh6abfem83u3Sg0YARYH1m459G2EAtQPbkNRF1WDYGsSWGjuRobOxamxuhVzaiD3mh7eA0YAVUyesJi4RobpWI8YAwLS8cGNUUisJLfBvpCC4jwcy4uiMDou+niKXwDik4svRbkRLE6Pha28UwD2Cv4Qw9SgRRCKdBHfVwDH8cQb+zOXnuRrVyrzGYhlFJzR9NRhFFbk+CLJiYeXZEEZDc80bftVdasWkVTy5QbXaCR5C1Tid51RsByZRa5WGYDNFg604AIl6gw0U3fwHuNzSSjSoQ9L8MQ7dtkTyStot7w7U69eRyFlaYBpPt7v0Es7nenyTy/unMhFj7hDjNcLHui2ROf6HrMo71hSM/t7+533QX6ENphOWhmyEpo3HueYKsEUDMRr2GIs8M7R8dXlsNe/PB2Mzq4G51fD697NzburwclF//IXG1Mj3jbJboO/5P6J5KzCcQWw2NkVRMGAyTgG0kwGXsyJpWkKqmpxupOepINXtUqrxUnw3Qnj2LRBk/cv3/WHP59fXZ1fnNqO3Iqq4hyYLVjeU/Vp//jjD6+29n74aafa/Lpb0iUZW1kgW2iCbKENsoVGyJZhhVS19glzxJ5y6o8a2mWMBoGHppS7qCWyaGEcgbAC3+IlEqyptvHlo5y7gTfl1VVhVjGnuFIEmDjMpX2/UQAWyokEtXetKpIYYqbJNP4HOoh9Aj1Y9IMFaI8RX89SeuzmIYbtzZG+fJX3N2egZiXT4FWwdy69UNLcaQk+ID/fwbqGmihu+2DNf/BRnNZYRuXtq6R0bbCBx1dovS5oj/0km4a2l5nuw7QtDnqtwESDPyZ4zqEcldVy6A7R15lcaynQZHLXrDzicQ84tYG5XwQzhDecUL63LZOo3cwo50yt3RMPlWT2rgy1+7Q2cAdKl0rVUlhePRpe0aa1CgoNvTXrK255S6t7n73xcuHxjUc7DN5pOAPrSIDn/5pdb9XojSXsjHef5A0v7SkD3kTXGG78ndFErMKvk2Bjmp8kv+vnrBYFcDtXc/QESiO3LJzQTmeCT6GQ8xGzZ8zwVieD1u39a+lP/1s52yzuIp1s9qQR+hWmj4rPt0/e/Prrv0YX/ZshEZbOwqiNVnLxQ67OaB5/ukJSF5jX4QVf16NbuiX1KCABjJ4/yc9ADvBLsK8OK6olByTVmKnQfoB8mQV9TE3HF81iJky9PO3B6THYiMdXby6HWSMxzYN1UIcy3VUlznj1hkiYrvMlFdLkhMAJePG6FJoMb9gzYhYvMXuqoK8xr6anHqLHGhkoyiianoUotyOaAOk+MQ2Kzd/6G2mg6Hq5+mXdncsU14JK6RUo7F48qAk4/p4c88s1J649DMXB1nzE3ee+PRfXKuyg2SFFPlIrXn6YsdMINQU6UbFfW4X3px5c/n+dTVdmZdEk1LHpXGpAV8fRzzb1Fslao08aOlDp4jD54H7F3JR0+ln6WeyHNMfpF+oQTHAygl3bkecFA7nlrk227NCmX6WnyDwZCZrsncDRE7++WLbDNmy3/LuAShwCpIQC6X9rVhBL9Go9D8E/bs6gLk645McW30SlGZa1HdLTrGRWq7DwkypIXHpTLR1d1Q6R5h0dXc1Ha8ON7tire3p5DHz88NNd1Pf6R+eXuwfA7BujEZ0eIDSehcT+1g/bO7u2BUzX6ahfu7IQ1dx59FI2popVFA8Dk+ez5xsUyFTHsaPQYH5RL+IVa5aCG5NuwYXJJ8sLvkrXEqUXrpfVtZ9ITjfEJ5fcOdD9O09zCOmkyDaVoUuuJxZqi5owPwoRy1Bx/3A/J+8X26DdUMHt8fnez94UNDEtJtyeiIiCx4PhlVJX90AmK8mYhMcjdE0Vi6scxKYs2Kruz1AVTwOxCWB0q1Kio2Xwj5urAB9pQDvtSxzzsExbakQwFNaPsG3mYdFDH2dROFPJb8u60PN6tAc7yrTjVmVm0knn4vZo+Tk5u8knTSgGklCloo8c9VIHS+Jn2mKyg5FJIHll5ei3+AT/Gv0vAGf/zgOkbDtUsy2S00TNiB10N/BJCzxBtsZ4mugF8RIA1IunwQITtmBK03tMNiWZf2bkqbDm7GSRxH/oolWZ+VRFzBRIufnQhiKs4sQROWFzcgKNjD3M1QXrIrIvG4wTmQ78Ed90wX/5CheldpRPcYlJKvO7sYgeHqkVIzUkVm51V2N6ZonOJVBtrJLFopP+IZQqfNt8TEcjpOQH0OATawCnr0pW4Kpde3bpzBhDJKsbVXt/VFW5FUXWUHZ9kCF53pvPdTM1FZnR/B64/Nyd3+hJRvTU4qjgjVZU8xud702LF/cD4UfX0p5rVSEC5W5Orjfw3MmD3r4RPfGUFlJznCMMvu/gOpNwCux9OV7B9jEp//zOAj4DkwBva6cDBY1jWUbLDFIfkZaQ+ru01Tr+GGE0VJEX2gG5rJYJTTh0gqbvzp3jEBzMwGIlJTP3gST5gXIbW/igjjfhWjJ8zgcmyRSTfmEzp/dLj1xiIi1Kf5y0TllDXXz2vsu4lDum0fc19KfTa2E3olC5jK6hQ5lTRhkUf/8bHirhb5b633pniyWi8qdHxyD9y5th7/L49PxN/2RUNeFJbiuEVjLnB7DaB2PvnI8O9CgHeuQK7MYmdNZi7jChD+gRLoxHypbbtvZSQu5jfjtZgAmswW8AzyYZbQZacYqWo1dqaSxnMW1LJzqpC91ghJbWVDfx9aS7M1wnYEMa4ZutCztZ25NEmpyuF+zVguyaXHnqBpN47M6rA2l4vUKj8n7fynfiWJ/28904FuwVwperaoc0TOwVPfmCZtiSbVtYyFBSX3iSF/4cMzw3be5lFN7eIjzn9CYxyjryGcAMsbDKl7ZKl2vkXQVgwAecqYsd/moNkv5amHBQ92LWRjgowPc5EQ6egi+aCDLBuWyNDYFtZHD/JsRESpV1HRT0/C2IQr5tSwymKGo9rmRTLT6WCpctKl/EUo4FyycqD98s9W938dCfXBnrHRgCUEoKV7Yfwd1Sy431usOxX4fwY/KTVvwf/wPsev43/2wLAA=="
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}