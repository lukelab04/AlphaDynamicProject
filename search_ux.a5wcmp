{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "LocalCss": "<style type=\"text/css\">\n\n\n\n</style>",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "JavaScriptFunctionDeclarations": "\n\n\n\n",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "XbasicFunctionDeclarations": "function getSchemaAjaxCallback as c (e as p)\n\tdim schemaInfo as p\n\tdim info as c\n\tschemaInfo = require(\"schemaInfo\")\n\tinfo = schemaInfo.getConnectionSchemaJSON(\"conn\", e.tableName)\n\t\n\tgetSchemaAjaxCallback = \"{dialog.object}.stateInfo.schema = \" + info + \";\"\n\t\nend function\n\nfunction getAllDataForTable as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tgetAllDataForTable = stdQueries.getTableData(e)\nend function\n\nfunction updateData as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tupdateData = stdQueries.updateTableData(e)\n\t\nend function\n\nfunction countRows as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tcountRows = stdQueries.countRowsWithFilter(e)\nend function\n\nfunction fetch as c (e as p)\n\tdim stdQueries as p\n\tdim result as c\n\tstdQueries = require(\"standardQueries\")\n\tresult = stdQueries.performFetch(e)\n\tfetch = \"{dialog.object}.stateInfo.fetchResult = \" + result + \";\"\n\t\nend function",
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "beforePrepare": "",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "MM/dd/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "info": {
            "createdBy": "lukes",
            "dateCreated": "2024-4-25",
            "dateLastEdited": "2024-7-23",
            "revisionnumber": 116
        },
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": ""
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>",
                "idInternal": "72228034-2134-4681-ba14-4d2ac137f203",
                "crc": "4294912487",
                "v": {
                    "controlType": "formbox",
                    "variableName": "SearchForm",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_SearchForm_7222803421344681ba144d2ac137f203(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SEARCHFORM');};"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Jform1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "",
                        "icon": "$$control.form",
                        "displayText": "[SearchForm]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>"
                    },
                    "formbox": {
                        "height": "3in",
                        "width": "4in",
                        "fillPanelContainer": true,
                        "definitionJSON": "{\n\t\"_state\": {\n\t\t\"showPane\": {\n\t\t\t\"css\": false,\n\t\t\t\"javascript\": false,\n\t\t\t\"items\": true,\n\t\t\t\"preview\": true\n\t\t},\n\t\t\"tabPage\": \"FormLayout\",\n\t\t\"flagShowLineNumbers\": false,\n\t\t\"LayoutSelected_n\": 1,\n\t\t\"fieldSelected_n\": 0,\n\t\t\"layoutGenieFieldSelected_c\": \"\",\n\t\t\"fieldselected_c\": \"\",\n\t\t\"itemSelected_c\": \"\",\n\t\t\"groupSelected_c\": \"\",\n\t\t\"cssMode\": 1,\n\t\t\"jsmode\": 1,\n\t\t\"selected_javascriptLocal_c\": \"\",\n\t\t\"flagPreviewOpen\": false\n\t},\n\t\"formview\": {\n\t\t\"datasource\": {\n\t\t},\n\t\t\"formProperties\": {\n\t\t\t\"hasMultipleLayouts\": false,\n\t\t\t\"theme\": \"{dialog.style}\",\n\t\t\t\"item\": {\n\t\t\t\t\"className\": \"listItem\",\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t},\n\t\t\t\t\"description\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"javascript\": {\n\t\t\t\t\"onChange\": \"\",\n\t\t\t\t\"onInitialize\": \"\"\n\t\t\t},\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"namedLayoutsJSON\": \"\"\n\t\t},\n\t\t\"fields\": [],\n\t\t\"items\": [],\n\t\t\"groups\": [],\n\t\t\"layouts\": [\n\t\t{\n\t\t\t\"layoutName\": \"default\",\n\t\t\t\"defaultLayout\": false,\n\t\t\t\"layoutDataType\": \"Data\",\n\t\t\t\"layoutDefinition\": \"\",\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"defaultTemplate\": \"\",\n\t\t\t\"postProcessJavascript\": \"\",\n\t\t\t\"layoutType\": \"Genie\",\n\t\t\t\"last_layoutGenieFieldSelected_c\": \"\",\n\t\t\t\"itemsArray\": []\n\t\t}],\n\t\t\"javascriptLocal\": [],\n\t\t\"css\": \"\",\n\t\t\"Javascript\": \"\"\n\t}\n}"
                    },
                    "listView": {
                        "allchildren": ""
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'SEARCHFORM': {info: {controlType: 'formbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n"
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>",
                "idInternal": "9bd03259-4af8-4e24-8ed7-8c025938bf3b",
                "crc": "4294949476",
                "isCollapsed": false,
                "containerStartIndex": 0,
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "AdvancedSearch",
                    "type": "Character",
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxSubTheme": "",
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Advanced List Search1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "getFunction": "",
                    "setFunction": "",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "customControl": {
                        "height": "",
                        "width": "100%",
                        "fillPanelContainer": true,
                        "definitionJSON": "{\n\tfields: {\n\t\tfirstname: {\n\t\t\tlabel: '',\n\t\t\tcontrol: {\n\t\t\t\ttype: 'combolist',\n\t\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\t\thtml: '',\n\t\t\t\t\tvalue: ''\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t},\n\tbuttons: {\n\t\tadd: 'Add new search field...',\n\t\tremove: '<img src=\"svgIcon=#alpha-icon-trash:icon\" />',\n\t\tfilter: '<img src=\"svgIcon=#alpha-icon-filter:icon\" />',\n\t\tdate: '<img src=\"svgIcon=#alpha-icon-calendar:icon\" />',\n\t\tlist: '<img src=\"svgIcon=#alpha-icon-chevronDown:icon\" />',\n\t\tnumber: {\n\t\t\tplus: '<img src=\"svgIcon=#alpha-icon-add:icon\" />',\n\t\t\tminus: '<img src=\"svgIcon=#alpha-icon-remove:icon\" />'\n\t\t},\n\t\tsave: '<img src=\"svgIcon=#alpha-icon-save:icon\" />Save query',\n\t\tload: '<img src=\"svgIcon=#alpha-icon-load:icon\" /> Load query',\n\t\trun: '<img src=\"svgIcon=#alpha-icon-filter:icon\" /> Run query',\n\t\tmenu: '<img src=\"svgIcon=#alpha-icon-ellipsisVertical:icon\" />',\n\t\tdaterangepicker: {\n\t\t\tok: '&nbsp;OK&nbsp;',\n\t\t\tcancel: 'Cancel'\n\t\t},\n\t\tcancel: '<img src=\"svgIcon=#alpha-icon-x:icon\" /> Cancel',\n\t\tclearsearch: '<img src=\"svgIcon=#alpha-icon-filterOff:icon\" /> Clear search',\n\t\tstringloadquery: 'Specify saved query to load',\n\t\tstringsavequery: 'Specify name for query',\n\t\tstringquerynamewatermark: 'Query name'\n\t},\n\tsearchOptions: {\n\t\tdisplayDebuggingInfo: false,\n\t\tloadQuery: false,\n\t\tsaveQuery: false,\n\t\tplaceHolder: '',\n\t\tuniqueKey: '',\n\t\tloadType: 'All',\n\t\tlistName: 'dummy_list'\n\t},\n\tsearchMode: 1,\n\tlistName: 'dummy_list',\n\tsubtype: 'AdvancedListSearch',\n\tvariableName: '',\n\tsettingsJSON: '{\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"inputId\": \"{variablename}\",\\r\\n\\t\"variableName\": \"{VARIABLENAME}\",\\r\\n\\t\"theme\": \"{dialog.style}\",\\r\\n\\t\"autoRefreshOnResize\": false,\\r\\n\\t\"datasource\": {\\r\\n\\t\\t\"lowLevel\": \"Data\",\\r\\n\\t\\t\"type\": \"Static JSON\"\\r\\n\\t},\\r\\n\\t\"multiple\": true,\\r\\n\\t\"selectionMode\": \"default\",\\r\\n\\t\"loopNavigate\": false,\\r\\n\\t\"loopNavigateNullSelection\": true,\\r\\n\\t\"allowNullSelection\": false,\\r\\n\\t\"allowTextSelection\": false,\\r\\n\\t\"allowNullDeselection\": false,\\r\\n\\t\"autoRefresh\": false,\\r\\n\\t\"allowAnyValue\": true,\\r\\n\\t\"captureFocus\": false,\\r\\n\\t\"scroll\": false,\\r\\n\\t\"parseValue\": function() {this.data._parsed = [];\\r\\nvar val = this.value[0];\\r\\nif(val){\\r\\n if(val != \\'\\') {\\r\\n  try {\\r\\n   var obj = JSON.parse(val);\\r\\n   this.data._parsed = obj;\\r\\n  } catch(err){\\r\\n   console.log(\\'ERROR: query builder \"\\'+this.variableName+\\'\" could not parse value.\\');\\r\\n  }\\r\\n }\\r\\n}\\r\\nthis.refresh();},\\r\\n\\t\"addItem\": function(v) {var f = this.data.fields[v];\\r\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\r\\nif(typeof f.defaults != \\'undefined\\'){\\r\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\r\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\r\\n}\\r\\nthis.data._parsed.push(d);\\r\\nthis.setValue(JSON.stringify(this.data._parsed));},\\r\\n\\t\"showPicker\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'\\';\\r\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\r\\n this._pickerVBEle.style.display = \\'\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n}\\r\\nif(type == \\'add\\' || type == \\'filter\\') {\\r\\n this._pickerEle.style.width = \\'300px\\';\\r\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\r\\n this._pickerEle.style.width = \\'\\';\\r\\n} else {\\r\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\r\\n}\\r\\nthis._pickerEle.style.display = \\'\\';\\r\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\r\\nsetTimeout(function(){\\r\\n this._pickerShown = true;\\r\\n}.bind(this),0);\\r\\nthis._pickerType = type;\\r\\nthis._pickerIndex = index;},\\r\\n\\t\"hidePicker\": function() {this._pickerEle.style.display = \\'none\\';\\r\\nthis._pickerShown = false;},\\r\\n\\t\"pick\": function(v) {if(this._pickerType == \\'add\\'){\\r\\n this.addItem(v);\\r\\n} else if(this._pickerType == \\'filter\\'){\\r\\n this.data._parsed[this._pickerIndex].op = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n} else{\\r\\n this.data._parsed[this._pickerIndex].value = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n}},\\r\\n\\t\"suggest\": function(index,data) {if(this._pickerIndex != index){\\r\\n this.hidePicker();\\r\\n}\\r\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\r\\nif(!ele) return false;\\r\\nif(data){\\r\\n if(data.length == 0){\\r\\n  this.hidePicker();\\r\\n } else{\\r\\n  this._picker.layout = \\'list\\';\\r\\n  this._picker.populate(data);\\r\\n  this._picker.setValue(ele.value);\\r\\n  try{\\r\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\r\\n   if(f.data.cacheData) f.data = data;\\r\\n  }catch(e) { };\\r\\n }\\r\\n} else{\\r\\n this._picker.layout = \\'loading\\';\\r\\n this._picker.refresh();\\r\\n}\\r\\nif(!this._pickerShown){\\r\\n this.showPicker(ele,\\'suggest\\',index);\\r\\n}},\\r\\n\\t\"_suggestGet\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\r\\nif(ci._pickerShown){\\r\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\r\\n if(ele){\\r\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\r\\n  if(f){\\r\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\r\\n    if(f.control.data.constructor == Array) {\\r\\n     var _d = f.control.data;\\r\\n     var val = ele.value.toLowerCase();\\r\\n     var data = [];\\r\\n     for(var i = 0; i < _d.length; i++) {\\r\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\r\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\r\\n      }\\r\\n     }\\r\\n     ci._picker.layout = \\'list\\';\\r\\n     ci._picker.populate(data);\\r\\n     return\\r\\n    } else {\\r\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\r\\n      var val = ele.value;\\r\\n      var o = {};\\r\\n      var data = [];\\r\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\n      o.searchType = f.control.data.searchType;\\r\\n      o.staticData = f.control.data.staticchoices ;\\r\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n      data = data.join(\\'&\\');\\r\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n      return;\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n   var val = ele.value;\\r\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\r\\n   var data = [];\\r\\n   var o = {};\\r\\n   o.type = f.control.data.type;\\r\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\no.searchType = f.control.data.searchType;\\r\\n   o.connectionString = f.control.data.connectionString;\\r\\n   o.searchField = f.control.data.field;\\r\\n   o.searchTable = f.control.data.table;\\r\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\r\\n    o.searchFieldStored = \\'\\';\\r\\n   } else {\\r\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\r\\n   }\\r\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n   data = data.join(\\'&\\');\\r\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n  }\\r\\n }\\r\\n}},\\r\\n\\t\"getQueryNames\": function(mode) {var data = this.__savedQueries;\\r\\nvar html = [\\'<div class=\"[theme:listBox.base.className]\" style=\"max-height: 300px; overflow:auto;\">\\'];\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n html.push(\\'<div a5-item=\"\\'+mode+\\'NamedQuery\"  a5-value=\"\\'+i+\\'\" class=\"[theme:listBox.base.item.className]\" onmouseover=\"$acn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  onmouseout=\"$rcn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  >\\' + data[i] + \\'</div>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\');\\r\\nvar _html = \\'\\';\\r\\nif(data.length > 0) {\\r\\n _html = html.join(\\'\\');\\r\\n} else {\\r\\n if(mode.toLowerCase() == \\'load\\') {\\r\\n  _html = \\'There are no Saved Queries\\';\\r\\n } else {\\r\\n  _html = \\'\\';\\r\\n }\\r\\n}\\r\\nreturn _html;},\\r\\n\\t\"_fixButtons\": function(data) {var res = [];\\r\\nvar addHTML = \\'<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\';\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\r\\n}\\r\\nreturn res;},\\r\\n\\t\"layout\": \"Default\",\\r\\n\\t\"layouts\": {\\r\\n\\t\\t\\'Default\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'<div class=\"queryBuilder\">\\',\\r\\n\\t\\t\\t\\'\\t<div class=\"queryBuilderList\">\\',\\r\\n\\t\\t\\t\\'\\t{_parsed}\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div><label class=\"[theme:ux.base.labelClassName]\">{[root].fields[field].label}</label></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type == \\\\\\'switch\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0; width: 100px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\'{dialog.style}\\\\\\'}>>,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\'+[count]+\\\\\\'\" a5-item=\"switch\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'list\\\\\\' || [root].fields[field].control.type == \\\\\\'combolist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" {*if [root].fields[field].control.type == \\\\\\'list\\\\\\'}readonly=\"readonly\" a5-item=\"list\" a5-value=\"{[count]}\"{*endif} class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.list},\\\\\\' a5-item=\"list\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"daterange\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendly\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'datepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"date\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendlysingle\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'step\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" style=\"text-align: center;\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.minus},\\\\\\' a5-item=\"step:-\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.plus},\\\\\\' a5-item=\"step:+\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'buttonlist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*if [root].fields[field].control.multiple}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\',\\\\\\'),\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'suggest\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type != \\\\\\'switch\\\\\\' && [root].fields[field].control.type != \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', style: \\\\\\'white-space:nowrap;\\\\\\', html: [root].buttons.filter + \\\\\\' \\\\\\' + op},\\\\\\' a5-item=\"filter\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.remove},\\\\\\' a5-item=\"remove\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"white-space:nowrap;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [count] < [root]._parsed.length-1}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\',button: {style: \\\\\\'width: 60px;\\\\\\'}},[{html: \\\\\\'AND<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.and.\\\\\\'},{html: \\\\\\'OR<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.or.\\\\\\'}],andor,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"andor:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t{/_parsed}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.add},\\\\\\' a5-item=\"add\"\\\\\\')>>}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if [root].searchOptions.loadQuery}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.load},\\\\\\' a5-item=\"loadQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"saveQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.run},\\\\\\' a5-item=\"runQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.clearsearch},\\\\\\' a5-item=\"clearSearch\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Wait\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'Wait....\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Load\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.LOADSAVEDQUERIES\">{[root].buttons.stringloadquery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t{@[scope].getQueryNames(\\\\\\'load\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Save\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY\" >{[root].buttons.stringsavequery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY2\" style=\"margin-top:10px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t<div><input id=\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\" style=\"width:100%\" placeholder=\"{[root].buttons.stringquerynamewatermark}\" class=\"[theme:edit.primary.className|{dialog.style}Edit]\" /></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t{@[scope].getQueryNames(\\\\\\'set\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"save\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t}\\r\\n\\t\\r\\n\\t},\\r\\n\\t\"onBeforeDraw\": function(html) { \\r\\nif(typeof this.data._parsed == \\'undefined\\') { \\r\\n\\tthis.data._parsed = [];\\r\\n}},\\r\\n\\t\"onBeforePopulate\": function(data) { \\r\\nvar ld = [];\\r\\nif(data.fields){\\r\\n\\tfor(var f in data.fields){\\r\\n\\t\\tld.push({value: f, html: data.fields[f].label});\\r\\n\\t\\tif(typeof data.fields[f].control == \\'undefined\\'){\\r\\n\\t\\t\\tdata.fields[f].control = {type: \\'default\\'};\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nthis._fieldMenu = ld;},\\r\\n\\t\"onChange\": function(v) { \\r\\nif(!this._stopRepaint){\\r\\n\\tthis.parseValue();\\r\\n}},\\r\\n\\t\"_onInitialize\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\r\\nthis.parseValue();\\r\\nvar cEle = $(this.contId);\\r\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\r\\n  if(watch){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\r\\n   if(f){\\r\\n    if(f.control.type == \\'suggest\\' ){\\r\\n     var len = ele.value.length;\\r\\n     var min = 3;\\r\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\r\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\r\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\r\\n    }\\r\\n    var keyCode = e.charCode || e.keyCode;\\r\\n    if(ci._pickerShown){\\r\\n     if(keyCode == 13){\\r\\n      if(ci._picker.value.length > 0){\\r\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\r\\n      }\\r\\n     } else if(keyCode == 38){\\r\\n      ci._picker.navigate(\\'prev\\');\\r\\n     } else if(keyCode == 40){\\r\\n      ci._picker.navigate(\\'next\\');\\r\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\r\\n      if(f.control.data.constructor != Array ) {\\r\\n       clearTimeout(ci._suggestTO);\\r\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\r\\n      } else {\\r\\n       ci._suggestGet();\\r\\n      }\\r\\n     }\\r\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\r\\n     if(keyCode == 40 && e.ctrlKey){\\r\\n      ci.items.list.onClick.call(ci,indx)\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var tag = ele.tagName || \\'\\';\\r\\n  tag = tag.toLowerCase();\\r\\n  if(tag == \\'input\\'){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   if(typeof indx == \\'number\\'){\\r\\n    ci._stopRepaint = true;\\r\\n    ci.data._parsed[indx].value = ele.value;\\r\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\r\\n    ci._stopRepaint = false;\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\nvar pEle = document.createElement(\\'div\\');\\r\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\r\\npEle.className = \\'[theme:menu.base.className]\\';\\r\\npEle.id = this.contId+\\'.picker\\';\\r\\nvar html = [];\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickervb\" class=\"[theme:menu.base.innerClassName]\" style=\"max-height: 300px; overflow: auto;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdate\" class=\"[theme:menu.base.innerClassName]\" style=\"display: none;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterange\" class=\"[theme:menu.base.innerClassName]\" style=\"white-space:nowrap; padding: 2px; display: none;\">\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangestart\" style=\"display:inline-block;margin-right:2px;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangeend\" style=\"display:inline-block;\"></div>\\');\\r\\nhtml.push(\\'<div style=\"text-align:center; margin-top:2px;\">\\');\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\r\\nhtml.push(\\'</div>\\');\\r\\nhtml.push(\\'</div>\\');\\r\\npEle.innerHTML = html.join(\\'\\');\\r\\ncEle.parentNode.appendChild(pEle);\\r\\nthis._pickerEle = pEle;\\r\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\r\\n parentControl: this.variableName,\\r\\n captureFocus: false,\\r\\n loopNavigate: true,\\r\\n loopNavigateNullSelection: true,\\r\\n allowNullSelection: true,\\r\\n allowAnyValue: false,\\r\\n layout: \\'list\\',\\r\\n layouts: {\\r\\n  loading: {\\r\\n   type: \\'static\\',\\r\\n   html: \\'<div class=\"[theme:menu.base.item.className]\">Loading...</div>\\'\\r\\n  },\\r\\n  list: {\\r\\n   type: \\'template\\',\\r\\n   template: [\\r\\n    \\'{*if typeof [value] == \\\\\\'string\\\\\\'}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{[value]}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{[value]}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*else}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{value}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{html}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*endif}\\'\\r\\n   ].join(\\'\\')\\r\\n  }\\r\\n },\\r\\n items: {\\r\\n  listItem: {\\r\\n   selectable: true,\\r\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\r\\n   onClick: function(v){\\r\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n    pvb.pick(v)\\r\\n    pvb.hidePicker();\\r\\n   }\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\r\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onClick: function(v){\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  pvb.pick(v)\\r\\n  pvb.hidePicker();\\r\\n }\\r\\n});\\r\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\r\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onSelect: function() {\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  var _drobj = pvb._pickerDateRangeEnd;\\r\\n  if(this.date > _drobj.date) {\\r\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\r\\n  } else {\\r\\n   _drobj.refresh();\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n disabledDates: {\\r\\n  low: function() {\\r\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n   if(pvb._pickerDateRangeStart) {\\r\\n    return pvb._pickerDateRangeStart.date;\\r\\n   }\\r\\n   return false;\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\r\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\r\\n  this.pick(v);\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\r\\n if(this._pickerShown){\\r\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\r\\n }\\r\\n},this,true); },\\r\\n\\t\"items\": {\\r\\n\\t\\t\\'remove\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed.splice(Number(v),1);\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\tif(this.data._parsed.length == 0 ) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar listName = this.data.searchOptions.listName;\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryData = [];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'add\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(this._fieldMenu);\\r\\n\\t\\t\\tthis.showPicker($(tid),\\'add\\',-1);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'filter\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tvar _filterMenu = [\\r\\n\\t\\t\\t\\t{html: \\'Equals\\', value: \\'=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than\\', value: \\'<\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than\\', value: \\'>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\r\\n\\t\\t\\t];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar type = this.data.fields[f].control.type;\\r\\n\\t\\t\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\r\\n\\t\\t\\tif(exclude.indexOf(type) == -1 ) {\\r\\n\\t\\t\\t\\t _filterMenu = _filterMenu.concat(\\r\\n\\t\\t\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Contains\\', value: \\'..x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Starts with\\', value: \\'x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Ends with\\', value: \\'..x\\'}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(_filterMenu);\\r\\n\\t\\t\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\r\\n\\t\\t\\tthis.showPicker(ele,\\'filter\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'switch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = this.data._parsed[Number(v)];\\r\\n\\t\\tvar f = this.data.fields[d.field];\\r\\n\\t\\tif(f){\\r\\n\\t\\t\\tvar vals = f.control.data;\\r\\n\\t\\t\\tif(vals){\\r\\n\\t\\t\\t\\tif(d.value == vals[0]) d.value = vals[1];\\r\\n\\t\\t\\t\\telse d.value = vals[0];\\r\\n\\t\\t\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'list\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\t\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\r\\n\\t\\t\\tif(d.constructor == Array) { \\r\\n\\t\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\t\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\t\\tthis.showPicker(iEle,\\'list\\',v);\\r\\n\\t\\t\\t\\tiEle.focus();\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\t\\tif(this._pickerIndex != v){\\r\\n\\t\\t\\t\\t\\tthis.hidePicker();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\r\\n\\t\\t\\t\\tif(!ele) return false;\\r\\n\\t\\t\\t\\tthis._picker.layout = \\'loading\\';\\r\\n\\t\\t\\t\\tthis._picker.refresh();\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif(!this._pickerShown){\\r\\n\\t\\t\\t\\t\\tthis.showPicker(ele,\\'list\\',v);\\r\\n\\t\\t\\t\\t\\tthis._pickerShown = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis._suggestGet();\\r\\n\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'date\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDate.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDate.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'date\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'step\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\tvar val = this.data._parsed[v].value;\\r\\n\\t\\tval = $u.s.toNum(val);\\r\\n\\t\\tif(ia == \\'-\\') val -= d.step || 1;\\r\\n\\t\\telse val += d.step || 1;\\r\\n\\t\\t\\r\\n\\t\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\r\\n\\t\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed[v].value = val;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'buttonlist\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[ia].field;\\r\\n\\t\\tvar obj = this.data.fields[f];\\r\\n\\t\\tif(obj.control.multiple) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar v2 = this.data._parsed[ia].value;\\r\\n\\t\\t\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\r\\n\\t\\t\\tif(v2 == \\'\\') v2 = [];\\r\\n\\t\\t\\telse v2 = v2.split(\\',\\');\\r\\n\\t\\t\\tvar vi = v2.indexOf(v)\\r\\n\\t\\t\\tif(vi == -1) { \\r\\n\\t\\t\\t\\tv2.push(v);\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\t\\tv2.splice(vi,1)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tv = v2.join(\\',\\');\\r\\n\\t\\t} \\r\\n\\t\\tthis.data._parsed[ia].value = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t}catch(err){ }\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'saveQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'runQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tlistName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') { \\r\\n\\t\\t\\talert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tvar query = this.value\\r\\n\\t\\t\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.queryData = this.value[0];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar m = []; \\r\\n\\t\\t\\tfor(var n in this.data.fields) { \\r\\n\\t\\t\\t\\tvar flag = this.data.fields[n].control.multiple; \\r\\n\\t\\t\\t\\tif(flag) { m.push(n);}\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.allowMultiple = m ;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar searchMode = 1;\\r\\n\\t\\t\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _d = [];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\r\\n\\t\\t\\tif(searchMode == 2) { \\r\\n\\t\\t\\t\\tvar ss = {dialog.object}.getControl(this.listName);\\r\\n\\t\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t_data = _d.join(\\'&\\')\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'cancel\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tthis.setLayout(\\'Default\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t try{\\r\\n\\t\\t  uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t }catch(err){ }\\r\\n\\t\\t var queryName = this.__savedQueries[v]\\r\\n\\t\\t var data = [];\\r\\n\\t\\t data.push( \\'_mode=loadQueryFromRepo\\');\\r\\n\\t\\t data.push(\\'_queryToLoad=\\' + queryName);\\r\\n\\t\\t data.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t data = data.join(\\'&\\')\\r\\n\\t\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'setNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\r\\n\\t\\tif(ele) ele.value = this.__savedQueries[v];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'clearSearch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t mode = this.data.searchOptions.mode;\\r\\n\\t\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t listName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') {\\r\\n\\t\\t alert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else {\\r\\n\\t\\t var query = this.value\\r\\n\\t\\t var obj = {};\\r\\n\\t\\t this.setValue(\\'\\');\\r\\n\\t\\t obj.queryData = [];\\r\\n\\t\\t obj.listName = listName;\\r\\n\\t\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t obj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'save\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar queryDef = this.value[0];\\r\\n\\t\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\r\\n\\t\\t\\r\\n\\t\\tif(queryName == \\'\\') { \\r\\n\\t\\t\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\"color:red;\">You have not specified the query name</span>\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryName = queryName \\r\\n\\t\\t\\tobj.queryDefinition = queryDef \\r\\n\\t\\t\\tdebugger;\\r\\n\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar data = [];\\r\\n\\t\\t\\tdata.push(\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\r\\n\\t\\t\\tdata.push( \\'_mode=saveQueryToRepo\\');\\r\\n\\t\\t\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t\\tdata = data.join(\\'&\\')\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'andor\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tthis.data._parsed[ia].andor = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendly\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar d = [];\\r\\n\\t\\td.push(\\'This Week\\');\\r\\n\\t\\td.push(\\'This Week-to-date\\');\\r\\n\\t\\td.push(\\'Next Week\\');\\r\\n\\t\\td.push(\\'Next 7 days\\');\\r\\n\\t\\td.push(\\'This Month\\');\\r\\n\\t\\td.push(\\'This Month-to-date\\');\\r\\n\\t\\td.push(\\'Last Week\\');\\r\\n\\t\\td.push(\\'Last 7 days\\');\\r\\n\\t\\td.push(\\'Last Month\\');\\r\\n\\t\\td.push(\\'Last 30 days\\');\\r\\n\\t\\td.push(\\'Next Month\\');\\r\\n\\t\\td.push(\\'Next 30 days\\');\\r\\n\\t\\td.push(\\'This Year\\');\\r\\n\\t\\td.push(\\'Last Year\\');\\r\\n\\t\\td.push(\\'Next Year\\');\\r\\n\\t\\td.push(\\'This Year-to-date\\');\\r\\n\\t\\td.push(\\'This Quarter\\');\\r\\n\\t\\td.push(\\'This Quarter-to-date\\');\\r\\n\\t\\td.push(\\'Last Quarter\\');\\r\\n\\t\\td.push(\\'Next Quarter\\');\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t var f = this.data._parsed[v].field;\\r\\n\\t\\t this._picker.layout = \\'list\\';\\r\\n\\t\\t this._picker.populate(d);\\r\\n\\t\\t this._picker.setValue(\\'\\');\\r\\n\\t\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t this.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t iEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'daterange\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDateRangeStart.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart.format = frm;\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvar range = this.data._parsed[v].value || \\'\\';\\r\\n\\t\\t\\trange = range.split(\\'..\\');\\r\\n\\t\\t\\tif(range.length == 1) { \\r\\n\\t\\t\\t\\trange.push(\\'\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDateRangeStart.setValue(range[0]);\\r\\n\\t\\t\\tthis._pickerDateRangeEnd.setValue(range[1]);\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'daterange\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendlysingle\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = [];\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\td.push(\\'Today\\');\\r\\n\\t\\td.push(\\'Yesterday\\');\\r\\n\\t\\td.push(\\'Tomorrow\\');\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\tthis._picker.setValue(\\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t\\tiEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t},\\r\\n\\t\"wrapper\": {\\r\\n\\t\\t\"allow\": false\\r\\n\\t}\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"fields\": {\\r\\n\\t\\t\"firstname\": {\\r\\n\\t\\t\\t\"label\": \"\",\\r\\n\\t\\t\\t\"control\": {\\r\\n\\t\\t\\t\\t\"type\": \"combolist\",\\r\\n\\t\\t\\t\\t\"data\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\"html\": \"\",\\r\\n\\t\\t\\t\\t\\t\"value\": \"\"\\r\\n\\t\\t\\t\\t}]\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"buttons\": {\\r\\n\\t\\t\"add\": \"Add new search field...\",\\r\\n\\t\\t\"remove\": \"<img src=\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\" />\",\\r\\n\\t\\t\"filter\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" />\",\\r\\n\\t\\t\"date\": \"<img src=\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\" />\",\\r\\n\\t\\t\"list\": \"<img src=\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\" />\",\\r\\n\\t\\t\"number\": {\\r\\n\\t\\t\\t\"plus\": \"<img src=\\\\\"svgIcon=#alpha-icon-add:icon\\\\\" />\",\\r\\n\\t\\t\\t\"minus\": \"<img src=\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\" />\"\\r\\n\\t\\t},\\r\\n\\t\\t\"save\": \"<img src=\\\\\"svgIcon=#alpha-icon-save:icon\\\\\" />Save query\",\\r\\n\\t\\t\"load\": \"<img src=\\\\\"svgIcon=#alpha-icon-load:icon\\\\\" /> Load query\",\\r\\n\\t\\t\"run\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" /> Run query\",\\r\\n\\t\\t\"menu\": \"<img src=\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\" />\",\\r\\n\\t\\t\"daterangepicker\": {\\r\\n\\t\\t\\t\"ok\": \"&nbsp;OK&nbsp;\",\\r\\n\\t\\t\\t\"cancel\": \"Cancel\"\\r\\n\\t\\t},\\r\\n\\t\\t\"cancel\": \"<img src=\\\\\"svgIcon=#alpha-icon-x:icon\\\\\" /> Cancel\",\\r\\n\\t\\t\"clearsearch\": \"<img src=\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\" /> Clear search\",\\r\\n\\t\\t\"stringloadquery\": \"Specify saved query to load\",\\r\\n\\t\\t\"stringsavequery\": \"Specify name for query\",\\r\\n\\t\\t\"stringquerynamewatermark\": \"Query name\"\\r\\n\\t},\\r\\n\\t\"searchOptions\": {\\r\\n\\t\\t\"displayDebuggingInfo\": false,\\r\\n\\t\\t\"loadQuery\": false,\\r\\n\\t\\t\"saveQuery\": false,\\r\\n\\t\\t\"placeHolder\": \"\",\\r\\n\\t\\t\"uniqueKey\": \"\",\\r\\n\\t\\t\"loadType\": \"All\",\\r\\n\\t\\t\"listName\": \"dummy_list\"\\r\\n\\t},\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"subtype\": \"AdvancedListSearch\",\\r\\n\\t\"variableName\": \"\",\\r\\n\\t\"settingsJSON\": \"{\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"inputId\\\\\": \\\\\"{variablename}\\\\\",\\\\r\\\\n\\\\t\\\\\"variableName\\\\\": \\\\\"{VARIABLENAME}\\\\\",\\\\r\\\\n\\\\t\\\\\"theme\\\\\": \\\\\"{dialog.style}\\\\\",\\\\r\\\\n\\\\t\\\\\"autoRefreshOnResize\\\\\": false,\\\\r\\\\n\\\\t\\\\\"datasource\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"lowLevel\\\\\": \\\\\"Data\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"type\\\\\": \\\\\"Static JSON\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"multiple\\\\\": true,\\\\r\\\\n\\\\t\\\\\"selectionMode\\\\\": \\\\\"default\\\\\",\\\\r\\\\n\\\\t\\\\\"loopNavigate\\\\\": false,\\\\r\\\\n\\\\t\\\\\"loopNavigateNullSelection\\\\\": true,\\\\r\\\\n\\\\t\\\\\"allowNullSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowTextSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowNullDeselection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"autoRefresh\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowAnyValue\\\\\": true,\\\\r\\\\n\\\\t\\\\\"captureFocus\\\\\": false,\\\\r\\\\n\\\\t\\\\\"scroll\\\\\": false,\\\\r\\\\n\\\\t\\\\\"parseValue\\\\\": function() {this.data._parsed = [];\\\\r\\\\nvar val = this.value[0];\\\\r\\\\nif(val){\\\\r\\\\n if(val != \\'\\') {\\\\r\\\\n  try {\\\\r\\\\n   var obj = JSON.parse(val);\\\\r\\\\n   this.data._parsed = obj;\\\\r\\\\n  } catch(err){\\\\r\\\\n   console.log(\\'ERROR: query builder \\\\\"\\'+this.variableName+\\'\\\\\" could not parse value.\\');\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nthis.refresh();},\\\\r\\\\n\\\\t\\\\\"addItem\\\\\": function(v) {var f = this.data.fields[v];\\\\r\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\r\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\r\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\r\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\r\\\\n}\\\\r\\\\nthis.data._parsed.push(d);\\\\r\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\r\\\\n\\\\t\\\\\"showPicker\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\r\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\r\\\\n this._pickerVBEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n}\\\\r\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\r\\\\n this._pickerEle.style.width = \\'300px\\';\\\\r\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\r\\\\n this._pickerEle.style.width = \\'\\';\\\\r\\\\n} else {\\\\r\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\r\\\\n}\\\\r\\\\nthis._pickerEle.style.display = \\'\\';\\\\r\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\r\\\\nsetTimeout(function(){\\\\r\\\\n this._pickerShown = true;\\\\r\\\\n}.bind(this),0);\\\\r\\\\nthis._pickerType = type;\\\\r\\\\nthis._pickerIndex = index;},\\\\r\\\\n\\\\t\\\\\"hidePicker\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\r\\\\nthis._pickerShown = false;},\\\\r\\\\n\\\\t\\\\\"pick\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\r\\\\n this.addItem(v);\\\\r\\\\n} else if(this._pickerType == \\'filter\\'){\\\\r\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n} else{\\\\r\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"suggest\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\r\\\\n this.hidePicker();\\\\r\\\\n}\\\\r\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\r\\\\nif(!ele) return false;\\\\r\\\\nif(data){\\\\r\\\\n if(data.length == 0){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n } else{\\\\r\\\\n  this._picker.layout = \\'list\\';\\\\r\\\\n  this._picker.populate(data);\\\\r\\\\n  this._picker.setValue(ele.value);\\\\r\\\\n  try{\\\\r\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\r\\\\n   if(f.data.cacheData) f.data = data;\\\\r\\\\n  }catch(e) { };\\\\r\\\\n }\\\\r\\\\n} else{\\\\r\\\\n this._picker.layout = \\'loading\\';\\\\r\\\\n this._picker.refresh();\\\\r\\\\n}\\\\r\\\\nif(!this._pickerShown){\\\\r\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_suggestGet\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\r\\\\nif(ci._pickerShown){\\\\r\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\r\\\\n if(ele){\\\\r\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\r\\\\n  if(f){\\\\r\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\r\\\\n    if(f.control.data.constructor == Array) {\\\\r\\\\n     var _d = f.control.data;\\\\r\\\\n     var val = ele.value.toLowerCase();\\\\r\\\\n     var data = [];\\\\r\\\\n     for(var i = 0; i < _d.length; i++) {\\\\r\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\r\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n     ci._picker.layout = \\'list\\';\\\\r\\\\n     ci._picker.populate(data);\\\\r\\\\n     return\\\\r\\\\n    } else {\\\\r\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\r\\\\n      var val = ele.value;\\\\r\\\\n      var o = {};\\\\r\\\\n      var data = [];\\\\r\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\n      o.searchType = f.control.data.searchType;\\\\r\\\\n      o.staticData = f.control.data.staticchoices ;\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n      data = data.join(\\'&\\');\\\\r\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n      return;\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n   var val = ele.value;\\\\r\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\r\\\\n   var data = [];\\\\r\\\\n   var o = {};\\\\r\\\\n   o.type = f.control.data.type;\\\\r\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\no.searchType = f.control.data.searchType;\\\\r\\\\n   o.connectionString = f.control.data.connectionString;\\\\r\\\\n   o.searchField = f.control.data.field;\\\\r\\\\n   o.searchTable = f.control.data.table;\\\\r\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\r\\\\n    o.searchFieldStored = \\'\\';\\\\r\\\\n   } else {\\\\r\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\r\\\\n   }\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n   data = data.join(\\'&\\');\\\\r\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"getQueryNames\\\\\": function(mode) {var data = this.__savedQueries;\\\\r\\\\nvar html = [\\'<div class=\\\\\"[theme:listBox.base.className]\\\\\" style=\\\\\"max-height: 300px; overflow:auto;\\\\\">\\'];\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n html.push(\\'<div a5-item=\\\\\"\\'+mode+\\'NamedQuery\\\\\"  a5-value=\\\\\"\\'+i+\\'\\\\\" class=\\\\\"[theme:listBox.base.item.className]\\\\\" onmouseover=\\\\\"$acn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  onmouseout=\\\\\"$rcn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\r\\\\n}\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nvar _html = \\'\\';\\\\r\\\\nif(data.length > 0) {\\\\r\\\\n _html = html.join(\\'\\');\\\\r\\\\n} else {\\\\r\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\r\\\\n  _html = \\'There are no Saved Queries\\';\\\\r\\\\n } else {\\\\r\\\\n  _html = \\'\\';\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nreturn _html;},\\\\r\\\\n\\\\t\\\\\"_fixButtons\\\\\": function(data) {var res = [];\\\\r\\\\nvar addHTML = \\'<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\';\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\r\\\\n}\\\\r\\\\nreturn res;},\\\\r\\\\n\\\\t\\\\\"layout\\\\\": \\\\\"Default\\\\\",\\\\r\\\\n\\\\t\\\\\"layouts\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'Default\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div class=\\\\\"queryBuilder\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div class=\\\\\"queryBuilderList\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div><label class=\\\\\"[theme:ux.base.labelClassName]\\\\\">{[root].fields[field].label}</label></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\'switch\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'}>>,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-item=\\\\\"switch\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\'combolist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\'}readonly=\\\\\"readonly\\\\\" a5-item=\\\\\"list\\\\\" a5-value=\\\\\"{[count]}\\\\\"{*endif} class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\' a5-item=\\\\\"list\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"daterange\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendly\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'datepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"date\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendlysingle\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'step\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" style=\\\\\"text-align: center;\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\' a5-item=\\\\\"step:-\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\' a5-item=\\\\\"step:+\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'buttonlist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.multiple}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\',\\\\\\\\\\'),\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'suggest\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\'switch\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', style: \\\\\\\\\\'white-space:nowrap;\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\' \\\\\\\\\\' + op},\\\\\\\\\\' a5-item=\\\\\"filter\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\' a5-item=\\\\\"remove\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"white-space:nowrap;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\',button: {style: \\\\\\\\\\'width: 60px;\\\\\\\\\\'}},[{html: \\\\\\\\\\'AND<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.and.\\\\\\\\\\'},{html: \\\\\\\\\\'OR<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.or.\\\\\\\\\\'}],andor,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"andor:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{/_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.add},\\\\\\\\\\' a5-item=\\\\\"add\\\\\"\\\\\\\\\\')>>}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.load},\\\\\\\\\\' a5-item=\\\\\"loadQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"saveQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.run},\\\\\\\\\\' a5-item=\\\\\"runQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\' a5-item=\\\\\"clearSearch\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Wait\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'Wait....\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Load\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{@[scope].getQueryNames(\\\\\\\\\\'load\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\" style=\\\\\"margin-top:10px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div><input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\" style=\\\\\"width:100%\\\\\" placeholder=\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\" class=\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\" /></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{@[scope].getQueryNames(\\\\\\\\\\'set\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"save\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"onBeforeDraw\\\\\": function(html) { \\\\r\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\r\\\\n\\\\tthis.data._parsed = [];\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"onBeforePopulate\\\\\": function(data) { \\\\r\\\\nvar ld = [];\\\\r\\\\nif(data.fields){\\\\r\\\\n\\\\tfor(var f in data.fields){\\\\r\\\\n\\\\t\\\\tld.push({value: f, html: data.fields[f].label});\\\\r\\\\n\\\\t\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\r\\\\n\\\\t\\\\t\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t}\\\\r\\\\n}\\\\r\\\\nthis._fieldMenu = ld;},\\\\r\\\\n\\\\t\\\\\"onChange\\\\\": function(v) { \\\\r\\\\nif(!this._stopRepaint){\\\\r\\\\n\\\\tthis.parseValue();\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_onInitialize\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\r\\\\nthis.parseValue();\\\\r\\\\nvar cEle = $(this.contId);\\\\r\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\r\\\\n  if(watch){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\r\\\\n   if(f){\\\\r\\\\n    if(f.control.type == \\'suggest\\' ){\\\\r\\\\n     var len = ele.value.length;\\\\r\\\\n     var min = 3;\\\\r\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\r\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\r\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\r\\\\n    }\\\\r\\\\n    var keyCode = e.charCode || e.keyCode;\\\\r\\\\n    if(ci._pickerShown){\\\\r\\\\n     if(keyCode == 13){\\\\r\\\\n      if(ci._picker.value.length > 0){\\\\r\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\r\\\\n      }\\\\r\\\\n     } else if(keyCode == 38){\\\\r\\\\n      ci._picker.navigate(\\'prev\\');\\\\r\\\\n     } else if(keyCode == 40){\\\\r\\\\n      ci._picker.navigate(\\'next\\');\\\\r\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\r\\\\n      if(f.control.data.constructor != Array ) {\\\\r\\\\n       clearTimeout(ci._suggestTO);\\\\r\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\r\\\\n      } else {\\\\r\\\\n       ci._suggestGet();\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\r\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\r\\\\n      ci.items.list.onClick.call(ci,indx)\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var tag = ele.tagName || \\'\\';\\\\r\\\\n  tag = tag.toLowerCase();\\\\r\\\\n  if(tag == \\'input\\'){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   if(typeof indx == \\'number\\'){\\\\r\\\\n    ci._stopRepaint = true;\\\\r\\\\n    ci.data._parsed[indx].value = ele.value;\\\\r\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\r\\\\n    ci._stopRepaint = false;\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\nvar pEle = document.createElement(\\'div\\');\\\\r\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\r\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\r\\\\npEle.id = this.contId+\\'.picker\\';\\\\r\\\\nvar html = [];\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickervb\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"max-height: 300px; overflow: auto;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdate\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"display: none;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\">\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\" style=\\\\\"display:inline-block;margin-right:2px;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\" style=\\\\\"display:inline-block;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div style=\\\\\"text-align:center; margin-top:2px;\\\\\">\\');\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\npEle.innerHTML = html.join(\\'\\');\\\\r\\\\ncEle.parentNode.appendChild(pEle);\\\\r\\\\nthis._pickerEle = pEle;\\\\r\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n captureFocus: false,\\\\r\\\\n loopNavigate: true,\\\\r\\\\n loopNavigateNullSelection: true,\\\\r\\\\n allowNullSelection: true,\\\\r\\\\n allowAnyValue: false,\\\\r\\\\n layout: \\'list\\',\\\\r\\\\n layouts: {\\\\r\\\\n  loading: {\\\\r\\\\n   type: \\'static\\',\\\\r\\\\n   html: \\'<div class=\\\\\"[theme:menu.base.item.className]\\\\\">Loading...</div>\\'\\\\r\\\\n  },\\\\r\\\\n  list: {\\\\r\\\\n   type: \\'template\\',\\\\r\\\\n   template: [\\\\r\\\\n    \\'{*if typeof [value] == \\\\\\\\\\'string\\\\\\\\\\'}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{[value]}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{[value]}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*else}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{value}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{html}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*endif}\\'\\\\r\\\\n   ].join(\\'\\')\\\\r\\\\n  }\\\\r\\\\n },\\\\r\\\\n items: {\\\\r\\\\n  listItem: {\\\\r\\\\n   selectable: true,\\\\r\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\r\\\\n   onClick: function(v){\\\\r\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n    pvb.pick(v)\\\\r\\\\n    pvb.hidePicker();\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\r\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onClick: function(v){\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  pvb.pick(v)\\\\r\\\\n  pvb.hidePicker();\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\r\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onSelect: function() {\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\r\\\\n  if(this.date > _drobj.date) {\\\\r\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\r\\\\n  } else {\\\\r\\\\n   _drobj.refresh();\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n disabledDates: {\\\\r\\\\n  low: function() {\\\\r\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n   if(pvb._pickerDateRangeStart) {\\\\r\\\\n    return pvb._pickerDateRangeStart.date;\\\\r\\\\n   }\\\\r\\\\n   return false;\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\r\\\\n  this.pick(v);\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true); },\\\\r\\\\n\\\\t\\\\\"items\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'remove\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed.splice(Number(v),1);\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\tif(this.data._parsed.length == 0 ) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = [];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'add\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(this._fieldMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'filter\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _filterMenu = [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\r\\\\n\\\\t\\\\t\\\\t];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar type = this.data.fields[f].control.type;\\\\r\\\\n\\\\t\\\\t\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\r\\\\n\\\\t\\\\t\\\\tif(exclude.indexOf(type) == -1 ) {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t _filterMenu = _filterMenu.concat(\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t[\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t]\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(_filterMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'switch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = this.data._parsed[Number(v)];\\\\r\\\\n\\\\t\\\\tvar f = this.data.fields[d.field];\\\\r\\\\n\\\\t\\\\tif(f){\\\\r\\\\n\\\\t\\\\t\\\\tvar vals = f.control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(vals){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\telse d.value = vals[0];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'list\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\r\\\\n\\\\t\\\\t\\\\tif(d.constructor == Array) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(this._pickerIndex != v){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.hidePicker();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!ele) return false;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'loading\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.refresh();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!this._pickerShown){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.showPicker(ele,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis._pickerShown = true;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._suggestGet();\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'date\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDate.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'step\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\tvar val = this.data._parsed[v].value;\\\\r\\\\n\\\\t\\\\tval = $u.s.toNum(val);\\\\r\\\\n\\\\t\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\r\\\\n\\\\t\\\\telse val += d.step || 1;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\r\\\\n\\\\t\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed[v].value = val;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'buttonlist\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[ia].field;\\\\r\\\\n\\\\t\\\\tvar obj = this.data.fields[f];\\\\r\\\\n\\\\t\\\\tif(obj.control.multiple) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar v2 = this.data._parsed[ia].value;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\r\\\\n\\\\t\\\\t\\\\tif(v2 == \\'\\') v2 = [];\\\\r\\\\n\\\\t\\\\t\\\\telse v2 = v2.split(\\',\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar vi = v2.indexOf(v)\\\\r\\\\n\\\\t\\\\t\\\\tif(vi == -1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.push(v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.splice(vi,1)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tv = v2.join(\\',\\');\\\\r\\\\n\\\\t\\\\t} \\\\r\\\\n\\\\t\\\\tthis.data._parsed[ia].value = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'saveQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'runQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tlistName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\talert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\tvar query = this.value\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = this.value[0];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar m = []; \\\\r\\\\n\\\\t\\\\t\\\\tfor(var n in this.data.fields) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar flag = this.data.fields[n].control.multiple; \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(flag) { m.push(n);}\\\\r\\\\n\\\\t\\\\t\\\\t};\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.allowMultiple = m ;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar searchMode = 1;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _d = [];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\r\\\\n\\\\t\\\\t\\\\tif(searchMode == 2) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t_data = _d.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'cancel\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Default\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t try{\\\\r\\\\n\\\\t\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t }catch(err){ }\\\\r\\\\n\\\\t\\\\t var queryName = this.__savedQueries[v]\\\\r\\\\n\\\\t\\\\t var data = [];\\\\r\\\\n\\\\t\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\r\\\\n\\\\t\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t data = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'setNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\r\\\\n\\\\t\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'clearSearch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t mode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') {\\\\r\\\\n\\\\t\\\\t alert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else {\\\\r\\\\n\\\\t\\\\t var query = this.value\\\\r\\\\n\\\\t\\\\t var obj = {};\\\\r\\\\n\\\\t\\\\t this.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t obj.queryData = [];\\\\r\\\\n\\\\t\\\\t obj.listName = listName;\\\\r\\\\n\\\\t\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar queryDef = this.value[0];\\\\r\\\\n\\\\t\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(queryName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\"color:red;\\\\\">You have not specified the query name</span>\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryName = queryName \\\\r\\\\n\\\\t\\\\t\\\\tobj.queryDefinition = queryDef \\\\r\\\\n\\\\t\\\\t\\\\tdebugger;\\\\r\\\\n\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar data = [];\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\r\\\\n\\\\t\\\\t\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t\\\\tdata = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'andor\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.data._parsed[ia].andor = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendly\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\td.push(\\'This Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Week-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Quarter\\');\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t var f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t this._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t this._picker.populate(d);\\\\r\\\\n\\\\t\\\\t this._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t iEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'daterange\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDateRangeStart.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\trange = range.split(\\'..\\');\\\\r\\\\n\\\\t\\\\t\\\\tif(range.length == 1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\trange.push(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendlysingle\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\td.push(\\'Today\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Yesterday\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Tomorrow\\');\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\\"wrapper\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t}\\\\r\\\\n}\",\\r\\n\\t\"dataJSON\": \"{\\\\r\\\\n\\\\t\\\\\"fields\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"firstname\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"label\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"control\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"type\\\\\": \\\\\"combolist\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"data\\\\\": [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"html\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"value\\\\\": \\\\\"\\\\\"\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}]\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"buttons\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"add\\\\\": \\\\\"Add new search field...\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"remove\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"filter\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"date\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"list\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"number\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"plus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"minus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\" />\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"save\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\" />Save query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"load\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\" /> Load query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"run\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" /> Run query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"menu\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"daterangepicker\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"ok\\\\\": \\\\\"&nbsp;OK&nbsp;\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"Cancel\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\" /> Cancel\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"clearsearch\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\" /> Clear search\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringloadquery\\\\\": \\\\\"Specify saved query to load\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringsavequery\\\\\": \\\\\"Specify name for query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringquerynamewatermark\\\\\": \\\\\"Query name\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchOptions\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"displayDebuggingInfo\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"loadQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"saveQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"placeHolder\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"uniqueKey\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"loadType\\\\\": \\\\\"All\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"subtype\\\\\": \\\\\"AdvancedListSearch\\\\\"\\\\r\\\\n}\",\\r\\n\\t\"css\": \".queryBuilder > div {padding: 2px;}\\\\r\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\r\\\\n.queryBuilderList > div {display: table-row;}\\\\r\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\r\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\r\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\r\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\",\\r\\n\\t\"localsvg\": \"\",\\r\\n\\t\"javascript\": \";\",\\r\\n\\t\"methodForDefiningControl\": \"Specify Now\"\\r\\n}',\n\tcss: '.queryBuilder > div {padding: 2px;}\\r\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\r\\n.queryBuilderList > div {display: table-row;}\\r\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\r\\n.queryBuilderList > div > div:first-child {width:100%;}\\r\\n.queryBuilderList > div > div > div {display: flex;}\\r\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now'\n}",
                        "subtype": "AdvancedListSearch",
                        "class": "",
                        "style": ""
                    },
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "",
                        "icon": "$$table.query",
                        "displayText": "[AdvancedSearch]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>"
                    },
                    "displayAsSlider": false,
                    "precalc": {
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlData.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlSettings.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['ADVANCEDSEARCH'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] }",
                        "_jsOnChangeFunction": "function onChange_AdvancedSearch_9bd032594af84e248ed78c025938bf3b(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('ADVANCEDSEARCH');};",
                        "javascriptAbstractSetupCode": ""
                    },
                    "flags": {
                        "clientSideDefinition": false
                    }
                },
                "precalc": {
                    "columnInfo": "'ADVANCEDSEARCH': {info: {controlType: 'AdvancedListSearch'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                }
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>",
                "idInternal": "dd1800d6-0bbb-4428-9802-771982029090",
                "crc": "4294936429",
                "v": {
                    "controlType": "list",
                    "variableName": "dummy_list",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptClientSideWatches": "{dialog.object}.dialogWatches['ENABLE_DUMMY_LIST'] = {\n\t\twatch: [],\n\t\tvariables: [],\n\t\tonChange: function(data) {\n\t\n\tvar dialog = {};\n\tvar summary = {};;\n\t;\n\tvar enable = (false);\n\tvar eles = $cetp($n('V.R' + data.rowNumber + '.DUMMY_LIST'),$('{dialog.componentName}.R'+data.rowNumber));\n\tif(typeof eles.length == 'undefined' || eles.length == 0) eles = [$('{grid.componentname}.'+'V.R' + data.rowNumber + '.DUMMY_LIST')];\n\tvar pObj = {dialog.object}.getControl('dummy_list'); if(pObj) { if(typeof pObj.setDisabled != 'undefined') {  pObj.setDisabled(!enable,eles); return true;  } }\n\tif(typeof {dialog.object}._buttons['dummy_list'] != 'undefined') {\n\t{dialog.object}._buttons['dummy_list'].setDisabled(!enable,eles)\n\t} else {\n\tfor(var i=0; i<eles.length;i++) eles[i].disabled = !enable;\n\t}\n\t;;\n\t{dialog.object}._executeEvent('onWatchEvent',{type: 'enable', control: 'dummy_list', flag: enable});}\n}\n\n",
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_dummy_list_dd1800d60bbb44289802771982029090(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('DUMMY_LIST');};",
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_listViewData": "{dialog.object}._listViewData['DUMMY_LIST'] = [[dialog.listViewData.dummy_list]]; ",
                        "javascript_listViewSettings": "{dialog.object}._listViewSettings['DUMMY_LIST'] = [[dialog.listViewSettings.dummy_list]]; ",
                        "javascript_listview": "{dialog.object}._controls['DUMMY_LIST'] =  { type: 'list',  data: {dialog.object}._listViewData['DUMMY_LIST'],  onInitialize: function() {\n\t\tvar pe = $(this.contId).parentElement;\n\t\tif(typeof this.listVariableName != 'undefined') { \n\t\t\tvar _cn = '{dialog.componentName}_' + this.listVariableName.toUpperCase() + '_2';\n\t\t\t$acn(pe,_cn);\n\t\t}\n\t\n\n\n\nvar flagCordova = true;\nif (typeof window['cordova'] == 'undefined') {\n\tvar flagCordova = false;\n}\nif(flagCordova) { \n\tif(this.__flagPersist) { \n\t\tif(this.__persistWhere.toLowerCase() == 'indexdb') { \n\t\t\talert('Error. App is running as a Cordova app. You cannot set the persist location to \\'IndexedDB\\' for Cordova applictions. You must set the persist location to \\'FileSystem\\'');\n\t\t}\n\t}\n}\n\n;var that = this;\ntry{\n\t\n\tif(this._hasDetailView) { \n\t\tif(this._JSONForm) { \n\t\n\t\t\tsetTimeout(function() { \n\t\t\tthat.resize();\n\t\n\t\t\t},10);\n\t\t}\n\t}\n}catch(e){};\n\t\n\n\nif(typeof this.__flagHasFixedColumnFooters != 'undefined') { \n\tif(this.__flagHasFixedColumnFooters) { \n\t\tthis.refresh();\n\t}\n}\n\n; if(this.initializeVirtualizedColumns) this.initializeVirtualizedColumns(); if(this._setupAlphabetSearch) this._setupAlphabetSearch.call(this)},  settings: {dialog.object}._listViewSettings['DUMMY_LIST'] }"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "List1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "enableExpression": "javascript:false",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "color": "",
                        "icon": "$$control.browse",
                        "displayText": "[dummy_list]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>"
                    },
                    "listView": {
                        "listGUID": "549ec0a5-de69-4089-8d1e-8158efcaecbb",
                        "compressList": false,
                        "class": "<Default>",
                        "style": "",
                        "dataSourceType": "Static",
                        "overrides": "",
                        "flagIsDefined": true,
                        "staticData": "firstname",
                        "staticJSONData": "",
                        "height": "0px",
                        "width": "0px",
                        "hasParentList": false,
                        "parentListId": "",
                        "preLoadData": false,
                        "emptyListWhenParentChanges": false,
                        "objectNameInParentListForData": "",
                        "linkingFields": {
                            "parent": "",
                            "this": ""
                        },
                        "hasDataHeader": false,
                        "readonlyList": false,
                        "captureFocus": true,
                        "allowKeyboardNavigationToGiveFocus": true,
                        "headerHTML": "",
                        "noRecordsMessage": {
                            "has": false,
                            "HTML": "No records in list.",
                            "addrecordwhenmessageiclicked": true,
                            "centerH": true,
                            "centerV": true
                        },
                        "templateItemsJSON": "[]",
                        "hasDataFooter": false,
                        "footerHTML": "",
                        "headerStyle": "",
                        "footerStyle": "",
                        "hasFixedHeader": false,
                        "fixedHeaderHTML": "",
                        "fixedHeaderStyle": "",
                        "fixedHeaderClassName": "",
                        "hasFixedFooter": false,
                        "fixedFooterHTML": "",
                        "fixedFooterStyle": "",
                        "fixedFooterClassName": "",
                        "fillPanelContainer": false,
                        "static": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "jsFuncDS": {
                            "functionName": "",
                            "columnNames": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "sampleData": ""
                        },
                        "transform": {
                            "apikey": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "formId": "",
                            "fetchFormDefinition": false,
                            "allfields": true,
                            "fieldlist": "",
                            "paginate": false,
                            "pagesize": "",
                            "hasNavigationBar": false,
                            "navigationBarJson": ""
                        },
                        "excelfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "csvfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "jsonfile": {
                            "filename": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "firestore": {
                            "executeWhere": "Server",
                            "databaseURL": "",
                            "serviceAccountConnString": "",
                            "collectionName": "",
                            "queryDefinition": "",
                            "maxRowCount": 10000,
                            "cs": {
                                "apikey": "",
                                "authDomain": "",
                                "databaseURL": "",
                                "projectId": "",
                                "method": "ConnectionString",
                                "connectionString": ""
                            },
                            "trackChanges": false,
                            "enablePersistence": true,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "mongodb": {
                            "connectionstring": "",
                            "database": "",
                            "collection": "",
                            "fields": "",
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "filter": "",
                            "order": ""
                        },
                        "clientSideFilterExpression": "",
                        "clientSideOrderExpression": "",
                        "custom": {
                            "xbasicfunctionname": "",
                            "xbasicdefinition": "",
                            "localXbasic": false,
                            "localXbasicDef": "",
                            "javascriptfunctionname": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": ""
                        },
                        "dataSeriesSeriesName": "",
                        "dataSeries": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "sql": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "refreshSchemaOnEdit": true,
                            "storedSchemaJSON": "",
                            "flagTableInfoHasBeenUpdated": false,
                            "connectionString": "",
                            "selectType": "FieldsFromTable",
                            "tablename": "",
                            "fieldlist": "",
                            "filter": "",
                            "distinct": false,
                            "order": "",
                            "sqlstatement": "",
                            "portableSQL": true,
                            "sqlstatementforfieldlist": "",
                            "first": -1,
                            "primaryKey": "",
                            "serverSideAfterQueryEvent": "",
                            "serversidePostProcessJSONEvent": "",
                            "serverSideBeforeQueryEvent": "",
                            "getCountOfRecordsInQuery": true,
                            "sqlSecurityJSON": "",
                            "serversidedatenumberformatjson": "",
                            "useSubselectsForNestedQueries": true,
                            "useTransactions": true,
                            "stripCurlyBracketsFromGUIDS": false,
                            "allowIncrementalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "setrowcounttoargument": false,
                            "rowcountargumentname": "",
                            "sanitizedata": false,
                            "optimizedDetailViewSync": false,
                            "captureDebuggingInfoForOptimizedSync": false,
                            "captureDebuggingInfoS3ConnectionString": "<default>",
                            "optimizedDetailViewSyncWriteConflicts": false
                        },
                        "dbf": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": "",
                            "isDefined": false,
                            "fieldmap": "",
                            "filter": "",
                            "order": ""
                        },
                        "variablename": "",
                        "showTitleRow": false,
                        "titleText": "",
                        "hasFreeformTemplate": false,
                        "freeformTemplate": "",
                        "javascript": {
                            "onBeforePopulate": "",
                            "onPopulate": "",
                            "onBeforeAddRows": "",
                            "onBeforeRemoveRows": "",
                            "onBeforeUpdateRow": "",
                            "onAddRows": "",
                            "onChange": "",
                            "onRemoveRows": "",
                            "onUpdateRow": "",
                            "onBeforeDestroy": "",
                            "onDestroy": "",
                            "onBeforeListDraw": "",
                            "onBeforeListClear": "",
                            "onInitialize": "",
                            "onBeforeItemDraw": "",
                            "onListDraw": "",
                            "onItemDraw": "",
                            "onNavigate": "",
                            "onSelect": "",
                            "onBeforeSelect": "",
                            "afterSelect": "",
                            "onDblClick": "",
                            "onClick": "",
                            "onRightClick": "",
                            "onTap": "",
                            "onDblTap": "",
                            "onDownHold": "",
                            "onFocus": "",
                            "onFieldClick": "",
                            "onRowCheck": "",
                            "onFieldDblClick": "",
                            "onFieldRightClick": "",
                            "onFocusOut": "",
                            "onBlur": "",
                            "beforeFetchMore": "",
                            "afterFetchMore": "",
                            "beforePageNavigate": "",
                            "afterPageNavigate": "",
                            "beforeRefreshRow": "",
                            "afterRefreshRow": "",
                            "afterRefreshData": "",
                            "afterRenderComplete": "",
                            "afterAjaxCallback": "",
                            "beforeClientSideFilter": "",
                            "afterClientSideFilter": "",
                            "beforeServerSideSort": "",
                            "afterServerSideSort": "",
                            "afterServerSideSummaryCompute": "",
                            "afterClientSideSummaryCompute": "",
                            "onListColumnSelectorChanged": "",
                            "beforeClientSideSort": "",
                            "afterClientSideSort": "",
                            "onInplaceEditStart": "",
                            "oninplaceeditdeleterow": "",
                            "oninplaceeditdeleterowAfter": "",
                            "onInplaceeditSave": "",
                            "onInplaceEditCancel": "",
                            "oninplaceeditAddRow": "",
                            "afterinplaceeditAddRow": "",
                            "afterinplaceeditAddRowWasSaved": "",
                            "afterRefreshListIncremental": "",
                            "beforeMenuOpen": "",
                            "onMenuClose": "",
                            "showeditrowicon": "",
                            "showaddrowicon": "",
                            "onSwipe": "",
                            "onScroll": "",
                            "onPullRelease": "",
                            "onPullEnd": "",
                            "onPull": "",
                            "afterSearchComplete": "",
                            "beforeSearch": "",
                            "onSearchResultTooLarge": "",
                            "onSearchResultTooLargeForLocalStorage": "",
                            "onBeforePersistToLocalStorage": "",
                            "onPersistToLocalStorage": "",
                            "onRestoreFromLocalStorage": "",
                            "onListReady": "",
                            "onResize": ""
                        },
                        "inplaceedit": {
                            "editrowsecuritygroups": "",
                            "addrowsecuritygroups": "",
                            "deleterowsecuritygroups": ""
                        },
                        "_hasIntegerControl": false,
                        "pullpastEnd": {
                            "YSetting": "auto",
                            "XSetting": "auto",
                            "Duration": 1000
                        },
                        "displayTextForNulls": "",
                        "hasMoreEventsDefined": false,
                        "hasMultipleLayouts": false,
                        "autoselectLayoutOnOrientationChange": false,
                        "autoSelectLandscape": "",
                        "autoSelectPortrait": "",
                        "subTheme": "",
                        "dragScrollDirection": "Both",
                        "scrolling": {
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "hasSearchPart": false,
                        "hasAlphabetbuttonsearch": false,
                        "alphabetbuttonsearchjson": "",
                        "hasquicksearch": false,
                        "qyucjsearchjson": "",
                        "searchPart": {
                            "fieldMap": "",
                            "searchFieldProperties": "",
                            "searchStyle": "IndividualControls",
                            "combineMultipleConditionsUsing": "AND",
                            "keywordsearchControl": "",
                            "keywordSearchFields": "",
                            "showDebugInfo": false,
                            "debugInfoPlaceholder": "",
                            "delayPopulateListTillActiveSearch": false,
                            "searchErrorPlaceholder": "",
                            "setMaxProperties": false,
                            "maxSearchSizeJSON": ""
                        },
                        "controlCSS": "",
                        "includeCRC": false,
                        "userDefinedMethodsJSON": "{\n\t\"functions\": []\n}",
                        "reverseColumnOrder": false,
                        "enableHorizontalScrolling": false,
                        "mincolumnwidth": "150px",
                        "maxcolumnwidth": "",
                        "enablewordwrap": true,
                        "persistDataToLocalStorage": false,
                        "persistWhere": "LocalStorage",
                        "persistMode": "Full",
                        "persisListLayout": false,
                        "loadPersistedLayout": false,
                        "incrementalRefreshAfterLoad": false,
                        "versionNumber": 1,
                        "hasDetailView": false,
                        "detailView": {
                            "method": "FieldMap",
                            "fieldMap": "",
                            "jsonformname": "",
                            "propertygridname": "",
                            "viewboxname": "",
                            "jsonformdefinition": "Pre-defined",
                            "propertygriddefinition": "Pre-defined",
                            "container": "",
                            "serverSideUpdateRules": "DirtyFieldsOnly",
                            "showDebuggingInfo": false,
                            "placeholderForDebuggingInfo": "",
                            "placeholderGlobalErrors": "",
                            "suppressGlobalErrorAlerts": false,
                            "globalErrorStyle": "font-family: Arial; font-size: 10pt; color: red; border: solid 1px red; width: 100%;",
                            "showFadeOutConfirmationMessage": false,
                            "fadeOutMessagePlaceholder": "",
                            "fadeOutMessageText": "",
                            "fadeOutMessageDuration": 2000,
                            "fadeOutMessageStyle": "Default",
                            "submitLocationInformation": false,
                            "noRecordInListIsSelectedSetting": "None",
                            "newRecordPolicy": "UseControlDefault",
                            "useServerSideSyncLog": false,
                            "clearServerSideSyncLog": true,
                            "updateServerSideSyncLogAfterEachInsert": false,
                            "convertInsertToUpsert": false,
                            "useTimestampfieldForIncrmentalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "synchronizationHandler": "",
                            "synchronizationRefreshHandler": "",
                            "refreshListIncrementalHandler": "",
                            "synchronizationLevel": "EachListInHierarchy",
                            "phoneGap": {
                                "mediaFilesSettingsJSON": ""
                            },
                            "__doNotshowsynclogPrompt": true,
                            "firestore": {
                                "primarykeyfornewrecords": "<auto>"
                            },
                            "customization": {
                                "clientSideErrorWarning": "Cannot save because there are validation errors.",
                                "dirtyDetailViewRecord": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "You must first save or undo the changes you have made to the List's Detail View."
                                },
                                "confirmFormResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to the List's Detail View?"
                                },
                                "confirmRowResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to this record?"
                                },
                                "confirmDeleteWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to delete this record?"
                                },
                                "writeConflict": {
                                    "message": "Write conflict. Tap here to resolve.",
                                    "useMineMessage": "Use mine ('{myvalue}')",
                                    "useTheirsMessage": "Use theirs ('{theirvalue}')",
                                    "useMineAll": "Use mine for all fields",
                                    "useTheirsAll": "Use theirs for all fields"
                                },
                                "databaseError": {
                                    "update": "Record was not updated.|More...|Less",
                                    "insert": "Record was not inserted.|More...|Less",
                                    "delete": "Record was not deleted.|More...|Less"
                                },
                                "useCustomClasses": false,
                                "customClasses": "",
                                "setClassonEditedRows": true,
                                "css": {
                                    "dirtyRecord": "",
                                    "newRecord": "",
                                    "serverSideError": "",
                                    "deletedRecord": "",
                                    "dirtyRecordRow": "",
                                    "newRecordRow": "",
                                    "serverSideErrorRow": "",
                                    "deletedRecordRow": "",
                                    "hasUnSyncedMediaFiles": ""
                                }
                            },
                            "refreshRowOnSelect": false,
                            "synchronizeImmediately": false,
                            "pushServerUpdatesToClientOnCommit": false,
                            "tablePropertiesDefined": false,
                            "autoCommitDetailViewEdits": true,
                            "syncBatchSize": 0,
                            "synchProgressPlaceholder": "",
                            "synchProgressProperties": "",
                            "dirtyControlClassName": "",
                            "linkedfreeformcontrols": "",
                            "detailviewposition": "OnPage",
                            "containerName": "",
                            "inListSettingsJSON": "",
                            "javascript": {
                                "canUpdateList": "",
                                "afterUpdateList": "",
                                "canSynchronizeList": "",
                                "afterSynchronizeList": "",
                                "afterSynchronizeListCompleted": "",
                                "afterRefreshListIncremental": "",
                                "hasClientSideValidationErrors": "",
                                "afterSynchronizeListBatch": "",
                                "beforeSynchronizeListBatchStart": "",
                                "afterDetailViewSave": "",
                                "afterSynchronizeListBatchEnd": "",
                                "canCancelBatch": "",
                                "afterCancelBatch": "",
                                "afterListRowSelectCancelled": "",
                                "canResetRow": "",
                                "canDeleteRow": "",
                                "afterDeleteRow": "",
                                "canUndoEdits": "",
                                "afterResetRow": "",
                                "afterUndoEdits": "",
                                "canNewRecord": "",
                                "afterNewRecord": "",
                                "modeChanged": "",
                                "onStateChanged": "",
                                "afterDetailViewPopulate": "",
                                "beforeDetailViewPopulate": "",
                                "beforeMediaFilesUploaded": "",
                                "afterMediaFilesUploaded": "",
                                "listReadyToPersist": "",
                                "beforeCRUDExecute": "",
                                "onMediaFilesUploadErrors": "",
                                "onNoMediaFilesToFetch": "",
                                "beforeMediaFilesDownloaded": "",
                                "afterMediaFilesDownloaded": "",
                                "beforeDeleteOrphanMediaFiles": "",
                                "afterDeleteOrphanMediaFiles": "",
                                "onSynchronizationStep": ""
                            },
                            "hasClientSideEventsDefined": false,
                            "serverSideEvent": {
                                "validate": "",
                                "errorMessageTranslate": "",
                                "onsynchronize": "",
                                "aftersynchronize": "",
                                "aftersynchronizeRecord": ""
                            }
                        },
                        "dragScrollMomentum": true,
                        "dragScroll": {
                            "hasCustomSnapSettings": false,
                            "snap": {
                                "x": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                },
                                "y": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                }
                            },
                            "momentum": {
                                "friction": 4,
                                "duration": 1000
                            }
                        },
                        "behavior": {
                            "pulltorefresh": false,
                            "pulltoRefreshSettingsJSON": "",
                            "drag": {
                                "has_side_to_side_rowdragbehavior": false,
                                "settingsJSON": "",
                                "has_reorder": false,
                                "reorderSettingsJSON": ""
                            }
                        },
                        "hasCheckBoxSelectColumn": false,
                        "checkboxSelectColumnCustomzationJSON": "",
                        "searchHighlighting": false,
                        "searchHighlightClass": "",
                        "searchHighlightStyle": "color: red;",
                        "useDragScrolling": "Auto",
                        "customSettingsJSON": "",
                        "clientSideVirtualColumns": "",
                        "clientSideLookupColumnsJSON": "",
                        "allowInplaceediting": false,
                        "inplaceEditingSettingsJSON": "",
                        "clientSideGroupBreaksHas": false,
                        "clientSideGroupBreakJSON": "",
                        "listNavigatorHas": false,
                        "listNavigatorJSON": "",
                        "serverSideRowStyle": "",
                        "clientSideRowStyle": "",
                        "alternatingRowColor": false,
                        "evenRowColor": "",
                        "oddRowColor": "",
                        "defaults": {
                            "indexLayout": 1
                        },
                        "fieldsArray": {
                            "fields": [
                                {
                                    "name": "firstname",
                                    "type": "C",
                                    "displayFormat": "",
                                    "serverSideInlineStyle": "",
                                    "serverSideConditionalStyle": "",
                                    "clientSideConditionalStyle": "",
                                    "clientSideConditionalCellStyle": "",
                                    "encryptfield": false,
                                    "encryptionkey": "",
                                    "decodeValue": false,
                                    "decodeValueLookupListJSON": "",
                                    "securityGroups": "",
                                    "javascriptAddressible": false,
                                    "serversideShowhideExpn": "",
                                    "clientSideShowHideExpn": "",
                                    "controlType": "Label",
                                    "clientsideInlineStyle": "",
                                    "wordwrap": false,
                                    "wordwrapOption": "normal",
                                    "clientsideClass": "",
                                    "baseExpression": "",
                                    "searchPropertiesJSON": "",
                                    "image": {
                                        "base64Encode": false,
                                        "type": "JPG",
                                        "scale": "",
                                        "fileNameTransformation": "",
                                        "imageDataType": "Name",
                                        "base64Prefix": "data:image/jpg;base64,",
                                        "noImageFoundImage": ""
                                    },
                                    "sourceTableType": "",
                                    "detailview": {
                                        "serversidevalidation": "",
                                        "defaultValueJavascript": "",
                                        "onDetailViewPopulateJavascript": "",
                                        "onListUpdateFromDetailView": "",
                                        "updateable": true,
                                        "checkforwriteConflicts": true,
                                        "blankIsNull": false,
                                        "updatePermissionSecurityGroups": "",
                                        "serverSidePermissionExpression": "",
                                        "imageCapturePropertiesJSON": "",
                                        "ExifCapturePropertiesJSON": ""
                                    },
                                    "hide": false,
                                    "button": {
                                        "type": "Text",
                                        "image": "",
                                        "label": "Button",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "hyperlink": {
                                        "label": "Hyperlink",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "actionType": "Javascript",
                                        "href": "",
                                        "target": "New Window",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "unboundtype": "",
                                    "dynamicImage": {
                                        "definition": "",
                                        "class": "",
                                        "style": "",
                                        "bubbleHelp": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false,
                                        "twoStateImage": false,
                                        "swapImageName": "",
                                        "toggleOnClick": true,
                                        "rotationType": "90"
                                    },
                                    "menu": {
                                        "definitionJSON": "",
                                        "buttonType": "Image",
                                        "text": "Menu",
                                        "image": "svgIcon=#alpha-icon-bars:icon,24",
                                        "image_rotate": true,
                                        "bubblehelp": "",
                                        "inlinestyle": "",
                                        "className": "",
                                        "focusrow": false,
                                        "imageOpen": "svgIcon=#alpha-icon-xLarge:icon,24",
                                        "fireEventsWhenRowGetsFocus": false,
                                        "image_rotate_duraction": 300
                                    },
                                    "virtualJavascript": {
                                        "javascript": ""
                                    },
                                    "serverSideSummaryFieldsHas": false,
                                    "horizontalwidth": "200px",
                                    "serverSideSummaryFields": "",
                                    "clientSideSummaryFieldsHas": false,
                                    "clientSideTypeTransform": "None",
                                    "clientSideDateTemplate": "MM-dd-yyyy",
                                    "clientSideDateFormat": "<None>",
                                    "clientSideNumericFormat": "",
                                    "inplaceEditing": {
                                        "template": "",
                                        "javascript": {
                                            "validation": "",
                                            "initialvalue": ""
                                        },
                                        "serverside": {
                                            "validation": ""
                                        },
                                        "controltype": "Textbox",
                                        "controljson": "",
                                        "allow": true,
                                        "conditionalalloweditJSfunction": "",
                                        "securitygroups": ""
                                    },
                                    "customControl": {
                                        "definition": ""
                                    },
                                    "chartPropertiesJSON": "",
                                    "isComputedColumn": false,
                                    "ink": {
                                        "width": "300",
                                        "height": "",
                                        "sizeMethod": "Width-Height",
                                        "scale": 0.25,
                                        "zoom": "50%",
                                        "boundsType": "Page",
                                        "boundsMargin": 10,
                                        "boundsX": 0,
                                        "boundsY": 0,
                                        "boundsWidth": 100,
                                        "boundsHeight": 100
                                    },
                                    "star": {
                                        "maxstars": 5,
                                        "selectedColor": "Gold",
                                        "unselectedColor": "Gray",
                                        "width": "26px",
                                        "height": "26px",
                                        "readonly": false
                                    },
                                    "integer": {
                                        "min": "0",
                                        "max": "100",
                                        "buttonClass": "[theme:button.base.className]",
                                        "valueClass": "[class.dialogInput]",
                                        "ValueStyle": "width: 40px;",
                                        "hasIncrementBy10": false,
                                        "hasIncrementBy100": false
                                    },
                                    "javascript": {
                                        "methodName": ""
                                    },
                                    "map": {
                                        "height": "300",
                                        "width": "300",
                                        "markerColor": "green",
                                        "markerSize": "<default>",
                                        "zoom": "8"
                                    },
                                    "radiobuttons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "checkboxButtons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "switch": {
                                        "onvalue": "On",
                                        "offValue": "Off",
                                        "width": "100px",
                                        "direction": "ltr",
                                        "readonly": false,
                                        "displaystyle": "Switch",
                                        "htmlOn": "On",
                                        "htmlOff": "Off",
                                        "iconOn": "svgIcon=#alpha-icon-checkRounded:icon,24",
                                        "iconOff": "svgIcon=#alpha-icon-squareRounded:icon,24",
                                        "behavior": "ComboBox",
                                        "groupName": "Group1"
                                    },
                                    "unboundField": false,
                                    "display": "{data=1}{I:'$$control.smartField'} firstname (C)",
                                    "xbfunction": "",
                                    "onItemDrawSystemJavascript": "",
                                    "onItemDrawInlineStyle": "",
                                    "onItemDrawConditionalStyle": "",
                                    "controlHTML": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "controlHTMLFreeformLayout": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "baseName": "firstname",
                                    "_templateEditingFreeform": "{firstname}"
                                }
                            ]
                        },
                        "layoutsArray": {
                            "layouts": [
                                {
                                    "Name": "Default",
                                    "Type": "Column",
                                    "isDefaultLayout": true,
                                    "friendlyName": "",
                                    "kanbansettingsjson": "",
                                    "customsettingsjson": "",
                                    "chartsettingsjson": "",
                                    "mapsettingsjson": "",
                                    "calendarsettingsjson": "",
                                    "showColumnTitles": true,
                                    "hasColumnActions": false,
                                    "columnActionsJSON": "",
                                    "template": "",
                                    "snakingLayoutWidth": "1in",
                                    "itemHeight": "",
                                    "contentclassname": "",
                                    "clientSideGroupBreaksHas": false,
                                    "clientsidegroupBreaksMode": "<Use Default>",
                                    "clientSideGroupBreakJSON": "",
                                    "freeformType": "Vertical",
                                    "className": "",
                                    "hoverclassName": "",
                                    "selectedClassName": "",
                                    "style": "",
                                    "titleClassName": "",
                                    "hasListItemFooter": false,
                                    "listItemFooter": "",
                                    "HaslistColumnSeparator": false,
                                    "listFixedColumnsSettingsJSON": "",
                                    "hasVirtualizedColumns": false,
                                    "listItemFooterInitialState": "Open",
                                    "listColumnSeparatorHas": false,
                                    "listColumnSeparator": {
                                        "propertiesJSON": ""
                                    },
                                    "dragScroll": {
                                        "hasCustomSnapSettings": false,
                                        "snap": {
                                            "x": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            },
                                            "y": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            }
                                        },
                                        "momentum": {
                                            "friction": 4,
                                            "duration": 1000
                                        }
                                    },
                                    "dragScrollMomentum": true,
                                    "columns": [
                                        {
                                            "heading": "Firstname",
                                            "headingInlineStyle": "",
                                            "headingClassName": "",
                                            "Template": "{firstname}",
                                            "footerTemplate": "",
                                            "dataInlineStyle": "",
                                            "canSort": true,
                                            "sortColumnName": "firstname",
                                            "initialsortdirection": "Ascending",
                                            "columnWidth": "flex(1)",
                                            "sortWhere": "ClientSide",
                                            "sortJavascript": "",
                                            "serverSideSortExpression": "",
                                            "javascript": {
                                                "onclick": "",
                                                "onrightclick": ""
                                            },
                                            "hideColumnIfFieldHidden": true,
                                            "initialStateHidden": false,
                                            "hideColumnReferenceField": "firstname",
                                            "columnIsResizeable": false,
                                            "responsiveColumnWidth": "",
                                            "hidecolumnactions": false,
                                            "hasFixedFooter": false,
                                            "hasDataFooter": false,
                                            "fixedFooterjSON": "",
                                            "datafooterJSON": "",
                                            "hasColumnFooter": false,
                                            "columnFooterJSON": "",
                                            "unboundtype": "",
                                            "hasIconsIncolumnHeader": false,
                                            "columnIconsJSON": "",
                                            "name": "firstname",
                                            "display": "{I:'$$control.smartField'} firstname",
                                            "enableCanSort": true,
                                            "enableShowInitialSortDirection": true,
                                            "enableShowSortField": true
                                        }
                                    ]
                                }
                            ]
                        },
                        "odata": {
                            "url": "http://services.odata.org/V4/Northwind/Northwind.svc",
                            "serviceType": "OData",
                            "requiresAuthentication": false,
                            "usesCSRFToken": false,
                            "authType": "Basic",
                            "authUsername": "",
                            "authPassword": "",
                            "containerName": "",
                            "columns": "",
                            "filter": "",
                            "order": "",
                            "max_rows": -1,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "primarykey": "",
                            "primaryKeyType": ""
                        },
                        "paginateData": false,
                        "pageSize": 20,
                        "paginateMethod": "FetchMore",
                        "fetchMoreButtonHTML": "More records...",
                        "fetchMoreButtonType": "Button",
                        "fetchMoreButtonStyle": "",
                        "fetchMoreButtonContainerStyle": "text-align: center;",
                        "hasNavigationBar": false,
                        "navigationBarJson": "",
                        "serverSideSorting": false,
                        "breaks": {
                            "has": false,
                            "field": "",
                            "sortDescending": false,
                            "sortOnBreakField": true,
                            "fieldChars": -1,
                            "template": "",
                            "stringDictionary": "",
                            "caseSensitive": false,
                            "breakType": "Automatic",
                            "userDefinedBreakGroups": "",
                            "geographyUnits": "Meters|Meters"
                        },
                        "allowNullSelection": true,
                        "allowAnyValue": false,
                        "allowTextSelection": false,
                        "allowNullDeselection": false,
                        "loopNavigate": false,
                        "loopNavigateNullSelection": false,
                        "delayRenderTillVisible": false,
                        "delayRenderTillRefresh": false,
                        "delayRenderTillUserLogsIn": false,
                        "multiSelect": false,
                        "multiSelectMode": "Control-click",
                        "separator": ",",
                        "localCSS": "",
                        "virtualization": {
                            "type": "None",
                            "onNavigateBehavior": "Navigate",
                            "size": 50,
                            "maxSize": 0,
                            "offset": 10,
                            "navigation": {
                                "pull": true,
                                "pullSize": 40,
                                "prevHTML": "Previous",
                                "prevClassName": "",
                                "prevPressedClassName": "",
                                "nextHTML": "Next",
                                "nextClassName": "",
                                "nextPressedClassName": ""
                            }
                        },
                        "scroller": {
                            "has": false,
                            "messageType": "Template",
                            "messageTemplate": "",
                            "messageJS": "",
                            "customizationIsDefined": false,
                            "flow": "ttb",
                            "location": "after",
                            "className": "",
                            "focusClassName": "",
                            "dialClassName": "",
                            "style": "",
                            "offset": {
                                "top": "0px",
                                "bottom": "0px",
                                "left": "0px",
                                "right": "0px"
                            },
                            "slider": {
                                "className": "",
                                "innerClassName": "",
                                "handle": {
                                    "className": "",
                                    "style": ""
                                },
                                "shadow": {
                                    "show": true,
                                    "className": "",
                                    "style": ""
                                },
                                "message": {
                                    "show": "auto",
                                    "className": "",
                                    "topClassName": "",
                                    "bottomClassName": "",
                                    "leftClassName": "",
                                    "rightClassName": "",
                                    "style": "",
                                    "lowSwitch": 75,
                                    "highSwitch": 75
                                }
                            },
                            "dial": {
                                "show": "drag",
                                "invertDrag": false,
                                "className": "",
                                "message": {
                                    "className": ""
                                },
                                "style": "",
                                "pixelStep": 4,
                                "size": 2
                            }
                        },
                        "precalc": {
                            "javascriptOnOrientationChange": ""
                        },
                        "previewMode": false,
                        "__xbjs": "ps.__checkedImage = \"svgIcon=#alpha-icon-checkCircle:icon,24\"\nps.__uncheckedImage = \"svgIcon=#alpha-icon-circle:icon,24\"",
                        "_templateCSS": "\n",
                        "allchildren": "",
                        "optimizeJSONSize": true
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'DUMMY_LIST': {info: {controlType: 'list'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "listviewData": "[[%%[[dummy_list]]%%]]",
                    "listviewSearchReplace": "[[dialog.listViewData.dummy_list]] = tmpl.page_fields[3].precalc.listViewData",
                    "listViewHasBeenRendered": false,
                    "js_afterListInitialize": "var listObj = {UXPRERENDEREDALIAS}_DlgObj.getControl('DUMMY_LIST');\nif(listObj) listObj._state.recordCount = 0;\nif(listObj) listObj._state.recordCountFormatted = '0';\nif(listObj) listObj._state.lastBreakValue = '<None>';\nif(listObj) listObj._state.pageCount = 0;\nif(listObj) listObj._state.pageSize = 20;\nif(listObj) {var ele = $('{UXPRERENDEREDALIAS}.dummy_list.RECORDCOUNT'); if(ele) ele.innerHTML = listObj._state.recordCountFormatted;};\nif(listObj) listObj._state.paginated = false;\n\nif(listObj) listObj._state.highlight = {  };\nif(listObj) listObj._state.whereClause = '';\nif(listObj) listObj._state.whereParameters = '';\nlistObj._state.order = '';\n\t\t\n\t\tvar flagPersist = false;\n\t\tif(typeof listObj._flagPersistDataOK != 'undefined') { \n\t\t\tif(listObj._flagPersistDataOK) { \n\t\t\t\tvar data = listObj._data;\n\t\t\t\tlistObj.persistToStorage({mode:'populate', data: data, submode: 'ListViewData'});\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n;\n{UXPRERENDEREDALIAS}_DlgObj._list_executeEvent('DUMMY_LIST','afterRenderComplete',{});\n\nif(listObj._refreshStateMessages) listObj._refreshStateMessages();",
                    "list_CapturedFieldValueFromFirstRow": ""
                },
                "containerStartIndex": 0
            }
        ],
        "builderType": "Dialog2",
        "guid": "8f9ce967-74a0-4f32-b442-47c7dea05051",
        "componentName": "SEARCH_UX",
        "componentFilename": "C:\\Users\\lukes\\Documents\\AlphaAnywhere\\Phase 1 Project\\Phase 1 Project.WebProjects\\Default.WebProject\\search_ux.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": false,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": false,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "9bd03259-4af8-4e24-8ed7-8c025938bf3b\n",
        "designPaneIndex": 1,
        "masterPaneC": "controls",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 1,
        "clientSideEventIndexC": "1",
        "lastControlSelected": "insert_dialog_list",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5691",
        "addinBuildNumberHighestUsed": "5691",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "115",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:listBox.base.className]=*if_error(p.listBox.base.className,\"\")\n[theme:listBox.base.item.className]=*if_error(p.listBox.base.item.className,\"\")\n[theme:listBox.base.item.hoverClassName]=*if_error(p.listBox.base.item.hoverClassName,\"\")\n[theme:ux.base.labelClassName]=*if_error(p.ux.base.labelClassName,\"[class.dialogFieldLabel]\")\n[theme:edit.base.className]=*if_error(p.edit.base.className,\"[class.gridNavigatorInput]\")\n[theme:edit.primary.className|{dialog.style}Edit]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"{dialog.style}Edit\")\n[theme:menu.base.className]=*if_error(p.menu.base.className,\"\")\n[theme:menu.base.innerClassName]=*if_error(p.menu.base.innerClassName,\"\")\n[theme:menu.base.item.className]=*if_error(p.menu.base.item.className,\"\")\n[theme:menu.base.item.hoverClassName]=*if_error(p.menu.base.item.hoverClassName,\"\")\n[theme:menu.base.item.selectedClassName]=*if_error(p.menu.base.item.selectedClassName,\"\")\n[theme:button.base.className]=*if_error(p.button.base.className,\"[class.gridButton]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\n\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": true,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": true,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": false,
            "__freeformLayoutsJS": "",
            "_jsOnChangeFunctions": "function onChange_AdvancedSearch_9bd032594af84e248ed78c025938bf3b(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('ADVANCEDSEARCH');};",
            "_jsOnClickFunctions": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: '8f9ce967-74a0-4f32-b442-47c7dea05051',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueProperties2": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueUnformattedProperties": "value.SEARCHFORM=convert_type(\"\",\"C\")\nvalue.ADVANCEDSEARCH=convert_type(\"\",\"C\")\nvalue.DUMMY_LIST=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentValues": "",
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": false,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/a5.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "A5SaveTimeStamp": "20240723073926900",
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "showPulseEffect": true,
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": false,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": false,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "__LPhostName": "Chrome",
        "_style_isInherited": false,
        "_analyzecontainersjs": true,
        "_repeatingSectionPendingRecalc": "\n",
        "cachecomponent": false,
        "_crcXbEvents": 4294903431,
        "_crcJSFunctions": 4294921817,
        "_crcJSEvents": 43605,
        "_treeErrors": "",
        "__flagHasMacro": false,
        "__staticMode": "",
        "__componentnotfound": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "_passwordReset": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "suppressJavascriptCodeWarning": false,
        "restorePanelSizes": true,
        "populateArgumentsFromQueryString": false,
        "livePreview_permissions_friendly": "",
        "simulatedcultureNumber": "",
        "_alphasoftwareBucketName": "",
        "staticHTMLFileJSON": "",
        "__flagRecursive": false,
        "_flagForceRecalcChildren": true,
        "__idinternalCurrentControl": "9bd03259-4af8-4e24-8ed7-8c025938bf3b",
        "__nameCurrentControl": "AdvancedSearch",
        "_containerstorecalc": "",
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC5WMsQ6CQBAFexP/Aa/Hq+gOOjsqf2Cznq84PPGyuyD8vSQUFlaWM5NM0CipWGVrQesMi/mBZ96tq1Ri677Cc3Me1HXB79wdD+HfAU2Sfyanun/x/bIYZOTcp5uwJGi9NSJByRzBdp1GS08QRVW1NcPe4IcSfQAk7ywxxgAAAA==",
                    "CSS_Link": "*gzip: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",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVAoKM0pTlWyAwC29a3YGgAAAA==",
                    "dialog2_html": "*gzip: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"
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}