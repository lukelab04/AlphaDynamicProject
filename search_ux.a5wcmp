{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "LocalCss": "<style type=\"text/css\">\n\n\n\n</style>",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "JavaScriptFunctionDeclarations": "\n\n\n\n",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "XbasicFunctionDeclarations": "function getSchemaAjaxCallback as c (e as p)\n\tdim schemaInfo as p\n\tdim info as c\n\tschemaInfo = require(\"schemaInfo\")\n\tinfo = schemaInfo.getConnectionSchemaJSON(\"conn\", e.tableName)\n\t\n\tgetSchemaAjaxCallback = \"{dialog.object}.stateInfo.schema = \" + info + \";\"\n\t\nend function\n\nfunction getAllDataForTable as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tgetAllDataForTable = stdQueries.getTableData(e)\nend function\n\nfunction updateData as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tupdateData = stdQueries.updateTableData(e)\n\t\nend function\n\nfunction countRows as c (e as p)\n\tdim standardQueries as p\n\tdim info as c\n\tstdQueries = require(\"standardQueries\")\n\tcountRows = stdQueries.countRowsWithFilter(e)\nend function\n\nfunction fetch as c (e as p)\n\tdim stdQueries as p\n\tdim result as c\n\tstdQueries = require(\"standardQueries\")\n\tresult = stdQueries.performFetch(e)\n\tfetch = \"{dialog.object}.stateInfo.fetchResult = \" + result + \";\"\n\t\nend function",
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "onInitializeComplete": "{dialog.object}.setControlDisplay(\"SEARCHFORM\", false, \"display\");\n{dialog.object}.setControlDisplay(\"ADVANCEDSEARCH\", false, \"display\");\n\n{dialog.object}.addOnSearchCallback = (callback) => {\n\tif ({dialog.object}.stateInfo.onSearchCallbacks) {\n\t\t{dialog.object}.stateInfo.onSearchCallbacks.push(callback);\n\t} else {\n\t\t{dialog.object}.stateInfo.onSearchCallbacks = [callback];\n\t}\n}\n\n{dialog.object}.addOnClearSearchCallback = (callback) => {\n\tif ({dialog.object}.stateInfo.onClearSearchCallbacks) {\n\t\t{dialog.object}.stateInfo.onClearSearchCallbacks.push(callback);\n\t} else {\n\t\t{dialog.object}.stateInfo.onClearSearchCallbacks = [callback];\n\t}\n}",
            "beforePrepare": "",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "MM/dd/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "info": {
            "createdBy": "lukes",
            "dateCreated": "2024-4-25",
            "dateLastEdited": "2024-8-12",
            "revisionnumber": 135
        },
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": ""
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>",
                "idInternal": "72228034-2134-4681-ba14-4d2ac137f203",
                "crc": "4294912487",
                "v": {
                    "controlType": "formbox",
                    "variableName": "SearchForm",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_SearchForm_7222803421344681ba144d2ac137f203(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('SEARCHFORM');};"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Jform1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "",
                        "icon": "$$control.form",
                        "displayText": "[SearchForm]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=72228034-2134-4681-ba14-4d2ac137f203}{I:'$$control.form'} [SearchForm]<<break>>"
                    },
                    "formbox": {
                        "height": "3in",
                        "width": "4in",
                        "fillPanelContainer": true,
                        "definitionJSON": "{\n\t\"_state\": {\n\t\t\"showPane\": {\n\t\t\t\"css\": false,\n\t\t\t\"javascript\": false,\n\t\t\t\"items\": true,\n\t\t\t\"preview\": true\n\t\t},\n\t\t\"tabPage\": \"FormLayout\",\n\t\t\"flagShowLineNumbers\": false,\n\t\t\"LayoutSelected_n\": 1,\n\t\t\"fieldSelected_n\": 0,\n\t\t\"layoutGenieFieldSelected_c\": \"\",\n\t\t\"fieldselected_c\": \"\",\n\t\t\"itemSelected_c\": \"\",\n\t\t\"groupSelected_c\": \"\",\n\t\t\"cssMode\": 1,\n\t\t\"jsmode\": 1,\n\t\t\"selected_javascriptLocal_c\": \"\",\n\t\t\"flagPreviewOpen\": false\n\t},\n\t\"formview\": {\n\t\t\"datasource\": {\n\t\t},\n\t\t\"formProperties\": {\n\t\t\t\"hasMultipleLayouts\": false,\n\t\t\t\"theme\": \"{dialog.style}\",\n\t\t\t\"item\": {\n\t\t\t\t\"className\": \"listItem\",\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t},\n\t\t\t\t\"description\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"javascript\": {\n\t\t\t\t\"onChange\": \"\",\n\t\t\t\t\"onInitialize\": \"\"\n\t\t\t},\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"namedLayoutsJSON\": \"\"\n\t\t},\n\t\t\"fields\": [],\n\t\t\"items\": [],\n\t\t\"groups\": [],\n\t\t\"layouts\": [\n\t\t{\n\t\t\t\"layoutName\": \"default\",\n\t\t\t\"defaultLayout\": false,\n\t\t\t\"layoutDataType\": \"Data\",\n\t\t\t\"layoutDefinition\": \"\",\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"defaultTemplate\": \"\",\n\t\t\t\"postProcessJavascript\": \"\",\n\t\t\t\"layoutType\": \"Genie\",\n\t\t\t\"last_layoutGenieFieldSelected_c\": \"\",\n\t\t\t\"itemsArray\": []\n\t\t}],\n\t\t\"javascriptLocal\": [],\n\t\t\"css\": \"\",\n\t\t\"Javascript\": \"\"\n\t}\n}"
                    },
                    "listView": {
                        "allchildren": ""
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'SEARCHFORM': {info: {controlType: 'formbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n"
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>",
                "idInternal": "9bd03259-4af8-4e24-8ed7-8c025938bf3b",
                "crc": "4294937567",
                "v": {
                    "controlType": "DataBoundCustomControl",
                    "variableName": "AdvancedSearch",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_AdvancedSearch_9bd032594af84e248ed78c025938bf3b(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('ADVANCEDSEARCH');};",
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_dataBoundCustomControlData": "{dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlData.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControlSettings": "{dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] = [[dialog.dataBoundCustomControlSettings.AdvancedSearch]]; ",
                        "javascript_dataBoundCustomControl": "{dialog.object}._controls['ADVANCEDSEARCH'] =  { type: 'dataBoundCustomControl',  data: {dialog.object}._dataBoundCustomControlData['ADVANCEDSEARCH'],  onInitialize: function() { if(this._onInitialize) {this._onInitialize();} },  settings: {dialog.object}._dataBoundCustomControlSettings['ADVANCEDSEARCH'] }"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Advanced List Search1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "",
                        "icon": "$$table.query",
                        "displayText": "[AdvancedSearch]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=9bd03259-4af8-4e24-8ed7-8c025938bf3b}{I:'$$table.query'} [AdvancedSearch]<<break>>"
                    },
                    "customControl": {
                        "height": "100%",
                        "width": "550px",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\tfields: {\n\t\tfirstname: {\n\t\t\tlabel: '',\n\t\t\tcontrol: {\n\t\t\t\ttype: 'combolist',\n\t\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\t\thtml: '',\n\t\t\t\t\tvalue: ''\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t},\n\tbuttons: {\n\t\tadd: 'Add new search field...',\n\t\tremove: '<img src=\"svgIcon=#alpha-icon-trash:icon\" />',\n\t\tfilter: '<img src=\"svgIcon=#alpha-icon-filter:icon\" />',\n\t\tdate: '<img src=\"svgIcon=#alpha-icon-calendar:icon\" />',\n\t\tlist: '<img src=\"svgIcon=#alpha-icon-chevronDown:icon\" />',\n\t\tnumber: {\n\t\t\tplus: '<img src=\"svgIcon=#alpha-icon-add:icon\" />',\n\t\t\tminus: '<img src=\"svgIcon=#alpha-icon-remove:icon\" />'\n\t\t},\n\t\tsave: '<img src=\"svgIcon=#alpha-icon-save:icon\" />Save query',\n\t\tload: '<img src=\"svgIcon=#alpha-icon-load:icon\" /> Load query',\n\t\trun: '<img src=\"svgIcon=#alpha-icon-filter:icon\" /> Run query',\n\t\tmenu: '<img src=\"svgIcon=#alpha-icon-ellipsisVertical:icon\" />',\n\t\tdaterangepicker: {\n\t\t\tok: '&nbsp;OK&nbsp;',\n\t\t\tcancel: 'Cancel'\n\t\t},\n\t\tcancel: '<img src=\"svgIcon=#alpha-icon-x:icon\" /> Cancel',\n\t\tclearsearch: '<img src=\"svgIcon=#alpha-icon-filterOff:icon\" /> Clear search',\n\t\tstringloadquery: 'Specify saved query to load',\n\t\tstringsavequery: 'Specify name for query',\n\t\tstringquerynamewatermark: 'Query name'\n\t},\n\tsearchOptions: {\n\t\tdisplayDebuggingInfo: false,\n\t\tloadQuery: false,\n\t\tsaveQuery: false,\n\t\tplaceHolder: '',\n\t\tuniqueKey: '',\n\t\tloadType: 'All',\n\t\tlistName: 'dummy_list'\n\t},\n\tsearchMode: 1,\n\tlistName: 'dummy_list',\n\tsubtype: 'AdvancedListSearch',\n\tvariableName: '',\n\tsettingsJSON: '{\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"inputId\": \"{variablename}\",\\r\\n\\t\"variableName\": \"{VARIABLENAME}\",\\r\\n\\t\"theme\": \"{dialog.style}\",\\r\\n\\t\"autoRefreshOnResize\": false,\\r\\n\\t\"datasource\": {\\r\\n\\t\\t\"lowLevel\": \"Data\",\\r\\n\\t\\t\"type\": \"Static JSON\"\\r\\n\\t},\\r\\n\\t\"multiple\": true,\\r\\n\\t\"selectionMode\": \"default\",\\r\\n\\t\"loopNavigate\": false,\\r\\n\\t\"loopNavigateNullSelection\": true,\\r\\n\\t\"allowNullSelection\": false,\\r\\n\\t\"allowTextSelection\": false,\\r\\n\\t\"allowNullDeselection\": false,\\r\\n\\t\"autoRefresh\": false,\\r\\n\\t\"allowAnyValue\": true,\\r\\n\\t\"captureFocus\": false,\\r\\n\\t\"scroll\": false,\\r\\n\\t\"parseValue\": function() {this.data._parsed = [];\\r\\nvar val = this.value[0];\\r\\nif(val){\\r\\n if(val != \\'\\') {\\r\\n  try {\\r\\n   var obj = JSON.parse(val);\\r\\n   this.data._parsed = obj;\\r\\n  } catch(err){\\r\\n   console.log(\\'ERROR: query builder \"\\'+this.variableName+\\'\" could not parse value.\\');\\r\\n  }\\r\\n }\\r\\n}\\r\\nthis.refresh();},\\r\\n\\t\"addItem\": function(v) {var f = this.data.fields[v];\\r\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\r\\nif(typeof f.defaults != \\'undefined\\'){\\r\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\r\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\r\\n}\\r\\nthis.data._parsed.push(d);\\r\\nthis.setValue(JSON.stringify(this.data._parsed));},\\r\\n\\t\"showPicker\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\r\\n this._pickerVBEle.style.display = \\'none\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'\\';\\r\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\r\\n this._pickerVBEle.style.display = \\'\\';\\r\\n this._pickerDateEle.style.display = \\'none\\';\\r\\n this._pickerDateRangeEle.style.display = \\'none\\';\\r\\n}\\r\\nif(type == \\'add\\' || type == \\'filter\\') {\\r\\n this._pickerEle.style.width = \\'300px\\';\\r\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\r\\n this._pickerEle.style.width = \\'\\';\\r\\n} else {\\r\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\r\\n}\\r\\nthis._pickerEle.style.display = \\'\\';\\r\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\r\\nsetTimeout(function(){\\r\\n this._pickerShown = true;\\r\\n}.bind(this),0);\\r\\nthis._pickerType = type;\\r\\nthis._pickerIndex = index;},\\r\\n\\t\"hidePicker\": function() {this._pickerEle.style.display = \\'none\\';\\r\\nthis._pickerShown = false;},\\r\\n\\t\"pick\": function(v) {if(this._pickerType == \\'add\\'){\\r\\n this.addItem(v);\\r\\n} else if(this._pickerType == \\'filter\\'){\\r\\n this.data._parsed[this._pickerIndex].op = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n} else{\\r\\n this.data._parsed[this._pickerIndex].value = v;\\r\\n this.setValue(JSON.stringify(this.data._parsed));\\r\\n}},\\r\\n\\t\"suggest\": function(index,data) {if(this._pickerIndex != index){\\r\\n this.hidePicker();\\r\\n}\\r\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\r\\nif(!ele) return false;\\r\\nif(data){\\r\\n if(data.length == 0){\\r\\n  this.hidePicker();\\r\\n } else{\\r\\n  this._picker.layout = \\'list\\';\\r\\n  this._picker.populate(data);\\r\\n  this._picker.setValue(ele.value);\\r\\n  try{\\r\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\r\\n   if(f.data.cacheData) f.data = data;\\r\\n  }catch(e) { };\\r\\n }\\r\\n} else{\\r\\n this._picker.layout = \\'loading\\';\\r\\n this._picker.refresh();\\r\\n}\\r\\nif(!this._pickerShown){\\r\\n this.showPicker(ele,\\'suggest\\',index);\\r\\n}},\\r\\n\\t\"_suggestGet\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\r\\nif(ci._pickerShown){\\r\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\r\\n if(ele){\\r\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\r\\n  if(f){\\r\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\r\\n    if(f.control.data.constructor == Array) {\\r\\n     var _d = f.control.data;\\r\\n     var val = ele.value.toLowerCase();\\r\\n     var data = [];\\r\\n     for(var i = 0; i < _d.length; i++) {\\r\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\r\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\r\\n      }\\r\\n     }\\r\\n     ci._picker.layout = \\'list\\';\\r\\n     ci._picker.populate(data);\\r\\n     return\\r\\n    } else {\\r\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\r\\n      var val = ele.value;\\r\\n      var o = {};\\r\\n      var data = [];\\r\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\n      o.searchType = f.control.data.searchType;\\r\\n      o.staticData = f.control.data.staticchoices ;\\r\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n      data = data.join(\\'&\\');\\r\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n      return;\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n   var val = ele.value;\\r\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\r\\n   var data = [];\\r\\n   var o = {};\\r\\n   o.type = f.control.data.type;\\r\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\r\\no.searchType = f.control.data.searchType;\\r\\n   o.connectionString = f.control.data.connectionString;\\r\\n   o.searchField = f.control.data.field;\\r\\n   o.searchTable = f.control.data.table;\\r\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\r\\n    o.searchFieldStored = \\'\\';\\r\\n   } else {\\r\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\r\\n   }\\r\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\t\\')));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\r\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\r\\n   data = data.join(\\'&\\');\\r\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\r\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\r\\n  }\\r\\n }\\r\\n}},\\r\\n\\t\"getQueryNames\": function(mode) {var data = this.__savedQueries;\\r\\nvar html = [\\'<div class=\"[theme:listBox.base.className]\" style=\"max-height: 300px; overflow:auto;\">\\'];\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n html.push(\\'<div a5-item=\"\\'+mode+\\'NamedQuery\"  a5-value=\"\\'+i+\\'\" class=\"[theme:listBox.base.item.className]\" onmouseover=\"$acn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  onmouseout=\"$rcn(this,\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\')\"  >\\' + data[i] + \\'</div>\\');\\r\\n}\\r\\nhtml.push(\\'</div>\\');\\r\\nvar _html = \\'\\';\\r\\nif(data.length > 0) {\\r\\n _html = html.join(\\'\\');\\r\\n} else {\\r\\n if(mode.toLowerCase() == \\'load\\') {\\r\\n  _html = \\'There are no Saved Queries\\';\\r\\n } else {\\r\\n  _html = \\'\\';\\r\\n }\\r\\n}\\r\\nreturn _html;},\\r\\n\\t\"_fixButtons\": function(data) {var res = [];\\r\\nvar addHTML = \\'<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\';\\r\\nfor(var i = 0; i < data.length; i++) {\\r\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\r\\n}\\r\\nreturn res;},\\r\\n\\t\"layout\": \"Default\",\\r\\n\\t\"layouts\": {\\r\\n\\t\\t\\'Default\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'<div class=\"queryBuilder\">\\',\\r\\n\\t\\t\\t\\'\\t<div class=\"queryBuilderList\">\\',\\r\\n\\t\\t\\t\\'\\t{_parsed}\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div><label class=\"[theme:ux.base.labelClassName]\">{[root].fields[field].label}</label></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t<div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type == \\\\\\'switch\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0; width: 100px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\'{dialog.style}\\\\\\'}>>,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\'+[count]+\\\\\\'\" a5-item=\"switch\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'list\\\\\\' || [root].fields[field].control.type == \\\\\\'combolist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" {*if [root].fields[field].control.type == \\\\\\'list\\\\\\'}readonly=\"readonly\" a5-item=\"list\" a5-value=\"{[count]}\"{*endif} class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.list},\\\\\\' a5-item=\"list\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"daterange\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendly\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'datepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.date},\\\\\\' a5-item=\"date\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.menu},\\\\\\' a5-item=\"datefriendlysingle\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'step\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" style=\"text-align: center;\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.minus},\\\\\\' a5-item=\"step:-\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.number.plus},\\\\\\' a5-item=\"step:+\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'buttonlist\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<div style=\"vertical-align: top; flex-grow: 0;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*if [root].fields[field].control.multiple}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\',\\\\\\'),\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"buttonlist:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*elseif [root].fields[field].control.type == \\\\\\'suggest\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-key-events=\"true\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*else}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t<input id=\"{dialog.componentName}.{VARIABLENAME}.{[count]}\" class=\"[theme:edit.base.className] queryBuilderInput\" value=\"{value}\" a5-query-index=\"{[count]}\" />\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [root].fields[field].control.type != \\\\\\'switch\\\\\\' && [root].fields[field].control.type != \\\\\\'daterangepicker\\\\\\'}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', style: \\\\\\'white-space:nowrap;\\\\\\', html: [root].buttons.filter + \\\\\\' \\\\\\' + op},\\\\\\' a5-item=\"filter\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"vertical-align:middle;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: [root].buttons.remove},\\\\\\' a5-item=\"remove\" a5-value=\"\\\\\\'+[count]+\\\\\\'\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t<div style=\"white-space:nowrap;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*if [count] < [root]._parsed.length-1}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t\\t{A5.buttonLists.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count],<escape<{theme: \\\\\\'{dialog.style}\\\\\\',button: {style: \\\\\\'width: 60px;\\\\\\'}},[{html: \\\\\\'AND<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.and.\\\\\\'},{html: \\\\\\'OR<div class=\"icon\" style=\"width:0px; display:inline-block;\">&nbsp;</div>\\\\\\', value: \\\\\\'.or.\\\\\\'}],andor,\\\\\\'id=\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\'+[count]+\\\\\\'.{index}\" a5-item=\"andor:\\\\\\'+[count]+\\\\\\'\" a5-value=\"{value}\"\\\\\\'>>)}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t{/_parsed}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.add},\\\\\\' a5-item=\"add\"\\\\\\')>>}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align: left;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if [root].searchOptions.loadQuery}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.load},\\\\\\' a5-item=\"loadQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*if _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"saveQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.run},\\\\\\' a5-item=\"runQuery\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.clearsearch},\\\\\\' a5-item=\"clearSearch\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t{*endif}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Wait\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'Wait....\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Load\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.LOADSAVEDQUERIES\">{[root].buttons.stringloadquery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t{@[scope].getQueryNames(\\\\\\'load\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t},\\r\\n\\t\\t\\'Save\\' : {\\r\\n\\t\\t\\ttype: \\'template\\',\\r\\n\\t\\t\\ttemplate: [\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'<div style=\"width: 300px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY\" >{[root].buttons.stringsavequery}</div>\\',\\r\\n\\t\\t\\t\\'\\t<div id=\"{dialog.componentName}.SAVEQUERY2\" style=\"margin-top:10px;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t<div><input id=\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\" style=\"width:100%\" placeholder=\"{[root].buttons.stringquerynamewatermark}\" class=\"[theme:edit.primary.className|{dialog.style}Edit]\" /></div>\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t{@[scope].getQueryNames(\\\\\\'set\\\\\\')}\\',\\r\\n\\t\\t\\t\\'\\t\\t<br>\\',\\r\\n\\t\\t\\t\\'\\t\\t<div style=\"text-align:right;\">\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.save},\\\\\\' a5-item=\"save\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t\\t{A5.buttons.html(\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\',<escape<{theme: \\\\\\'{dialog.style}\\\\\\', html: buttons.cancel},\\\\\\' a5-item=\"cancel\"\\\\\\')>>}\\',\\r\\n\\t\\t\\t\\'\\t\\t</div>\\',\\r\\n\\t\\t\\t\\'\\t</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'</div>\\',\\r\\n\\t\\t\\t\\'\\',\\r\\n\\t\\t\\t\\'\\'\\r\\n\\t\\t\\t].join(\\'\\')\\r\\n\\t\\t}\\r\\n\\t\\r\\n\\t},\\r\\n\\t\"onBeforeDraw\": function(html) { \\r\\nif(typeof this.data._parsed == \\'undefined\\') { \\r\\n\\tthis.data._parsed = [];\\r\\n}},\\r\\n\\t\"onBeforePopulate\": function(data) { \\r\\nvar ld = [];\\r\\nif(data.fields){\\r\\n\\tfor(var f in data.fields){\\r\\n\\t\\tld.push({value: f, html: data.fields[f].label});\\r\\n\\t\\tif(typeof data.fields[f].control == \\'undefined\\'){\\r\\n\\t\\t\\tdata.fields[f].control = {type: \\'default\\'};\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\nthis._fieldMenu = ld;},\\r\\n\\t\"onChange\": function(v) { \\r\\nif(!this._stopRepaint){\\r\\n\\tthis.parseValue();\\r\\n}},\\r\\n\\t\"_onInitialize\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\r\\nthis.parseValue();\\r\\nvar cEle = $(this.contId);\\r\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\r\\n  if(watch){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\r\\n   if(f){\\r\\n    if(f.control.type == \\'suggest\\' ){\\r\\n     var len = ele.value.length;\\r\\n     var min = 3;\\r\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\r\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\r\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\r\\n    }\\r\\n    var keyCode = e.charCode || e.keyCode;\\r\\n    if(ci._pickerShown){\\r\\n     if(keyCode == 13){\\r\\n      if(ci._picker.value.length > 0){\\r\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\r\\n      }\\r\\n     } else if(keyCode == 38){\\r\\n      ci._picker.navigate(\\'prev\\');\\r\\n     } else if(keyCode == 40){\\r\\n      ci._picker.navigate(\\'next\\');\\r\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\r\\n      if(f.control.data.constructor != Array ) {\\r\\n       clearTimeout(ci._suggestTO);\\r\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\r\\n      } else {\\r\\n       ci._suggestGet();\\r\\n      }\\r\\n     }\\r\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\r\\n     if(keyCode == 40 && e.ctrlKey){\\r\\n      ci.items.list.onClick.call(ci,indx)\\r\\n     }\\r\\n    }\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\r\\n if(ci.layout == \\'Default\\') {\\r\\n  var ele = e.target || e.srcElement;\\r\\n  var tag = ele.tagName || \\'\\';\\r\\n  tag = tag.toLowerCase();\\r\\n  if(tag == \\'input\\'){\\r\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\r\\n   if(typeof indx == \\'number\\'){\\r\\n    ci._stopRepaint = true;\\r\\n    ci.data._parsed[indx].value = ele.value;\\r\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\r\\n    ci._stopRepaint = false;\\r\\n   }\\r\\n  }\\r\\n }\\r\\n},this);\\r\\nvar pEle = document.createElement(\\'div\\');\\r\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\r\\npEle.className = \\'[theme:menu.base.className]\\';\\r\\npEle.id = this.contId+\\'.picker\\';\\r\\nvar html = [];\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickervb\" class=\"[theme:menu.base.innerClassName]\" style=\"max-height: 300px; overflow: auto;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdate\" class=\"[theme:menu.base.innerClassName]\" style=\"display: none;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterange\" class=\"[theme:menu.base.innerClassName]\" style=\"white-space:nowrap; padding: 2px; display: none;\">\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangestart\" style=\"display:inline-block;margin-right:2px;\"></div>\\');\\r\\nhtml.push(\\'<div id=\"\\'+this.contId+\\'.pickerdaterangeend\" style=\"display:inline-block;\"></div>\\');\\r\\nhtml.push(\\'<div style=\"text-align:center; margin-top:2px;\">\\');\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\r\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\r\\nhtml.push(\\'</div>\\');\\r\\nhtml.push(\\'</div>\\');\\r\\npEle.innerHTML = html.join(\\'\\');\\r\\ncEle.parentNode.appendChild(pEle);\\r\\nthis._pickerEle = pEle;\\r\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\r\\n parentControl: this.variableName,\\r\\n captureFocus: false,\\r\\n loopNavigate: true,\\r\\n loopNavigateNullSelection: true,\\r\\n allowNullSelection: true,\\r\\n allowAnyValue: false,\\r\\n layout: \\'list\\',\\r\\n layouts: {\\r\\n  loading: {\\r\\n   type: \\'static\\',\\r\\n   html: \\'<div class=\"[theme:menu.base.item.className]\">Loading...</div>\\'\\r\\n  },\\r\\n  list: {\\r\\n   type: \\'template\\',\\r\\n   template: [\\r\\n    \\'{*if typeof [value] == \\\\\\'string\\\\\\'}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{[value]}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{[value]}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*else}\\',\\r\\n    \\'\\t<div id=\"\\'+this.contId+\\'.pickervb.{[count]}\" class=\"[theme:menu.base.item.className]\" a5-item=\"listItem\" a5-value=\"{value}\" onmouseover=\"A5.u.element.cls(this,\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\');\" onmouseout=\"A5.u.element.cls(this,\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\');\">\\',\\r\\n    \\'\\t<span style=\"display:inline-block;\">{html}</span>\\',\\r\\n    \\'\\t</div>\\',\\r\\n    \\'{*endif}\\'\\r\\n   ].join(\\'\\')\\r\\n  }\\r\\n },\\r\\n items: {\\r\\n  listItem: {\\r\\n   selectable: true,\\r\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\r\\n   onClick: function(v){\\r\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n    pvb.pick(v)\\r\\n    pvb.hidePicker();\\r\\n   }\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\r\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onClick: function(v){\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  pvb.pick(v)\\r\\n  pvb.hidePicker();\\r\\n }\\r\\n});\\r\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\r\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n onSelect: function() {\\r\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n  var _drobj = pvb._pickerDateRangeEnd;\\r\\n  if(this.date > _drobj.date) {\\r\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\r\\n  } else {\\r\\n   _drobj.refresh();\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\r\\n parentControl: this.variableName,\\r\\n theme: \\'{dialog.style}\\',\\r\\n days: {dialog.object}.datePickerDayNames,\\r\\n months: {dialog.object}.datePickerMonthNames,\\r\\n disabledDates: {\\r\\n  low: function() {\\r\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\r\\n   if(pvb._pickerDateRangeStart) {\\r\\n    return pvb._pickerDateRangeStart.date;\\r\\n   }\\r\\n   return false;\\r\\n  }\\r\\n }\\r\\n});\\r\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\r\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\r\\n if(this._pickerShown){\\r\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\r\\n  this.pick(v);\\r\\n  this.hidePicker();\\r\\n }\\r\\n},this,true);\\r\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\r\\n if(this._pickerShown){\\r\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\r\\n }\\r\\n},this,true); },\\r\\n\\t\"items\": {\\r\\n\\t\\t\\'remove\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed.splice(Number(v),1);\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\tif(this.data._parsed.length == 0 ) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar listName = this.data.searchOptions.listName;\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryData = [];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'add\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(this._fieldMenu);\\r\\n\\t\\t\\tthis.showPicker($(tid),\\'add\\',-1);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'filter\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tvar _filterMenu = [\\r\\n\\t\\t\\t\\t{html: \\'Equals\\', value: \\'=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than\\', value: \\'<\\'},\\r\\n\\t\\t\\t\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than\\', value: \\'>\\'},\\r\\n\\t\\t\\t\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\r\\n\\t\\t\\t];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar type = this.data.fields[f].control.type;\\r\\n\\t\\t\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\r\\n\\t\\t\\tif(exclude.indexOf(type) == -1 ) {\\r\\n\\t\\t\\t\\t _filterMenu = _filterMenu.concat(\\r\\n\\t\\t\\t\\t\\t[\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Contains\\', value: \\'..x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Starts with\\', value: \\'x..\\'},\\r\\n\\t\\t\\t\\t\\t\\t{html: \\'Ends with\\', value: \\'..x\\'}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t]\\r\\n\\t\\t\\t\\t)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(_filterMenu);\\r\\n\\t\\t\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\r\\n\\t\\t\\tthis.showPicker(ele,\\'filter\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'switch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = this.data._parsed[Number(v)];\\r\\n\\t\\tvar f = this.data.fields[d.field];\\r\\n\\t\\tif(f){\\r\\n\\t\\t\\tvar vals = f.control.data;\\r\\n\\t\\t\\tif(vals){\\r\\n\\t\\t\\t\\tif(d.value == vals[0]) d.value = vals[1];\\r\\n\\t\\t\\t\\telse d.value = vals[0];\\r\\n\\t\\t\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'list\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\t\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\r\\n\\t\\t\\tif(d.constructor == Array) { \\r\\n\\t\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\t\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\t\\tthis.showPicker(iEle,\\'list\\',v);\\r\\n\\t\\t\\t\\tiEle.focus();\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\t\\tif(this._pickerIndex != v){\\r\\n\\t\\t\\t\\t\\tthis.hidePicker();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\r\\n\\t\\t\\t\\tif(!ele) return false;\\r\\n\\t\\t\\t\\tthis._picker.layout = \\'loading\\';\\r\\n\\t\\t\\t\\tthis._picker.refresh();\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tif(!this._pickerShown){\\r\\n\\t\\t\\t\\t\\tthis.showPicker(ele,\\'list\\',v);\\r\\n\\t\\t\\t\\t\\tthis._pickerShown = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis._suggestGet();\\r\\n\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'date\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDate.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDate.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'date\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'step\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\tvar d = this.data.fields[f].control.data;\\r\\n\\t\\tvar val = this.data._parsed[v].value;\\r\\n\\t\\tval = $u.s.toNum(val);\\r\\n\\t\\tif(ia == \\'-\\') val -= d.step || 1;\\r\\n\\t\\telse val += d.step || 1;\\r\\n\\t\\t\\r\\n\\t\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\r\\n\\t\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\r\\n\\t\\t\\r\\n\\t\\tthis.data._parsed[v].value = val;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'buttonlist\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar f = this.data._parsed[ia].field;\\r\\n\\t\\tvar obj = this.data.fields[f];\\r\\n\\t\\tif(obj.control.multiple) { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar v2 = this.data._parsed[ia].value;\\r\\n\\t\\t\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\r\\n\\t\\t\\tif(v2 == \\'\\') v2 = [];\\r\\n\\t\\t\\telse v2 = v2.split(\\',\\');\\r\\n\\t\\t\\tvar vi = v2.indexOf(v)\\r\\n\\t\\t\\tif(vi == -1) { \\r\\n\\t\\t\\t\\tv2.push(v);\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t} else { \\r\\n\\t\\t\\t\\tv2.splice(vi,1)\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tv = v2.join(\\',\\');\\r\\n\\t\\t} \\r\\n\\t\\tthis.data._parsed[ia].value = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t}catch(err){ }\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'saveQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\r\\n\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\tthis.setLayout(\\'Wait\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'runQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tmode = this.data.searchOptions.mode;\\r\\n\\t\\t\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t\\tlistName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') { \\r\\n\\t\\t\\talert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\tvar query = this.value\\r\\n\\t\\t\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.queryData = this.value[0];\\r\\n\\t\\t\\tobj.listName = listName;\\r\\n\\t\\t\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t\\tobj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar m = []; \\r\\n\\t\\t\\tfor(var n in this.data.fields) { \\r\\n\\t\\t\\t\\tvar flag = this.data.fields[n].control.multiple; \\r\\n\\t\\t\\t\\tif(flag) { m.push(n);}\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tobj.allowMultiple = m ;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar searchMode = 1;\\r\\n\\t\\t\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar _d = [];\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\r\\n\\t\\t\\tif(searchMode == 2) { \\r\\n\\t\\t\\t\\tvar ss = {dialog.object}.getControl(this.listName);\\r\\n\\t\\t\\t\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t_data = _d.join(\\'&\\')\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'cancel\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tthis.setLayout(\\'Default\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'loadNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t try{\\r\\n\\t\\t  uniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t }catch(err){ }\\r\\n\\t\\t var queryName = this.__savedQueries[v]\\r\\n\\t\\t var data = [];\\r\\n\\t\\t data.push( \\'_mode=loadQueryFromRepo\\');\\r\\n\\t\\t data.push(\\'_queryToLoad=\\' + queryName);\\r\\n\\t\\t data.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t data = data.join(\\'&\\')\\r\\n\\t\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'setNamedQuery\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\r\\n\\t\\tif(ele) ele.value = this.__savedQueries[v];\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'clearSearch\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar mode = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t mode = this.data.searchOptions.mode;\\r\\n\\t\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tvar listName = \\'\\';\\r\\n\\t\\ttry{\\r\\n\\t\\t listName = this.data.searchOptions.listName;\\r\\n\\t\\t}catch(e) { }\\r\\n\\t\\tif(listName == \\'\\') {\\r\\n\\t\\t alert(\\'Error. List to search not defined.\\');\\r\\n\\t\\t} else {\\r\\n\\t\\t var query = this.value\\r\\n\\t\\t var obj = {};\\r\\n\\t\\t this.setValue(\\'\\');\\r\\n\\t\\t obj.queryData = [];\\r\\n\\t\\t obj.listName = listName;\\r\\n\\t\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\r\\n\\t\\t obj.placeholder = this.data.searchOptions.placeHolder;\\r\\n\\t\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\r\\n\\t\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'save\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar queryDef = this.value[0];\\r\\n\\t\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\r\\n\\t\\t\\r\\n\\t\\tif(queryName == \\'\\') { \\r\\n\\t\\t\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\"color:red;\">You have not specified the query name</span>\\');\\r\\n\\t\\t} else { \\r\\n\\t\\t\\r\\n\\t\\t\\tvar obj = {};\\r\\n\\t\\t\\tobj.queryName = queryName \\r\\n\\t\\t\\tobj.queryDefinition = queryDef \\r\\n\\t\\t\\tdebugger;\\r\\n\\t\\t\\tvar uniqueKey = \\'\\';\\r\\n\\t\\t\\ttry{\\r\\n\\t\\t\\t\\tuniqueKey = this.data.searchOptions.uniqueKey\\r\\n\\t\\t\\t}catch(err){ }\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar data = [];\\r\\n\\t\\t\\tdata.push(\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\r\\n\\t\\t\\tdata.push( \\'_mode=saveQueryToRepo\\');\\r\\n\\t\\t\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\r\\n\\t\\t\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\r\\n\\t\\t\\tdata = data.join(\\'&\\')\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\r\\n\\t\\t\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'andor\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tthis.data._parsed[ia].andor = v;\\r\\n\\t\\tthis.setValue(JSON.stringify(this.data._parsed));\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendly\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"drag\": {\\r\\n\\t\\t\\t\\t\"allow\": false\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\tvar d = [];\\r\\n\\t\\td.push(\\'This Week\\');\\r\\n\\t\\td.push(\\'This Week-to-date\\');\\r\\n\\t\\td.push(\\'Next Week\\');\\r\\n\\t\\td.push(\\'Next 7 days\\');\\r\\n\\t\\td.push(\\'This Month\\');\\r\\n\\t\\td.push(\\'This Month-to-date\\');\\r\\n\\t\\td.push(\\'Last Week\\');\\r\\n\\t\\td.push(\\'Last 7 days\\');\\r\\n\\t\\td.push(\\'Last Month\\');\\r\\n\\t\\td.push(\\'Last 30 days\\');\\r\\n\\t\\td.push(\\'Next Month\\');\\r\\n\\t\\td.push(\\'Next 30 days\\');\\r\\n\\t\\td.push(\\'This Year\\');\\r\\n\\t\\td.push(\\'Last Year\\');\\r\\n\\t\\td.push(\\'Next Year\\');\\r\\n\\t\\td.push(\\'This Year-to-date\\');\\r\\n\\t\\td.push(\\'This Quarter\\');\\r\\n\\t\\td.push(\\'This Quarter-to-date\\');\\r\\n\\t\\td.push(\\'Last Quarter\\');\\r\\n\\t\\td.push(\\'Next Quarter\\');\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t var f = this.data._parsed[v].field;\\r\\n\\t\\t this._picker.layout = \\'list\\';\\r\\n\\t\\t this._picker.populate(d);\\r\\n\\t\\t this._picker.setValue(\\'\\');\\r\\n\\t\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t this.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t iEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'daterange\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tvar frm = this.data.fields[f].control.format;\\r\\n\\t\\t\\tif(this._pickerDateRangeStart.format != frm){\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart.format = frm;\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd.format = frm;\\r\\n\\t\\t\\t\\tvar td = new Date();\\r\\n\\t\\t\\t\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\r\\n\\t\\t\\t\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvar range = this.data._parsed[v].value || \\'\\';\\r\\n\\t\\t\\trange = range.split(\\'..\\');\\r\\n\\t\\t\\tif(range.length == 1) { \\r\\n\\t\\t\\t\\trange.push(\\'\\');\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis._pickerDateRangeStart.setValue(range[0]);\\r\\n\\t\\t\\tthis._pickerDateRangeEnd.setValue(range[1]);\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(iEle,\\'daterange\\',v);\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t},\\r\\n\\t\\t\\'datefriendlysingle\\' : {\\r\\n\\t\\t\\t\"selectable\": false,\\r\\n\\t\\t\\t\"onClick\": function(v,ia,i,ele,event) { \\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tvar d = [];\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\td.push(\\'Today\\');\\r\\n\\t\\td.push(\\'Yesterday\\');\\r\\n\\t\\td.push(\\'Tomorrow\\');\\r\\n\\t\\t\\r\\n\\t\\t\\r\\n\\t\\tif(this._picker){\\r\\n\\t\\t\\tvar f = this.data._parsed[v].field;\\r\\n\\t\\t\\tthis._picker.layout = \\'list\\';\\r\\n\\t\\t\\tthis._picker.populate(d);\\r\\n\\t\\t\\tthis._picker.setValue(\\'\\');\\r\\n\\t\\t\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\r\\n\\t\\t\\tthis.showPicker(ele,\\'datefriendly\\',v);\\r\\n\\t\\t\\tiEle.focus();\\r\\n\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t}\\r\\n\\t\\t\\r\\n\\t\\t},\\r\\n\\t\"wrapper\": {\\r\\n\\t\\t\"allow\": false\\r\\n\\t}\\r\\n}',\n\tdataJSON: '{\\r\\n\\t\"fields\": {\\r\\n\\t\\t\"firstname\": {\\r\\n\\t\\t\\t\"label\": \"\",\\r\\n\\t\\t\\t\"control\": {\\r\\n\\t\\t\\t\\t\"type\": \"combolist\",\\r\\n\\t\\t\\t\\t\"data\": [\\r\\n\\t\\t\\t\\t{\\r\\n\\t\\t\\t\\t\\t\"html\": \"\",\\r\\n\\t\\t\\t\\t\\t\"value\": \"\"\\r\\n\\t\\t\\t\\t}]\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\t\"buttons\": {\\r\\n\\t\\t\"add\": \"Add new search field...\",\\r\\n\\t\\t\"remove\": \"<img src=\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\" />\",\\r\\n\\t\\t\"filter\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" />\",\\r\\n\\t\\t\"date\": \"<img src=\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\" />\",\\r\\n\\t\\t\"list\": \"<img src=\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\" />\",\\r\\n\\t\\t\"number\": {\\r\\n\\t\\t\\t\"plus\": \"<img src=\\\\\"svgIcon=#alpha-icon-add:icon\\\\\" />\",\\r\\n\\t\\t\\t\"minus\": \"<img src=\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\" />\"\\r\\n\\t\\t},\\r\\n\\t\\t\"save\": \"<img src=\\\\\"svgIcon=#alpha-icon-save:icon\\\\\" />Save query\",\\r\\n\\t\\t\"load\": \"<img src=\\\\\"svgIcon=#alpha-icon-load:icon\\\\\" /> Load query\",\\r\\n\\t\\t\"run\": \"<img src=\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\" /> Run query\",\\r\\n\\t\\t\"menu\": \"<img src=\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\" />\",\\r\\n\\t\\t\"daterangepicker\": {\\r\\n\\t\\t\\t\"ok\": \"&nbsp;OK&nbsp;\",\\r\\n\\t\\t\\t\"cancel\": \"Cancel\"\\r\\n\\t\\t},\\r\\n\\t\\t\"cancel\": \"<img src=\\\\\"svgIcon=#alpha-icon-x:icon\\\\\" /> Cancel\",\\r\\n\\t\\t\"clearsearch\": \"<img src=\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\" /> Clear search\",\\r\\n\\t\\t\"stringloadquery\": \"Specify saved query to load\",\\r\\n\\t\\t\"stringsavequery\": \"Specify name for query\",\\r\\n\\t\\t\"stringquerynamewatermark\": \"Query name\"\\r\\n\\t},\\r\\n\\t\"searchOptions\": {\\r\\n\\t\\t\"displayDebuggingInfo\": false,\\r\\n\\t\\t\"loadQuery\": false,\\r\\n\\t\\t\"saveQuery\": false,\\r\\n\\t\\t\"placeHolder\": \"\",\\r\\n\\t\\t\"uniqueKey\": \"\",\\r\\n\\t\\t\"loadType\": \"All\",\\r\\n\\t\\t\"listName\": \"dummy_list\"\\r\\n\\t},\\r\\n\\t\"searchMode\": 1,\\r\\n\\t\"listName\": \"dummy_list\",\\r\\n\\t\"subtype\": \"AdvancedListSearch\",\\r\\n\\t\"variableName\": \"\",\\r\\n\\t\"settingsJSON\": \"{\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"inputId\\\\\": \\\\\"{variablename}\\\\\",\\\\r\\\\n\\\\t\\\\\"variableName\\\\\": \\\\\"{VARIABLENAME}\\\\\",\\\\r\\\\n\\\\t\\\\\"theme\\\\\": \\\\\"{dialog.style}\\\\\",\\\\r\\\\n\\\\t\\\\\"autoRefreshOnResize\\\\\": false,\\\\r\\\\n\\\\t\\\\\"datasource\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"lowLevel\\\\\": \\\\\"Data\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"type\\\\\": \\\\\"Static JSON\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"multiple\\\\\": true,\\\\r\\\\n\\\\t\\\\\"selectionMode\\\\\": \\\\\"default\\\\\",\\\\r\\\\n\\\\t\\\\\"loopNavigate\\\\\": false,\\\\r\\\\n\\\\t\\\\\"loopNavigateNullSelection\\\\\": true,\\\\r\\\\n\\\\t\\\\\"allowNullSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowTextSelection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowNullDeselection\\\\\": false,\\\\r\\\\n\\\\t\\\\\"autoRefresh\\\\\": false,\\\\r\\\\n\\\\t\\\\\"allowAnyValue\\\\\": true,\\\\r\\\\n\\\\t\\\\\"captureFocus\\\\\": false,\\\\r\\\\n\\\\t\\\\\"scroll\\\\\": false,\\\\r\\\\n\\\\t\\\\\"parseValue\\\\\": function() {this.data._parsed = [];\\\\r\\\\nvar val = this.value[0];\\\\r\\\\nif(val){\\\\r\\\\n if(val != \\'\\') {\\\\r\\\\n  try {\\\\r\\\\n   var obj = JSON.parse(val);\\\\r\\\\n   this.data._parsed = obj;\\\\r\\\\n  } catch(err){\\\\r\\\\n   console.log(\\'ERROR: query builder \\\\\"\\'+this.variableName+\\'\\\\\" could not parse value.\\');\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nthis.refresh();},\\\\r\\\\n\\\\t\\\\\"addItem\\\\\": function(v) {var f = this.data.fields[v];\\\\r\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\r\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\r\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\r\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\r\\\\n}\\\\r\\\\nthis.data._parsed.push(d);\\\\r\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\r\\\\n\\\\t\\\\\"showPicker\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\r\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\r\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\r\\\\n this._pickerVBEle.style.display = \\'\\';\\\\r\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\r\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\r\\\\n}\\\\r\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\r\\\\n this._pickerEle.style.width = \\'300px\\';\\\\r\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\r\\\\n this._pickerEle.style.width = \\'\\';\\\\r\\\\n} else {\\\\r\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\r\\\\n}\\\\r\\\\nthis._pickerEle.style.display = \\'\\';\\\\r\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\r\\\\nsetTimeout(function(){\\\\r\\\\n this._pickerShown = true;\\\\r\\\\n}.bind(this),0);\\\\r\\\\nthis._pickerType = type;\\\\r\\\\nthis._pickerIndex = index;},\\\\r\\\\n\\\\t\\\\\"hidePicker\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\r\\\\nthis._pickerShown = false;},\\\\r\\\\n\\\\t\\\\\"pick\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\r\\\\n this.addItem(v);\\\\r\\\\n} else if(this._pickerType == \\'filter\\'){\\\\r\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n} else{\\\\r\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\r\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"suggest\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\r\\\\n this.hidePicker();\\\\r\\\\n}\\\\r\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\r\\\\nif(!ele) return false;\\\\r\\\\nif(data){\\\\r\\\\n if(data.length == 0){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n } else{\\\\r\\\\n  this._picker.layout = \\'list\\';\\\\r\\\\n  this._picker.populate(data);\\\\r\\\\n  this._picker.setValue(ele.value);\\\\r\\\\n  try{\\\\r\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\r\\\\n   if(f.data.cacheData) f.data = data;\\\\r\\\\n  }catch(e) { };\\\\r\\\\n }\\\\r\\\\n} else{\\\\r\\\\n this._picker.layout = \\'loading\\';\\\\r\\\\n this._picker.refresh();\\\\r\\\\n}\\\\r\\\\nif(!this._pickerShown){\\\\r\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_suggestGet\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\r\\\\nif(ci._pickerShown){\\\\r\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\r\\\\n if(ele){\\\\r\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\r\\\\n  if(f){\\\\r\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\r\\\\n    if(f.control.data.constructor == Array) {\\\\r\\\\n     var _d = f.control.data;\\\\r\\\\n     var val = ele.value.toLowerCase();\\\\r\\\\n     var data = [];\\\\r\\\\n     for(var i = 0; i < _d.length; i++) {\\\\r\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\r\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n     ci._picker.layout = \\'list\\';\\\\r\\\\n     ci._picker.populate(data);\\\\r\\\\n     return\\\\r\\\\n    } else {\\\\r\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\r\\\\n      var val = ele.value;\\\\r\\\\n      var o = {};\\\\r\\\\n      var data = [];\\\\r\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\n      o.searchType = f.control.data.searchType;\\\\r\\\\n      o.staticData = f.control.data.staticchoices ;\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n      data = data.join(\\'&\\');\\\\r\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n      return;\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n   var val = ele.value;\\\\r\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\r\\\\n   var data = [];\\\\r\\\\n   var o = {};\\\\r\\\\n   o.type = f.control.data.type;\\\\r\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\r\\\\no.searchType = f.control.data.searchType;\\\\r\\\\n   o.connectionString = f.control.data.connectionString;\\\\r\\\\n   o.searchField = f.control.data.field;\\\\r\\\\n   o.searchTable = f.control.data.table;\\\\r\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\r\\\\n    o.searchFieldStored = \\'\\';\\\\r\\\\n   } else {\\\\r\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\r\\\\n   }\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\t\\')));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\r\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\r\\\\n   data = data.join(\\'&\\');\\\\r\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\r\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"getQueryNames\\\\\": function(mode) {var data = this.__savedQueries;\\\\r\\\\nvar html = [\\'<div class=\\\\\"[theme:listBox.base.className]\\\\\" style=\\\\\"max-height: 300px; overflow:auto;\\\\\">\\'];\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n html.push(\\'<div a5-item=\\\\\"\\'+mode+\\'NamedQuery\\\\\"  a5-value=\\\\\"\\'+i+\\'\\\\\" class=\\\\\"[theme:listBox.base.item.className]\\\\\" onmouseover=\\\\\"$acn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  onmouseout=\\\\\"$rcn(this,\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\')\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\r\\\\n}\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nvar _html = \\'\\';\\\\r\\\\nif(data.length > 0) {\\\\r\\\\n _html = html.join(\\'\\');\\\\r\\\\n} else {\\\\r\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\r\\\\n  _html = \\'There are no Saved Queries\\';\\\\r\\\\n } else {\\\\r\\\\n  _html = \\'\\';\\\\r\\\\n }\\\\r\\\\n}\\\\r\\\\nreturn _html;},\\\\r\\\\n\\\\t\\\\\"_fixButtons\\\\\": function(data) {var res = [];\\\\r\\\\nvar addHTML = \\'<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\';\\\\r\\\\nfor(var i = 0; i < data.length; i++) {\\\\r\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\r\\\\n}\\\\r\\\\nreturn res;},\\\\r\\\\n\\\\t\\\\\"layout\\\\\": \\\\\"Default\\\\\",\\\\r\\\\n\\\\t\\\\\"layouts\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'Default\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div class=\\\\\"queryBuilder\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div class=\\\\\"queryBuilderList\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div><label class=\\\\\"[theme:ux.base.labelClassName]\\\\\">{[root].fields[field].label}</label></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t<div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\'switch\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'}>>,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-item=\\\\\"switch\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\'combolist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\'list\\\\\\\\\\'}readonly=\\\\\"readonly\\\\\" a5-item=\\\\\"list\\\\\" a5-value=\\\\\"{[count]}\\\\\"{*endif} class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\' a5-item=\\\\\"list\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"daterange\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendly\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'datepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\' a5-item=\\\\\"date\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\' a5-item=\\\\\"datefriendlysingle\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'step\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" style=\\\\\"text-align: center;\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\' a5-item=\\\\\"step:-\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\' a5-item=\\\\\"step:+\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'buttonlist\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align: top; flex-grow: 0;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.multiple}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\',\\\\\\\\\\'),\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"buttonlist:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\'suggest\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-key-events=\\\\\"true\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*else}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t<input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\" class=\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\" value=\\\\\"{value}\\\\\" a5-query-index=\\\\\"{[count]}\\\\\" />\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\'switch\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\'daterangepicker\\\\\\\\\\'}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', style: \\\\\\\\\\'white-space:nowrap;\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\' \\\\\\\\\\' + op},\\\\\\\\\\' a5-item=\\\\\"filter\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"vertical-align:middle;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\' a5-item=\\\\\"remove\\\\\" a5-value=\\\\\"\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t<div style=\\\\\"white-space:nowrap;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t\\\\t{A5.buttonLists.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\',button: {style: \\\\\\\\\\'width: 60px;\\\\\\\\\\'}},[{html: \\\\\\\\\\'AND<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.and.\\\\\\\\\\'},{html: \\\\\\\\\\'OR<div class=\\\\\"icon\\\\\" style=\\\\\"width:0px; display:inline-block;\\\\\">&nbsp;</div>\\\\\\\\\\', value: \\\\\\\\\\'.or.\\\\\\\\\\'}],andor,\\\\\\\\\\'id=\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\'+[count]+\\\\\\\\\\'.{index}\\\\\" a5-item=\\\\\"andor:\\\\\\\\\\'+[count]+\\\\\\\\\\'\\\\\" a5-value=\\\\\"{value}\\\\\"\\\\\\\\\\'>>)}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{/_parsed}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.add},\\\\\\\\\\' a5-item=\\\\\"add\\\\\"\\\\\\\\\\')>>}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align: left;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.load},\\\\\\\\\\' a5-item=\\\\\"loadQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*if _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"saveQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.run},\\\\\\\\\\' a5-item=\\\\\"runQuery\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\' a5-item=\\\\\"clearSearch\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{*endif}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Wait\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'Wait....\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Load\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t{@[scope].getQueryNames(\\\\\\\\\\'load\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'Save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\ttype: \\'template\\',\\\\r\\\\n\\\\t\\\\t\\\\ttemplate: [\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'<div style=\\\\\"width: 300px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t<div id=\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\" style=\\\\\"margin-top:10px;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div><input id=\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\" style=\\\\\"width:100%\\\\\" placeholder=\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\" class=\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\" /></div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t{@[scope].getQueryNames(\\\\\\\\\\'set\\\\\\\\\\')}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<br>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t<div style=\\\\\"text-align:right;\\\\\">\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.save},\\\\\\\\\\' a5-item=\\\\\"save\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t\\\\t{A5.buttons.html(\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\',<escape<{theme: \\\\\\\\\\'{dialog.style}\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\' a5-item=\\\\\"cancel\\\\\"\\\\\\\\\\')>>}\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\\\t</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'</div>\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\',\\\\r\\\\n\\\\t\\\\t\\\\t\\'\\'\\\\r\\\\n\\\\t\\\\t\\\\t].join(\\'\\')\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"onBeforeDraw\\\\\": function(html) { \\\\r\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\r\\\\n\\\\tthis.data._parsed = [];\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"onBeforePopulate\\\\\": function(data) { \\\\r\\\\nvar ld = [];\\\\r\\\\nif(data.fields){\\\\r\\\\n\\\\tfor(var f in data.fields){\\\\r\\\\n\\\\t\\\\tld.push({value: f, html: data.fields[f].label});\\\\r\\\\n\\\\t\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\r\\\\n\\\\t\\\\t\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t}\\\\r\\\\n}\\\\r\\\\nthis._fieldMenu = ld;},\\\\r\\\\n\\\\t\\\\\"onChange\\\\\": function(v) { \\\\r\\\\nif(!this._stopRepaint){\\\\r\\\\n\\\\tthis.parseValue();\\\\r\\\\n}},\\\\r\\\\n\\\\t\\\\\"_onInitialize\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\r\\\\nthis.parseValue();\\\\r\\\\nvar cEle = $(this.contId);\\\\r\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\r\\\\n  if(watch){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\r\\\\n   if(f){\\\\r\\\\n    if(f.control.type == \\'suggest\\' ){\\\\r\\\\n     var len = ele.value.length;\\\\r\\\\n     var min = 3;\\\\r\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\r\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\r\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\r\\\\n    }\\\\r\\\\n    var keyCode = e.charCode || e.keyCode;\\\\r\\\\n    if(ci._pickerShown){\\\\r\\\\n     if(keyCode == 13){\\\\r\\\\n      if(ci._picker.value.length > 0){\\\\r\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\r\\\\n      }\\\\r\\\\n     } else if(keyCode == 38){\\\\r\\\\n      ci._picker.navigate(\\'prev\\');\\\\r\\\\n     } else if(keyCode == 40){\\\\r\\\\n      ci._picker.navigate(\\'next\\');\\\\r\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\r\\\\n      if(f.control.data.constructor != Array ) {\\\\r\\\\n       clearTimeout(ci._suggestTO);\\\\r\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\r\\\\n      } else {\\\\r\\\\n       ci._suggestGet();\\\\r\\\\n      }\\\\r\\\\n     }\\\\r\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\r\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\r\\\\n      ci.items.list.onClick.call(ci,indx)\\\\r\\\\n     }\\\\r\\\\n    }\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\r\\\\n if(ci.layout == \\'Default\\') {\\\\r\\\\n  var ele = e.target || e.srcElement;\\\\r\\\\n  var tag = ele.tagName || \\'\\';\\\\r\\\\n  tag = tag.toLowerCase();\\\\r\\\\n  if(tag == \\'input\\'){\\\\r\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\r\\\\n   if(typeof indx == \\'number\\'){\\\\r\\\\n    ci._stopRepaint = true;\\\\r\\\\n    ci.data._parsed[indx].value = ele.value;\\\\r\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\r\\\\n    ci._stopRepaint = false;\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n},this);\\\\r\\\\nvar pEle = document.createElement(\\'div\\');\\\\r\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\r\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\r\\\\npEle.id = this.contId+\\'.picker\\';\\\\r\\\\nvar html = [];\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickervb\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"max-height: 300px; overflow: auto;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdate\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"display: none;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\" class=\\\\\"[theme:menu.base.innerClassName]\\\\\" style=\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\">\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\" style=\\\\\"display:inline-block;margin-right:2px;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div id=\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\" style=\\\\\"display:inline-block;\\\\\"></div>\\');\\\\r\\\\nhtml.push(\\'<div style=\\\\\"text-align:center; margin-top:2px;\\\\\">\\');\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\r\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\nhtml.push(\\'</div>\\');\\\\r\\\\npEle.innerHTML = html.join(\\'\\');\\\\r\\\\ncEle.parentNode.appendChild(pEle);\\\\r\\\\nthis._pickerEle = pEle;\\\\r\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n captureFocus: false,\\\\r\\\\n loopNavigate: true,\\\\r\\\\n loopNavigateNullSelection: true,\\\\r\\\\n allowNullSelection: true,\\\\r\\\\n allowAnyValue: false,\\\\r\\\\n layout: \\'list\\',\\\\r\\\\n layouts: {\\\\r\\\\n  loading: {\\\\r\\\\n   type: \\'static\\',\\\\r\\\\n   html: \\'<div class=\\\\\"[theme:menu.base.item.className]\\\\\">Loading...</div>\\'\\\\r\\\\n  },\\\\r\\\\n  list: {\\\\r\\\\n   type: \\'template\\',\\\\r\\\\n   template: [\\\\r\\\\n    \\'{*if typeof [value] == \\\\\\\\\\'string\\\\\\\\\\'}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{[value]}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{[value]}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*else}\\',\\\\r\\\\n    \\'\\\\t<div id=\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\" class=\\\\\"[theme:menu.base.item.className]\\\\\" a5-item=\\\\\"listItem\\\\\" a5-value=\\\\\"{value}\\\\\" onmouseover=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\" onmouseout=\\\\\"A5.u.element.cls(this,\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\');\\\\\">\\',\\\\r\\\\n    \\'\\\\t<span style=\\\\\"display:inline-block;\\\\\">{html}</span>\\',\\\\r\\\\n    \\'\\\\t</div>\\',\\\\r\\\\n    \\'{*endif}\\'\\\\r\\\\n   ].join(\\'\\')\\\\r\\\\n  }\\\\r\\\\n },\\\\r\\\\n items: {\\\\r\\\\n  listItem: {\\\\r\\\\n   selectable: true,\\\\r\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\r\\\\n   onClick: function(v){\\\\r\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n    pvb.pick(v)\\\\r\\\\n    pvb.hidePicker();\\\\r\\\\n   }\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\r\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onClick: function(v){\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  pvb.pick(v)\\\\r\\\\n  pvb.hidePicker();\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\r\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n onSelect: function() {\\\\r\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\r\\\\n  if(this.date > _drobj.date) {\\\\r\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\r\\\\n  } else {\\\\r\\\\n   _drobj.refresh();\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\r\\\\n parentControl: this.variableName,\\\\r\\\\n theme: \\'{dialog.style}\\',\\\\r\\\\n days: {dialog.object}.datePickerDayNames,\\\\r\\\\n months: {dialog.object}.datePickerMonthNames,\\\\r\\\\n disabledDates: {\\\\r\\\\n  low: function() {\\\\r\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\r\\\\n   if(pvb._pickerDateRangeStart) {\\\\r\\\\n    return pvb._pickerDateRangeStart.date;\\\\r\\\\n   }\\\\r\\\\n   return false;\\\\r\\\\n  }\\\\r\\\\n }\\\\r\\\\n});\\\\r\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\r\\\\n  this.pick(v);\\\\r\\\\n  this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true);\\\\r\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\r\\\\n if(this._pickerShown){\\\\r\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\r\\\\n }\\\\r\\\\n},this,true); },\\\\r\\\\n\\\\t\\\\\"items\\\\\": {\\\\r\\\\n\\\\t\\\\t\\'remove\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed.splice(Number(v),1);\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\tif(this.data._parsed.length == 0 ) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = [];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'add\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(this._fieldMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'filter\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _filterMenu = [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\r\\\\n\\\\t\\\\t\\\\t];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar type = this.data.fields[f].control.type;\\\\r\\\\n\\\\t\\\\t\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\r\\\\n\\\\t\\\\t\\\\tif(exclude.indexOf(type) == -1 ) {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t _filterMenu = _filterMenu.concat(\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t[\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t]\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(_filterMenu);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'switch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = this.data._parsed[Number(v)];\\\\r\\\\n\\\\t\\\\tvar f = this.data.fields[d.field];\\\\r\\\\n\\\\t\\\\tif(f){\\\\r\\\\n\\\\t\\\\t\\\\tvar vals = f.control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(vals){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\telse d.value = vals[0];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'list\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\r\\\\n\\\\t\\\\t\\\\tif(d.constructor == Array) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(this._pickerIndex != v){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.hidePicker();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!ele) return false;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.layout = \\'loading\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._picker.refresh();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(!this._pickerShown){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis.showPicker(ele,\\'list\\',v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\tthis._pickerShown = true;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._suggestGet();\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'date\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDate.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'step\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\tvar d = this.data.fields[f].control.data;\\\\r\\\\n\\\\t\\\\tvar val = this.data._parsed[v].value;\\\\r\\\\n\\\\t\\\\tval = $u.s.toNum(val);\\\\r\\\\n\\\\t\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\r\\\\n\\\\t\\\\telse val += d.step || 1;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\r\\\\n\\\\t\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.data._parsed[v].value = val;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'buttonlist\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar f = this.data._parsed[ia].field;\\\\r\\\\n\\\\t\\\\tvar obj = this.data.fields[f];\\\\r\\\\n\\\\t\\\\tif(obj.control.multiple) { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar v2 = this.data._parsed[ia].value;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\r\\\\n\\\\t\\\\t\\\\tif(v2 == \\'\\') v2 = [];\\\\r\\\\n\\\\t\\\\t\\\\telse v2 = v2.split(\\',\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar vi = v2.indexOf(v)\\\\r\\\\n\\\\t\\\\t\\\\tif(vi == -1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.push(v);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tv2.splice(vi,1)\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tv = v2.join(\\',\\');\\\\r\\\\n\\\\t\\\\t} \\\\r\\\\n\\\\t\\\\tthis.data._parsed[ia].value = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'saveQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\r\\\\n\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Wait\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'runQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tmode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\tlistName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\talert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\tvar query = this.value\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryData = this.value[0];\\\\r\\\\n\\\\t\\\\t\\\\tobj.listName = listName;\\\\r\\\\n\\\\t\\\\t\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar m = []; \\\\r\\\\n\\\\t\\\\t\\\\tfor(var n in this.data.fields) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar flag = this.data.fields[n].control.multiple; \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tif(flag) { m.push(n);}\\\\r\\\\n\\\\t\\\\t\\\\t};\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tobj.allowMultiple = m ;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar searchMode = 1;\\\\r\\\\n\\\\t\\\\t\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar _d = [];\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\r\\\\n\\\\t\\\\t\\\\tif(searchMode == 2) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t_data = _d.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'cancel\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tthis.setLayout(\\'Default\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'loadNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t try{\\\\r\\\\n\\\\t\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t }catch(err){ }\\\\r\\\\n\\\\t\\\\t var queryName = this.__savedQueries[v]\\\\r\\\\n\\\\t\\\\t var data = [];\\\\r\\\\n\\\\t\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\r\\\\n\\\\t\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t data = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'setNamedQuery\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\r\\\\n\\\\t\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'clearSearch\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar mode = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t mode = this.data.searchOptions.mode;\\\\r\\\\n\\\\t\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tvar listName = \\'\\';\\\\r\\\\n\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t listName = this.data.searchOptions.listName;\\\\r\\\\n\\\\t\\\\t}catch(e) { }\\\\r\\\\n\\\\t\\\\tif(listName == \\'\\') {\\\\r\\\\n\\\\t\\\\t alert(\\'Error. List to search not defined.\\');\\\\r\\\\n\\\\t\\\\t} else {\\\\r\\\\n\\\\t\\\\t var query = this.value\\\\r\\\\n\\\\t\\\\t var obj = {};\\\\r\\\\n\\\\t\\\\t this.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t obj.queryData = [];\\\\r\\\\n\\\\t\\\\t obj.listName = listName;\\\\r\\\\n\\\\t\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\r\\\\n\\\\t\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\r\\\\n\\\\t\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\r\\\\n\\\\t\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'save\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar queryDef = this.value[0];\\\\r\\\\n\\\\t\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(queryName == \\'\\') { \\\\r\\\\n\\\\t\\\\t\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\"color:red;\\\\\">You have not specified the query name</span>\\');\\\\r\\\\n\\\\t\\\\t} else { \\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar obj = {};\\\\r\\\\n\\\\t\\\\t\\\\tobj.queryName = queryName \\\\r\\\\n\\\\t\\\\t\\\\tobj.queryDefinition = queryDef \\\\r\\\\n\\\\t\\\\t\\\\tdebugger;\\\\r\\\\n\\\\t\\\\t\\\\tvar uniqueKey = \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\ttry{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\r\\\\n\\\\t\\\\t\\\\t}catch(err){ }\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar data = [];\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\r\\\\n\\\\t\\\\t\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\r\\\\n\\\\t\\\\t\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\r\\\\n\\\\t\\\\t\\\\tdata = data.join(\\'&\\')\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\r\\\\n\\\\t\\\\t\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'andor\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis.data._parsed[ia].andor = v;\\\\r\\\\n\\\\t\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendly\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"drag\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\td.push(\\'This Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Week-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Month-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Week\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 7 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Month\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next 30 days\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Year\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Year-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'This Quarter-to-date\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Last Quarter\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Next Quarter\\');\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t var f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t this._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t this._picker.populate(d);\\\\r\\\\n\\\\t\\\\t this._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t iEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'daterange\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tvar frm = this.data.fields[f].control.format;\\\\r\\\\n\\\\t\\\\t\\\\tif(this._pickerDateRangeStart.format != frm){\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.format = frm;\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tvar td = new Date();\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\r\\\\n\\\\t\\\\t\\\\t\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\r\\\\n\\\\t\\\\t\\\\trange = range.split(\\'..\\');\\\\r\\\\n\\\\t\\\\t\\\\tif(range.length == 1) { \\\\r\\\\n\\\\t\\\\t\\\\t\\\\trange.push(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\r\\\\n\\\\t\\\\t\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\'datefriendlysingle\\' : {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"selectable\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"onClick\\\\\": function(v,ia,i,ele,event) { \\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tvar d = [];\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\td.push(\\'Today\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Yesterday\\');\\\\r\\\\n\\\\t\\\\td.push(\\'Tomorrow\\');\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\tif(this._picker){\\\\r\\\\n\\\\t\\\\t\\\\tvar f = this.data._parsed[v].field;\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.layout = \\'list\\';\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.populate(d);\\\\r\\\\n\\\\t\\\\t\\\\tthis._picker.setValue(\\'\\');\\\\r\\\\n\\\\t\\\\t\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\r\\\\n\\\\t\\\\t\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\r\\\\n\\\\t\\\\t\\\\tiEle.focus();\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\\"wrapper\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"allow\\\\\": false\\\\r\\\\n\\\\t}\\\\r\\\\n}\",\\r\\n\\t\"dataJSON\": \"{\\\\r\\\\n\\\\t\\\\\"fields\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"firstname\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"label\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"control\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"type\\\\\": \\\\\"combolist\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\\"data\\\\\": [\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t{\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"html\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t\\\\t\\\\\"value\\\\\": \\\\\"\\\\\"\\\\r\\\\n\\\\t\\\\t\\\\t\\\\t}]\\\\r\\\\n\\\\t\\\\t\\\\t}\\\\r\\\\n\\\\t\\\\t}\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"buttons\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"add\\\\\": \\\\\"Add new search field...\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"remove\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"filter\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"date\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"list\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"number\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"plus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"minus\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\" />\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"save\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\" />Save query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"load\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\" /> Load query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"run\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\" /> Run query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"menu\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\" />\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"daterangepicker\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"ok\\\\\": \\\\\"&nbsp;OK&nbsp;\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"Cancel\\\\\"\\\\r\\\\n\\\\t\\\\t},\\\\r\\\\n\\\\t\\\\t\\\\\"cancel\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\" /> Cancel\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"clearsearch\\\\\": \\\\\"<img src=\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\" /> Clear search\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringloadquery\\\\\": \\\\\"Specify saved query to load\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringsavequery\\\\\": \\\\\"Specify name for query\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"stringquerynamewatermark\\\\\": \\\\\"Query name\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchOptions\\\\\": {\\\\r\\\\n\\\\t\\\\t\\\\\"displayDebuggingInfo\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"loadQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"saveQuery\\\\\": false,\\\\r\\\\n\\\\t\\\\t\\\\\"placeHolder\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"uniqueKey\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"loadType\\\\\": \\\\\"All\\\\\",\\\\r\\\\n\\\\t\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\"\\\\r\\\\n\\\\t},\\\\r\\\\n\\\\t\\\\\"searchMode\\\\\": 1,\\\\r\\\\n\\\\t\\\\\"listName\\\\\": \\\\\"dummy_list\\\\\",\\\\r\\\\n\\\\t\\\\\"subtype\\\\\": \\\\\"AdvancedListSearch\\\\\",\\\\r\\\\n\\\\t\\\\\"variableName\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\\"settingsJSON\\\\\": \\\\\"{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\": 1,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"inputId\\\\\\\\\\\\\": \\\\\\\\\\\\\"{variablename}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"variableName\\\\\\\\\\\\\": \\\\\\\\\\\\\"{VARIABLENAME}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"theme\\\\\\\\\\\\\": \\\\\\\\\\\\\"{dialog.style}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"autoRefreshOnResize\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"datasource\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"lowLevel\\\\\\\\\\\\\": \\\\\\\\\\\\\"Data\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"type\\\\\\\\\\\\\": \\\\\\\\\\\\\"Static JSON\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"multiple\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"selectionMode\\\\\\\\\\\\\": \\\\\\\\\\\\\"default\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"loopNavigate\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"loopNavigateNullSelection\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowNullSelection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowTextSelection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowNullDeselection\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"autoRefresh\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"allowAnyValue\\\\\\\\\\\\\": true,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"captureFocus\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"scroll\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"parseValue\\\\\\\\\\\\\": function() {this.data._parsed = [];\\\\\\\\r\\\\\\\\nvar val = this.value[0];\\\\\\\\r\\\\\\\\nif(val){\\\\\\\\r\\\\\\\\n if(val != \\'\\') {\\\\\\\\r\\\\\\\\n  try {\\\\\\\\r\\\\\\\\n   var obj = JSON.parse(val);\\\\\\\\r\\\\\\\\n   this.data._parsed = obj;\\\\\\\\r\\\\\\\\n  } catch(err){\\\\\\\\r\\\\\\\\n   console.log(\\'ERROR: query builder \\\\\\\\\\\\\"\\'+this.variableName+\\'\\\\\\\\\\\\\" could not parse value.\\');\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis.refresh();},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"addItem\\\\\\\\\\\\\": function(v) {var f = this.data.fields[v];\\\\\\\\r\\\\\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\\\\\r\\\\\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\\\\\r\\\\\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\\\\\r\\\\\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis.data._parsed.push(d);\\\\\\\\r\\\\\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"showPicker\\\\\\\\\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\\\\\r\\\\\\\\n this._pickerVBEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = \\'300px\\';\\\\\\\\r\\\\\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = \\'\\';\\\\\\\\r\\\\\\\\n} else {\\\\\\\\r\\\\\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis._pickerEle.style.display = \\'\\';\\\\\\\\r\\\\\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\\\\\r\\\\\\\\nsetTimeout(function(){\\\\\\\\r\\\\\\\\n this._pickerShown = true;\\\\\\\\r\\\\\\\\n}.bind(this),0);\\\\\\\\r\\\\\\\\nthis._pickerType = type;\\\\\\\\r\\\\\\\\nthis._pickerIndex = index;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"hidePicker\\\\\\\\\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\\\\\r\\\\\\\\nthis._pickerShown = false;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"pick\\\\\\\\\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\\\\\r\\\\\\\\n this.addItem(v);\\\\\\\\r\\\\\\\\n} else if(this._pickerType == \\'filter\\'){\\\\\\\\r\\\\\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\\\\\r\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n} else{\\\\\\\\r\\\\\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\\\\\r\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"suggest\\\\\\\\\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\\\\\r\\\\\\\\n this.hidePicker();\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\\\\\r\\\\\\\\nif(!ele) return false;\\\\\\\\r\\\\\\\\nif(data){\\\\\\\\r\\\\\\\\n if(data.length == 0){\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n } else{\\\\\\\\r\\\\\\\\n  this._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n  this._picker.populate(data);\\\\\\\\r\\\\\\\\n  this._picker.setValue(ele.value);\\\\\\\\r\\\\\\\\n  try{\\\\\\\\r\\\\\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\\\\\r\\\\\\\\n   if(f.data.cacheData) f.data = data;\\\\\\\\r\\\\\\\\n  }catch(e) { };\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n} else{\\\\\\\\r\\\\\\\\n this._picker.layout = \\'loading\\';\\\\\\\\r\\\\\\\\n this._picker.refresh();\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nif(!this._pickerShown){\\\\\\\\r\\\\\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_suggestGet\\\\\\\\\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\\\\\r\\\\\\\\nif(ci._pickerShown){\\\\\\\\r\\\\\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\\\\\r\\\\\\\\n if(ele){\\\\\\\\r\\\\\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\\\\\r\\\\\\\\n  if(f){\\\\\\\\r\\\\\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\\\\\r\\\\\\\\n    if(f.control.data.constructor == Array) {\\\\\\\\r\\\\\\\\n     var _d = f.control.data;\\\\\\\\r\\\\\\\\n     var val = ele.value.toLowerCase();\\\\\\\\r\\\\\\\\n     var data = [];\\\\\\\\r\\\\\\\\n     for(var i = 0; i < _d.length; i++) {\\\\\\\\r\\\\\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\\\\\r\\\\\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n     ci._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n     ci._picker.populate(data);\\\\\\\\r\\\\\\\\n     return\\\\\\\\r\\\\\\\\n    } else {\\\\\\\\r\\\\\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\\\\\r\\\\\\\\n      var val = ele.value;\\\\\\\\r\\\\\\\\n      var o = {};\\\\\\\\r\\\\\\\\n      var data = [];\\\\\\\\r\\\\\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\r\\\\\\\\n      o.searchType = f.control.data.searchType;\\\\\\\\r\\\\\\\\n      o.staticData = f.control.data.staticchoices ;\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\r\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\r\\\\\\\\n      data = data.join(\\'&\\');\\\\\\\\r\\\\\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\r\\\\\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\r\\\\\\\\n      return;\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   var val = ele.value;\\\\\\\\r\\\\\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\\\\\r\\\\\\\\n   var data = [];\\\\\\\\r\\\\\\\\n   var o = {};\\\\\\\\r\\\\\\\\n   o.type = f.control.data.type;\\\\\\\\r\\\\\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\r\\\\\\\\no.searchType = f.control.data.searchType;\\\\\\\\r\\\\\\\\n   o.connectionString = f.control.data.connectionString;\\\\\\\\r\\\\\\\\n   o.searchField = f.control.data.field;\\\\\\\\r\\\\\\\\n   o.searchTable = f.control.data.table;\\\\\\\\r\\\\\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\\\\\r\\\\\\\\n    o.searchFieldStored = \\'\\';\\\\\\\\r\\\\\\\\n   } else {\\\\\\\\r\\\\\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\r\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\r\\\\\\\\n   data = data.join(\\'&\\');\\\\\\\\r\\\\\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\r\\\\\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"getQueryNames\\\\\\\\\\\\\": function(mode) {var data = this.__savedQueries;\\\\\\\\r\\\\\\\\nvar html = [\\'<div class=\\\\\\\\\\\\\"[theme:listBox.base.className]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"max-height: 300px; overflow:auto;\\\\\\\\\\\\\">\\'];\\\\\\\\r\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\r\\\\\\\\n html.push(\\'<div a5-item=\\\\\\\\\\\\\"\\'+mode+\\'NamedQuery\\\\\\\\\\\\\"  a5-value=\\\\\\\\\\\\\"\\'+i+\\'\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:listBox.base.item.className]\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"$acn(this,\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\"  onmouseout=\\\\\\\\\\\\\"$rcn(this,\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\nvar _html = \\'\\';\\\\\\\\r\\\\\\\\nif(data.length > 0) {\\\\\\\\r\\\\\\\\n _html = html.join(\\'\\');\\\\\\\\r\\\\\\\\n} else {\\\\\\\\r\\\\\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\\\\\r\\\\\\\\n  _html = \\'There are no Saved Queries\\';\\\\\\\\r\\\\\\\\n } else {\\\\\\\\r\\\\\\\\n  _html = \\'\\';\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nreturn _html;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_fixButtons\\\\\\\\\\\\\": function(data) {var res = [];\\\\\\\\r\\\\\\\\nvar addHTML = \\'<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\';\\\\\\\\r\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\r\\\\\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nreturn res;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"layout\\\\\\\\\\\\\": \\\\\\\\\\\\\"Default\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"layouts\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Default\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div class=\\\\\\\\\\\\\"queryBuilder\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div class=\\\\\\\\\\\\\"queryBuilderList\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{_parsed}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div><label class=\\\\\\\\\\\\\"[theme:ux.base.labelClassName]\\\\\\\\\\\\\">{[root].fields[field].label}</label></div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'}>>,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"switch\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'combolist\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\'}readonly=\\\\\\\\\\\\\"readonly\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"list\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\"{*endif} class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\"true\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"list\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"daterange\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"datefriendly\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'datepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"date\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"datefriendlysingle\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'step\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"text-align: center;\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"step:-\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"step:+\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'buttonlist\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.multiple}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\'),\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*else}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\'suggest\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\"true\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*else}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t<input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\" value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\" />\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', style: \\\\\\\\\\\\\\\\\\'white-space:nowrap;\\\\\\\\\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\\\' + op},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"filter\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"remove\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"white-space:nowrap;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\',button: {style: \\\\\\\\\\\\\\\\\\'width: 60px;\\\\\\\\\\\\\\\\\\'}},[{html: \\\\\\\\\\\\\\\\\\'AND<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\'.and.\\\\\\\\\\\\\\\\\\'},{html: \\\\\\\\\\\\\\\\\\'OR<div class=\\\\\\\\\\\\\"icon\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\'.or.\\\\\\\\\\\\\\\\\\'}],andor,\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"andor:\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{/_parsed}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\">{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.add},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"add\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.load},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*if _parsed.length > 0}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.run},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"runQuery\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"clearSearch\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{*endif}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Wait\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'Wait....\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Load\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div style=\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\\\\\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\'load\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'Save\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttype: \\'template\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttemplate: [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'<div style=\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY\\\\\\\\\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t<div id=\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"margin-top:10px;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div><input id=\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"width:100%\\\\\\\\\\\\\" placeholder=\\\\\\\\\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\\\\\\\\\" /></div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\'set\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<br>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t<div style=\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"save\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'</div>\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\',\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\'\\'\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t].join(\\'\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onBeforeDraw\\\\\\\\\\\\\": function(html) { \\\\\\\\r\\\\\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\tthis.data._parsed = [];\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onBeforePopulate\\\\\\\\\\\\\": function(data) { \\\\\\\\r\\\\\\\\nvar ld = [];\\\\\\\\r\\\\\\\\nif(data.fields){\\\\\\\\r\\\\\\\\n\\\\\\\\tfor(var f in data.fields){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tld.push({value: f, html: data.fields[f].label});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t}\\\\\\\\r\\\\\\\\n}\\\\\\\\r\\\\\\\\nthis._fieldMenu = ld;},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"onChange\\\\\\\\\\\\\": function(v) { \\\\\\\\r\\\\\\\\nif(!this._stopRepaint){\\\\\\\\r\\\\\\\\n\\\\\\\\tthis.parseValue();\\\\\\\\r\\\\\\\\n}},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"_onInitialize\\\\\\\\\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\\\\\r\\\\\\\\nthis.parseValue();\\\\\\\\r\\\\\\\\nvar cEle = $(this.contId);\\\\\\\\r\\\\\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\\\\\r\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\r\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\r\\\\\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\\\\\r\\\\\\\\n  if(watch){\\\\\\\\r\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\r\\\\\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\\\\\r\\\\\\\\n   if(f){\\\\\\\\r\\\\\\\\n    if(f.control.type == \\'suggest\\' ){\\\\\\\\r\\\\\\\\n     var len = ele.value.length;\\\\\\\\r\\\\\\\\n     var min = 3;\\\\\\\\r\\\\\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\\\\\r\\\\\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\\\\\r\\\\\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n    var keyCode = e.charCode || e.keyCode;\\\\\\\\r\\\\\\\\n    if(ci._pickerShown){\\\\\\\\r\\\\\\\\n     if(keyCode == 13){\\\\\\\\r\\\\\\\\n      if(ci._picker.value.length > 0){\\\\\\\\r\\\\\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     } else if(keyCode == 38){\\\\\\\\r\\\\\\\\n      ci._picker.navigate(\\'prev\\');\\\\\\\\r\\\\\\\\n     } else if(keyCode == 40){\\\\\\\\r\\\\\\\\n      ci._picker.navigate(\\'next\\');\\\\\\\\r\\\\\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\\\\\r\\\\\\\\n      if(f.control.data.constructor != Array ) {\\\\\\\\r\\\\\\\\n       clearTimeout(ci._suggestTO);\\\\\\\\r\\\\\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\\\\\r\\\\\\\\n      } else {\\\\\\\\r\\\\\\\\n       ci._suggestGet();\\\\\\\\r\\\\\\\\n      }\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\\\\\r\\\\\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\\\\\r\\\\\\\\n      ci.items.list.onClick.call(ci,indx)\\\\\\\\r\\\\\\\\n     }\\\\\\\\r\\\\\\\\n    }\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this);\\\\\\\\r\\\\\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\\\\\r\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\r\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\r\\\\\\\\n  var tag = ele.tagName || \\'\\';\\\\\\\\r\\\\\\\\n  tag = tag.toLowerCase();\\\\\\\\r\\\\\\\\n  if(tag == \\'input\\'){\\\\\\\\r\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\r\\\\\\\\n   if(typeof indx == \\'number\\'){\\\\\\\\r\\\\\\\\n    ci._stopRepaint = true;\\\\\\\\r\\\\\\\\n    ci.data._parsed[indx].value = ele.value;\\\\\\\\r\\\\\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\\\\\r\\\\\\\\n    ci._stopRepaint = false;\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this);\\\\\\\\r\\\\\\\\nvar pEle = document.createElement(\\'div\\');\\\\\\\\r\\\\\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\\\\\r\\\\\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\\\\\r\\\\\\\\npEle.id = this.contId+\\'.picker\\';\\\\\\\\r\\\\\\\\nvar html = [];\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"max-height: 300px; overflow: auto;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdate\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display: none;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\\\\\\\\\">\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display:inline-block;margin-right:2px;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\\\\\\\\\" style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\"></div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'<div style=\\\\\\\\\\\\\"text-align:center; margin-top:2px;\\\\\\\\\\\\\">\\');\\\\\\\\r\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\\\\\r\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\r\\\\\\\\npEle.innerHTML = html.join(\\'\\');\\\\\\\\r\\\\\\\\ncEle.parentNode.appendChild(pEle);\\\\\\\\r\\\\\\\\nthis._pickerEle = pEle;\\\\\\\\r\\\\\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n captureFocus: false,\\\\\\\\r\\\\\\\\n loopNavigate: true,\\\\\\\\r\\\\\\\\n loopNavigateNullSelection: true,\\\\\\\\r\\\\\\\\n allowNullSelection: true,\\\\\\\\r\\\\\\\\n allowAnyValue: false,\\\\\\\\r\\\\\\\\n layout: \\'list\\',\\\\\\\\r\\\\\\\\n layouts: {\\\\\\\\r\\\\\\\\n  loading: {\\\\\\\\r\\\\\\\\n   type: \\'static\\',\\\\\\\\r\\\\\\\\n   html: \\'<div class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\">Loading...</div>\\'\\\\\\\\r\\\\\\\\n  },\\\\\\\\r\\\\\\\\n  list: {\\\\\\\\r\\\\\\\\n   type: \\'template\\',\\\\\\\\r\\\\\\\\n   template: [\\\\\\\\r\\\\\\\\n    \\'{*if typeof [value] == \\\\\\\\\\\\\\\\\\'string\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{[value]}\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<span style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\">{[value]}</span>\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n    \\'{*else}\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<div id=\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\" class=\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\">\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t<span style=\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\">{html}</span>\\',\\\\\\\\r\\\\\\\\n    \\'\\\\\\\\t</div>\\',\\\\\\\\r\\\\\\\\n    \\'{*endif}\\'\\\\\\\\r\\\\\\\\n   ].join(\\'\\')\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n },\\\\\\\\r\\\\\\\\n items: {\\\\\\\\r\\\\\\\\n  listItem: {\\\\\\\\r\\\\\\\\n   selectable: true,\\\\\\\\r\\\\\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\\\\\r\\\\\\\\n   onClick: function(v){\\\\\\\\r\\\\\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n    pvb.pick(v)\\\\\\\\r\\\\\\\\n    pvb.hidePicker();\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\\\\\r\\\\\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n onClick: function(v){\\\\\\\\r\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n  pvb.pick(v)\\\\\\\\r\\\\\\\\n  pvb.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\\\\\r\\\\\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n onSelect: function() {\\\\\\\\r\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\\\\\r\\\\\\\\n  if(this.date > _drobj.date) {\\\\\\\\r\\\\\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\\\\\r\\\\\\\\n  } else {\\\\\\\\r\\\\\\\\n   _drobj.refresh();\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\\\\\r\\\\\\\\n parentControl: this.variableName,\\\\\\\\r\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\r\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\r\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\r\\\\\\\\n disabledDates: {\\\\\\\\r\\\\\\\\n  low: function() {\\\\\\\\r\\\\\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\r\\\\\\\\n   if(pvb._pickerDateRangeStart) {\\\\\\\\r\\\\\\\\n    return pvb._pickerDateRangeStart.date;\\\\\\\\r\\\\\\\\n   }\\\\\\\\r\\\\\\\\n   return false;\\\\\\\\r\\\\\\\\n  }\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n});\\\\\\\\r\\\\\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\\\\\r\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true);\\\\\\\\r\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\\\\\r\\\\\\\\n  this.pick(v);\\\\\\\\r\\\\\\\\n  this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true);\\\\\\\\r\\\\\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\\\\\r\\\\\\\\n if(this._pickerShown){\\\\\\\\r\\\\\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\\\\\r\\\\\\\\n }\\\\\\\\r\\\\\\\\n},this,true); },\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"items\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'remove\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed.splice(Number(v),1);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this.data._parsed.length == 0 ) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar listName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryData = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'add\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"drag\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(this._fieldMenu);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'filter\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _filterMenu = [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar type = this.data.fields[f].control.type;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(exclude.indexOf(type) == -1 ) {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t _filterMenu = _filterMenu.concat(\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t[\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(_filterMenu);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'switch\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = this.data._parsed[Number(v)];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data.fields[d.field];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(f){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar vals = f.control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(vals){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\telse d.value = vals[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'list\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(d.constructor == Array) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tiEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerIndex != v){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.hidePicker();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(!ele) return false;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'loading\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.refresh();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(!this._pickerShown){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'list\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerShown = true;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._suggestGet();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'date\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerDate.format != frm){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar td = new Date();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'step\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar val = this.data._parsed[v].value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tval = $u.s.toNum(val);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\telse val += d.step || 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed[v].value = val;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'buttonlist\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[ia].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar obj = this.data.fields[f];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(obj.control.multiple) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar v2 = this.data._parsed[ia].value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(v2 == \\'\\') v2 = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\telse v2 = v2.split(\\',\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar vi = v2.indexOf(v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(vi == -1) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tv2.push(v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tv2.splice(vi,1)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tv = v2.join(\\',\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.data._parsed[ia].value = v;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'loadQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'saveQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'runQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar listName = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tlistName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(listName == \\'\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\talert(\\'Error. List to search not defined.\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar query = this.value\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryData = this.value[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar m = []; \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tfor(var n in this.data.fields) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar flag = this.data.fields[n].control.multiple; \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tif(flag) { m.push(n);}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.allowMultiple = m ;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar searchMode = 1;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar _d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(searchMode == 2) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t_data = _d.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'cancel\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setLayout(\\'Default\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'loadNamedQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t try{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t }catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var queryName = this.__savedQueries[v]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var data = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t data = data.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'setNamedQuery\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'clearSearch\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar mode = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t mode = this.data.searchOptions.mode;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar listName = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t listName = this.data.searchOptions.listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}catch(e) { }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(listName == \\'\\') {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t alert(\\'Error. List to search not defined.\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var query = this.value\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.queryData = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.listName = listName;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'save\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar queryDef = this.value[0];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(queryName == \\'\\') { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\\\\\\\\\"color:red;\\\\\\\\\\\\\">You have not specified the query name</span>\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t} else { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar obj = {};\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryName = queryName \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tobj.queryDefinition = queryDef \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdebugger;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\ttry{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}catch(err){ }\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar data = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\\\\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tdata = data.join(\\'&\\')\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'andor\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.data._parsed[ia].andor = v;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'datefriendly\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"drag\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Week-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next 7 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Month-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Week\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last 7 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last 30 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Month\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next 30 days\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Year\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Year-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'This Quarter-to-date\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Last Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Next Quarter\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this._picker.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t iEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'daterange\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(this._pickerDateRangeStart.format != frm){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd.format = frm;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tvar td = new Date();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\trange = range.split(\\'..\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tif(range.length == 1) { \\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\trange.push(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\'datefriendlysingle\\' : {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tvar d = [];\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Today\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Yesterday\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\td.push(\\'Tomorrow\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\tif(this._picker){\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.populate(d);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis._picker.setValue(\\'\\');\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\tiEle.focus();\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"wrapper\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"allow\\\\\\\\\\\\\": false\\\\\\\\r\\\\\\\\n\\\\\\\\t}\\\\\\\\r\\\\\\\\n}\\\\\",\\\\r\\\\n\\\\t\\\\\"dataJSON\\\\\": \\\\\"{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"fields\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"firstname\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"label\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"control\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"type\\\\\\\\\\\\\": \\\\\\\\\\\\\"combolist\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"data\\\\\\\\\\\\\": [\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t{\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"html\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"value\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\t}]\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t}\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"buttons\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"add\\\\\\\\\\\\\": \\\\\\\\\\\\\"Add new search field...\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"remove\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"filter\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"date\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"list\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"number\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"plus\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"minus\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"save\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />Save query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"load\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Load query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"run\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Run query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"menu\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"daterangepicker\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"ok\\\\\\\\\\\\\": \\\\\\\\\\\\\"&nbsp;OK&nbsp;\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\": \\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Cancel\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"clearsearch\\\\\\\\\\\\\": \\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Clear search\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringloadquery\\\\\\\\\\\\\": \\\\\\\\\\\\\"Specify saved query to load\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringsavequery\\\\\\\\\\\\\": \\\\\\\\\\\\\"Specify name for query\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"stringquerynamewatermark\\\\\\\\\\\\\": \\\\\\\\\\\\\"Query name\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchOptions\\\\\\\\\\\\\": {\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"displayDebuggingInfo\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\": false,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"placeHolder\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"uniqueKey\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"loadType\\\\\\\\\\\\\": \\\\\\\\\\\\\"All\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\\t},\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\": 1,\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"listName\\\\\\\\\\\\\": \\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"subtype\\\\\\\\\\\\\": \\\\\\\\\\\\\"AdvancedListSearch\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"variableName\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"settingsJSON\\\\\\\\\\\\\": \\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"listName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": 1,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"inputId\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{variablename}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"variableName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{VARIABLENAME}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"theme\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"autoRefreshOnResize\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"datasource\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"lowLevel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Static JSON\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"multiple\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectionMode\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"default\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"loopNavigate\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"loopNavigateNullSelection\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allowNullSelection\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allowTextSelection\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allowNullDeselection\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"autoRefresh\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allowAnyValue\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"captureFocus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"scroll\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"parseValue\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function() {this.data._parsed = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar val = this.value[0];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(val){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(val != \\'\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  try {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var obj = JSON.parse(val);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   this.data._parsed = obj;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  } catch(err){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   console.log(\\'ERROR: query builder \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.variableName+\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" could not parse value.\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis.refresh();},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"addItem\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v) {var f = this.data.fields[v];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar d = {field: v, value: \\'\\', op: \\'\\', andor: \\'.and.\\'};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(typeof f.defaults != \\'undefined\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(typeof f.defaults.value != \\'undefined\\') d.value = f.defaults.value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(typeof f.defaults.op != \\'undefined\\') d.op = f.defaults.op;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis.data._parsed.push(d);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis.setValue(JSON.stringify(this.data._parsed));},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"showPicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(ele,type,index) {if(type == \\'date\\' && this._pickerDateEle.style.display == \\'none\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateEle.style.display = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else if(type == \\'daterange\\' && this._pickerDateRangeEle.style.display == \\'none\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerVBEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateRangeEle.style.display = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else if(type != \\'date\\' && type != \\'daterange\\' && this._pickerVBEle.style.display == \\'none\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerVBEle.style.display = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerDateRangeEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(type == \\'add\\' || type == \\'filter\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerEle.style.width = \\'300px\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else if(type == \\'date\\' || type == \\'time\\' || type == \\'datefriendly\\' || type == \\'daterange\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerEle.style.width = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerEle.style.width = ele.offsetWidth + \\'px\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerEle.style.display = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nA5.u.element.position(this._pickerEle,[\\'below left\\',\\'above left\\'],ele);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nsetTimeout(function(){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._pickerShown = true;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}.bind(this),0);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerType = type;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerIndex = index;},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"hidePicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function() {this._pickerEle.style.display = \\'none\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerShown = false;},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"pick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v) {if(this._pickerType == \\'add\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.addItem(v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else if(this._pickerType == \\'filter\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.data._parsed[this._pickerIndex].op = v;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.data._parsed[this._pickerIndex].value = v;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"suggest\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(index,data) {if(this._pickerIndex != index){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+index);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(!ele) return false;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(data){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(data.length == 0){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n } else{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this._picker.populate(data);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this._picker.setValue(ele.value);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  try{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var f = this.data.fields[this.data._parsed[index].field].control;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(f.data.cacheData) f.data = data;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }catch(e) { };\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._picker.layout = \\'loading\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this._picker.refresh();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(!this._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n this.showPicker(ele,\\'suggest\\',index);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_suggestGet\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function() {var ci = {dialog.object}.getControl(\\'{VARIABLENAME}\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(ci._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n var ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+ci._pickerIndex);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(ele){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var f = ci.data.fields[ci.data._parsed[ci._pickerIndex].field];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  if(f){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(f.control.type.toLowerCase() == \\'suggest\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    if(f.control.data.constructor == Array) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     var _d = f.control.data;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     var val = ele.value.toLowerCase();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     var data = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     for(var i = 0; i < _d.length; i++) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      if(_d[i].toLowerCase().indexOf(val) != -1) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n       data.push({html: A5.u.html.highlight(_d[i],val), value: _d[i]})\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     ci._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     ci._picker.populate(data);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     return\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    } else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     if(f.control.data.type.toLowerCase() == \\'static\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      var val = ele.value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      var o = {};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      var data = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      o.type = \\'suggest\\';if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      o.searchType = f.control.data.searchType;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      o.staticData = f.control.data.staticchoices ;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      data = data.join(\\'&\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      return;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var val = ele.value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(this._pickerType == \\'list\\')  val = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var data = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var o = {};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   o.type = f.control.data.type;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(f.control.data.filter) o.filter = f.control.data.filter;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\no.searchType = f.control.data.searchType;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   o.connectionString = f.control.data.connectionString;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   o.searchField = f.control.data.field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   o.searchTable = f.control.data.table;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(typeof f.control.data.fieldstoredvalue == \\'undefined\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    o.searchFieldStored = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   } else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    o.searchFieldStored = f.control.data.fieldstoredvalue\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__jsonSettings\\',JSON.stringify(o,\\'\\',\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\t\\')));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__value\\',val));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__varName\\',ci.variableName));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   data.push(A5.ajax.buildURLParam(\\'__index\\',ci._pickerIndex));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   data = data.join(\\'&\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var fnName = \\'a5Helper_advancedSearchAutoSuggestValues\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   {dialog.object}.ajaxCallback(\\'\\',\\'\\',fnName,\\'\\',data);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"getQueryNames\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(mode) {var data = this.__savedQueries;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar html = [\\'<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:listBox.base.className]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"max-height: 300px; overflow:auto;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\'];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n html.push(\\'<div a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+mode+\\'NamedQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+i+\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:listBox.base.item.className]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"$acn(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  onmouseout=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"$rcn(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'[theme:listBox.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"  >\\' + data[i] + \\'</div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar _html = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(data.length > 0) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n _html = html.join(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n} else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(mode.toLowerCase() == \\'load\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  _html = \\'There are no Saved Queries\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n } else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  _html = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nreturn _html;},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_fixButtons\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(data) {var res = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar addHTML = \\'<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">&nbsp;</div>\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nfor(var i = 0; i < data.length; i++) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n res.push({\\'html\\': data[i].html + addHTML , \\'value\\' : data[i].value});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nreturn res;},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"layout\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Default\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"layouts\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'Default\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttype: \\'template\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttemplate: [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"queryBuilder\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"queryBuilderList\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t{_parsed}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div><label class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:ux.base.labelClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">{[root].fields[field].label}</label></div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0; width: 100px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.switches.html(([root].fields[field].control.data[0] == value),<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}>>,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.SWITCH\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"switch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' || [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'combolist\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" {*if [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}readonly=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"readonly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{*endif} class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LIST\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.list},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"daterange\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLY\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"datefriendly\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'datepicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.date},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.DATEFRIENDLYSINGLE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.menu},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"datefriendlysingle\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'step\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align: center;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.MINUS\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.minus},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"step:-\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.PLUS\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.number.plus},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"step:+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'buttonlist\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"vertical-align: top; flex-grow: 0;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [root].fields[field].control.multiple}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value.split(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'),\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*else}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'},[scope]._fixButtons([root].fields[field].control.data),value,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.BUTTONLIST\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"buttonlist:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*elseif [root].fields[field].control.type == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'suggest\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-key-events=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*else}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.base.className] queryBuilderInput\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-query-index=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'switch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' && [root].fields[field].control.type != \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'daterangepicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.FILTER\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', style: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'white-space:nowrap;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.filter + \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' + op},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"filter\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"vertical-align:middle;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.REMOVE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: [root].buttons.remove},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"remove\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"white-space:nowrap;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [count] < [root]._parsed.length-1}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttonLists.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count],<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',button: {style: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'width: 60px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}},[{html: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'AND<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.and.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'},{html: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'OR<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width:0px; display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">&nbsp;</div>\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', value: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.or.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}],andor,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.ANDOR\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'.{index}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"andor:\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+[count]+\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'>>)}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t{/_parsed}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.ADD\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.add},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"add\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align: left;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [root].searchOptions.loadQuery}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.LOAD\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.load},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if _parsed.length > 0}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*if [root].searchOptions.saveQuery && _parsed.length > 0}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.RUN\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.run},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"runQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CLEARSEARCH\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.clearsearch},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"clearSearch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{*endif}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'</div>\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t].join(\\'\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'Wait\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttype: \\'template\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttemplate: [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'Wait....\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t].join(\\'\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'Load\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttype: \\'template\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttemplate: [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.LOADSAVEDQUERIES\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">{[root].buttons.stringloadquery}</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<br>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'load\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<br>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCEL\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t].join(\\'\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'Save\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttype: \\'template\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttemplate: [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width: 300px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" >{[root].buttons.stringsavequery}</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.SAVEQUERY2\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"margin-top:10px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div><input id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"width:100%\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" placeholder=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[root].buttons.stringquerynamewatermark}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:edit.primary.className|{dialog.style}Edit]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /></div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<br>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{@[scope].getQueryNames(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'set\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<br>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align:right;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.SAVE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.save},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"save\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{A5.buttons.html(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.componentName}.{VARIABLENAME}.CANCELSAVE\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\',<escape<{theme: \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'{dialog.style}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\', html: buttons.cancel},\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\' a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\')>>}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t].join(\\'\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onBeforeDraw\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(html) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(typeof this.data._parsed == \\'undefined\\') { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tthis.data._parsed = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onBeforePopulate\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(data) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar ld = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(data.fields){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tfor(var f in data.fields){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tld.push({value: f, html: data.fields[f].label});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof data.fields[f].control == \\'undefined\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata.fields[f].control = {type: \\'default\\'};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._fieldMenu = ld;},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onChange\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nif(!this._stopRepaint){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\tthis.parseValue();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"_onInitialize\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function() { $acn(this.contId,\\'{dialog.ComponentName}_\\' + this.variableName); this._stopRepaint = false;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis.parseValue();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar cEle = $(this.contId);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n$e.add(cEle,\\'keyup\\',function(e,ci){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var watch = A5.u.element.attr(ele,\\'a5-key-events\\',\\'?=true\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  if(watch){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var f = ci.data.fields[ci.data._parsed[indx].field];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(f){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    if(f.control.type == \\'suggest\\' ){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     var len = ele.value.length;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     var min = 3;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     if(typeof f.control.minimum == \\'number\\') min = f.control.minimum;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     if(!ci._pickerShown && len >= min) ci.suggest(indx,false);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     else if(ci._pickerShown && len < min) ci.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    var keyCode = e.charCode || e.keyCode;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    if(ci._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     if(keyCode == 13){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      if(ci._picker.value.length > 0){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n       ci._picker.items.listItem.onClick.call(ci._picker,ci._picker.value[0]);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     } else if(keyCode == 38){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      ci._picker.navigate(\\'prev\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     } else if(keyCode == 40){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      ci._picker.navigate(\\'next\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     } else if(keyCode != 9 && f.control.type == \\'suggest\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      if(f.control.data.constructor != Array ) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n       clearTimeout(ci._suggestTO);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n       ci._suggestTO = setTimeout(ci._suggestGet,300);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      } else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n       ci._suggestGet();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    } else if(f.control.type == \\'list\\' || f.control.type == \\'combolist\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     if(keyCode == 40 && e.ctrlKey){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n      ci.items.list.onClick.call(ci,indx)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n     }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n},this);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n$e.add(cEle,\\'focusout\\',function(e,ci){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(ci.layout == \\'Default\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var ele = e.target || e.srcElement;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var tag = ele.tagName || \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  tag = tag.toLowerCase();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  if(tag == \\'input\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var indx = Number(A5.u.element.attr(ele,\\'a5-query-index\\'));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(typeof indx == \\'number\\'){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    ci._stopRepaint = true;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    ci.data._parsed[indx].value = ele.value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    ci.setValue(JSON.stringify(ci.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    ci._stopRepaint = false;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n},this);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar pEle = document.createElement(\\'div\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nA5.u.element.style(pEle,\\'position: absolute; display: none;z-index: 1000;\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\npEle.className = \\'[theme:menu.base.className]\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\npEle.id = this.contId+\\'.picker\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nvar html = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"max-height: 300px; overflow: auto;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"></div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdate\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"display: none;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"></div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterange\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.innerClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"white-space:nowrap; padding: 2px; display: none;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangestart\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"display:inline-block;margin-right:2px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"></div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickerdaterangeend\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"></div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'<div style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"text-align:center; margin-top:2px;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangeok\\',{theme: this.theme, html: \\'&nbsp;OK&nbsp;\\'}));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(A5.buttons.html(this.contId+\\'.pickerdaterangecancel\\',{theme: this.theme, html: \\'Cancel\\'}));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nhtml.push(\\'</div>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\npEle.innerHTML = html.join(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\ncEle.parentNode.appendChild(pEle);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerEle = pEle;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._picker = new A5.ViewBox(this.contId+\\'.pickervb\\',{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n parentControl: this.variableName,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n captureFocus: false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n loopNavigate: true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n loopNavigateNullSelection: true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n allowNullSelection: true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n allowAnyValue: false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n layout: \\'list\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n layouts: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  loading: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   type: \\'static\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   html: \\'<div class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Loading...</div>\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  },\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  list: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   type: \\'template\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   template: [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'{*if typeof [value] == \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'string\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{[value]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t<span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">{[value]}</span>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'{*else}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t<div id=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\'+this.contId+\\'.pickervb.{[count]}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" class=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"[theme:menu.base.item.className]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-item=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"listItem\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" a5-value=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"{value}\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" onmouseover=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'+=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" onmouseout=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"A5.u.element.cls(this,\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'-=[theme:menu.base.item.hoverClassName]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\');\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t<span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"display:inline-block;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">{html}</span>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'\\\\\\\\\\\\\\\\t</div>\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    \\'{*endif}\\'\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   ].join(\\'\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n },\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n items: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  listItem: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   selectable: true,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   selectedClassName: \\'[theme:menu.base.item.selectedClassName]\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   onClick: function(v){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    pvb.pick(v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    pvb.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerVBEle = $(this.contId+\\'.pickervb\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerDate = new A5.DatePicker(this.contId+\\'.pickerdate\\',{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n parentControl: this.variableName,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n onClick: function(v){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  pvb.pick(v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  pvb.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerDateEle = $(this.contId+\\'.pickerdate\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerDateRangeStart = new A5.DatePicker(this.contId+\\'.pickerdaterangestart\\',{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n parentControl: this.variableName,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n onSelect: function() {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var _drobj = pvb._pickerDateRangeEnd;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  if(this.date > _drobj.date) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   _drobj.setValue(this.date.toFormat(this._parsedFormat))\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  } else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   _drobj.refresh();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerDateRangeEnd = new A5.DatePicker(this.contId+\\'.pickerdaterangeend\\',{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n parentControl: this.variableName,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n theme: \\'{dialog.style}\\',\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n days: {dialog.object}.datePickerDayNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n months: {dialog.object}.datePickerMonthNames,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n disabledDates: {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  low: function() {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   var pvb = {dialog.object}.getControl(this.parentControl);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   if(pvb._pickerDateRangeStart) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n    return pvb._pickerDateRangeStart.date;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n   return false;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\nthis._pickerDateRangeEle = $(this.contId+\\'.pickerdaterange\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangecancel\\',\\'click\\',function(){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(this._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n},this,true);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n$e.add(this.contId+\\'.pickerdaterangeok\\',\\'click\\',function(){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(this._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  var v = this._pickerDateRangeStart.date.toFormat(this._pickerDateRangeStart._parsedFormat) + \\'..\\' + this._pickerDateRangeEnd.date.toFormat(this._pickerDateRangeStart._parsedFormat);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this.pick(v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  this.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n},this,true);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n$e.add(document.documentElement,\\'mouseup\\',function(e){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n if(this._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n  if(!this._pickerEle.contains(e.target)) this.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n},this,true); },\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"items\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'remove\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar mode = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(e) { }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.data._parsed.splice(Number(v),1);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this.data._parsed.length == 0 ) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar listName = this.data.searchOptions.listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar obj = {};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.queryData = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.listName = listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'add\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"drag\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar tid = ele.id;if(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) {var obj = {dialog.object}.getControl(this.listName);  obj._populateAdvancedSearch(this.listName, this.variableName) };\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.populate(this._fieldMenu);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker($(tid),\\'add\\',-1);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'filter\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar _filterMenu = [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Equals\\', value: \\'=\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Does Not Equal\\', value: \\'<>\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Less Than\\', value: \\'<\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Less Than or Equal\\', value: \\'<=\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Greater Than\\', value: \\'>\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Greater Than or Equal\\', value: \\'>=\\'}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar type = this.data.fields[f].control.type;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar exclude = [\\'datepicker\\',\\'datepickerrange\\',\\'step\\'];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(exclude.indexOf(type) == -1 ) {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t _filterMenu = _filterMenu.concat(\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t[\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Contains\\', value: \\'..x..\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Starts with\\', value: \\'x..\\'},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{html: \\'Ends with\\', value: \\'..x\\'}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t]\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t_filterMenu.push({html: \\'QBF Syntax\\', value: \\'QBF\\'});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.populate(_filterMenu);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.setValue(this.data._parsed[v].op || \\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(ele,\\'filter\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'switch\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar d = this.data._parsed[Number(v)];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data.fields[d.field];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(f){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar vals = f.control.data;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(vals){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(d.value == vals[0]) d.value = vals[1];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\telse d.value = vals[0];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'list\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof d == \\'function\\') d = d.call(this,this.data._parsed,v-0);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(d.constructor == Array) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.populate(d);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(iEle,\\'list\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tiEle.focus();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} else { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._pickerIndex != v){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.hidePicker();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(!ele) return false;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.layout = \\'loading\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.refresh();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(!this._pickerShown){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(ele,\\'list\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerShown = true;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._suggestGet();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'date\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._pickerDate.format != frm){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDate.format = frm;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar td = new Date();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDate._parsedFormat = td._parseFormat(frm);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDate.setValue(this.data._parsed[v].value || \\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(iEle,\\'date\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'step\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar d = this.data.fields[f].control.data;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar val = this.data._parsed[v].value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tval = $u.s.toNum(val);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(ia == \\'-\\') val -= d.step || 1;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\telse val += d.step || 1;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof d.max == \\'number\\') val = Math.min(val,d.max);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof d.min == \\'number\\') val = Math.max(val,d.min);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.data._parsed[v].value = val;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'buttonlist\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[ia].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar obj = this.data.fields[f];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(obj.control.multiple) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar v2 = this.data._parsed[ia].value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof v2 != \\'string\\') v2 = \\'\\' + v2;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(v2 == \\'\\') v2 = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\telse v2 = v2.split(\\',\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar vi = v2.indexOf(v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(vi == -1) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tv2.push(v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} else { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tv2.splice(vi,1)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tv = v2.join(\\',\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.data._parsed[ia].value = v;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'loadQuery\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(err){ }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=load&_uniquekey=\\' + uniqueKey;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'saveQuery\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(err){ }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar _data =  \\'_controlName={VARIABLENAME}&_mode=save&_uniqueKey=\\' + uniqueKey;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setLayout(\\'Wait\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'runQuery\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar mode = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tmode = this.data.searchOptions.mode;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(e) { }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar listName = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tlistName = this.data.searchOptions.listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(e) { }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(listName == \\'\\') { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\talert(\\'Error. List to search not defined.\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} else { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar query = this.value\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar obj = {}; obj.advancedSearchControl = \\'{variablename}\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.queryData = this.value[0];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.listName = listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar m = []; \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tfor(var n in this.data.fields) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar flag = this.data.fields[n].control.multiple; \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(flag) { m.push(n);}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.allowMultiple = m ;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar searchMode = 1;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(typeof this.searchMode != \\'undefined\\' && this.searchMode == 2) searchMode = 2;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar _d = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj)))\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(searchMode == 2) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar ss = {dialog.object}.getControl(this.listName);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t_d.push(A5.ajax.buildURLParam(\\'_ssPagination\\',JSON.stringify(ss.pagination)))\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t_data = _d.join(\\'&\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'cancel\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setLayout(\\'Default\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'loadNamedQuery\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t try{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t  uniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t }catch(err){ }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var queryName = this.__savedQueries[v]\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var data = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t data.push( \\'_mode=loadQueryFromRepo\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t data.push(\\'_queryToLoad=\\' + queryName);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t data.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t data.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t data = data.join(\\'&\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'setNamedQuery\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar ele = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(ele) ele.value = this.__savedQueries[v];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'clearSearch\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar mode = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t mode = this.data.searchOptions.mode;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t if(mode == \\'grid\\') this.data.searchOptions.listName = \\'dummylistname\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(e) { }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar listName = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t listName = this.data.searchOptions.listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(e) { }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(listName == \\'\\') {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t alert(\\'Error. List to search not defined.\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} else {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var query = this.value\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var obj = {};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t this.setValue(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t obj.queryData = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t obj.listName = listName;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t obj.displayDebuggingInfo = this.data.searchOptions.displayDebuggingInfo;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t obj.placeholder = this.data.searchOptions.placeHolder;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var _data =  A5.ajax.buildURLParam(\\'_querydata\\',JSON.stringify(obj));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t {dialog.object}.ajaxCallback(\\'\\',\\'\\',\\'system:ComputeAdvancedSearchAndFilterList\\',\\'\\',_data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'save\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar queryDef = this.value[0];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar queryName = $(\\'{dialog.componentName}.{VARIABLENAME}.QUERYNAME\\').value;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(queryName == \\'\\') { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{grid.object}.dropDownMessage(\\'message\\',\\'Error\\',\\'<span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"color:red;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">You have not specified the query name</span>\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t} else { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar obj = {};\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.queryName = queryName \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tobj.queryDefinition = queryDef \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdebugger;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar uniqueKey = \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\ttry{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tuniqueKey = this.data.searchOptions.uniqueKey\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}catch(err){ }\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar data = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata.push(\\\\\\\\\\\\\\\\tA5.ajax.buildURLParam(\\'_queryDefinition\\',JSON.stringify(obj)));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata.push( \\'_mode=saveQueryToRepo\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata.push(\\'_controlName={VARIABLENAME}\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata.push(\\'_uniquekey=\\' + uniqueKey)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tdata = data.join(\\'&\\')\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar xb = \\'system:AdvancedSearchGetSavedQueries\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{dialog.object}.ajaxCallback(\\'\\',\\'\\',xb,\\'\\',data,{deviceOfflineFunction: function() {   }});\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'andor\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.data._parsed[ia].andor = v;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.setValue(JSON.stringify(this.data._parsed));\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'datefriendly\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"drag\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar d = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Week\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Week-to-date\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next Week\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next 7 days\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Month\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Month-to-date\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last Week\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last 7 days\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last Month\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last 30 days\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next Month\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next 30 days\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Year\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last Year\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next Year\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Year-to-date\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Quarter\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'This Quarter-to-date\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Last Quarter\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Next Quarter\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t this._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t this._picker.populate(d);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t this._picker.setValue(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t var iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t this.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t iEle.focus();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'daterange\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar frm = this.data.fields[f].control.format;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._pickerDateRangeStart.format != frm){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeStart.format = frm;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeEnd.format = frm;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar td = new Date();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeStart._parsedFormat = td._parseFormat(frm);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeEnd._parsedFormat = this._pickerDateRangeStart._parsedFormat;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar range = this.data._parsed[v].value || \\'\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\trange = range.split(\\'..\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(range.length == 1) { \\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\trange.push(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeStart.setValue(range[0]);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._pickerDateRangeEnd.setValue(range[1]);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(iEle,\\'daterange\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\'datefriendlysingle\\' : {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"selectable\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"onClick\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": function(v,ia,i,ele,event) { \\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar d = [];\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Today\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Yesterday\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\td.push(\\'Tomorrow\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tif(this._picker){\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar f = this.data._parsed[v].field;\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.layout = \\'list\\';\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.populate(d);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis._picker.setValue(\\'\\');\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tvar iEle = $(\\'{dialog.componentName}.{VARIABLENAME}.\\'+v)\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tthis.showPicker(ele,\\'datefriendly\\',v);\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\tiEle.focus();\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"wrapper\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"allow\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"dataJSON\\\\\\\\\\\\\": \\\\\\\\\\\\\"{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"fields\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"firstname\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"label\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"control\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"combolist\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"data\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": [\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t{\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"html\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"value\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}]\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"buttons\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"add\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Add new search field...\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"remove\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-trash:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"filter\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"date\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-calendar:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-chevronDown:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"plus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-add:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"minus\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-remove:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"save\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-save:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />Save query\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"load\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-load:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Load query\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"run\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filter:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Run query\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"menu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-ellipsisVertical:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" />\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"daterangepicker\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"ok\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"&nbsp;OK&nbsp;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-x:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Cancel\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"clearsearch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"<img src=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"svgIcon=#alpha-icon-filterOff:icon\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /> Clear search\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stringloadquery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Specify saved query to load\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stringsavequery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Specify name for query\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"stringquerynamewatermark\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Query name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"searchOptions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": {\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"displayDebuggingInfo\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"loadQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"saveQuery\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": false,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"placeHolder\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"uniqueKey\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"loadType\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"All\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"listName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t},\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"searchMode\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": 1,\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"listName\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"dummy_list\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"subtype\\\\\\\\\\\\\\\\\\\\\\\\\\\\\": \\\\\\\\\\\\\\\\\\\\\\\\\\\\\"AdvancedListSearch\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n}\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"css\\\\\\\\\\\\\": \\\\\\\\\\\\\".queryBuilder > div {padding: 2px;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderList > div {display: table-row;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\r\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"localsvg\\\\\\\\\\\\\": \\\\\\\\\\\\\"\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"javascript\\\\\\\\\\\\\": \\\\\\\\\\\\\";\\\\\\\\\\\\\",\\\\\\\\r\\\\\\\\n\\\\\\\\t\\\\\\\\\\\\\"methodForDefiningControl\\\\\\\\\\\\\": \\\\\\\\\\\\\"Specify Now\\\\\\\\\\\\\"\\\\\\\\r\\\\\\\\n}\\\\\",\\\\r\\\\n\\\\t\\\\\"css\\\\\": \\\\\".queryBuilder > div {padding: 2px;}\\\\\\\\r\\\\\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div {display: table-row;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\\\\\r\\\\\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\\\\\r\\\\\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\\\\\r\\\\\\\\n\\\\\\\\r\\\\\\\\n\\\\\\\\r\\\\\\\\n\\\\\",\\\\r\\\\n\\\\t\\\\\"localsvg\\\\\": \\\\\"\\\\\",\\\\r\\\\n\\\\t\\\\\"javascript\\\\\": \\\\\";\\\\\",\\\\r\\\\n\\\\t\\\\\"methodForDefiningControl\\\\\": \\\\\"Specify Now\\\\\"\\\\r\\\\n}\",\\r\\n\\t\"css\": \".queryBuilder > div {padding: 2px;}\\\\r\\\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\\\r\\\\n.queryBuilderList > div {display: table-row;}\\\\r\\\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\\\r\\\\n.queryBuilderList > div > div:first-child {width:100%;}\\\\r\\\\n.queryBuilderList > div > div > div {display: flex;}\\\\r\\\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\",\\r\\n\\t\"localsvg\": \"\",\\r\\n\\t\"javascript\": \";\",\\r\\n\\t\"methodForDefiningControl\": \"Specify Now\"\\r\\n}',\n\tcss: '.queryBuilder > div {padding: 2px;}\\r\\n.queryBuilderList {display: inline-table; width: 100%; padding: 0px !important;}\\r\\n.queryBuilderList > div {display: table-row;}\\r\\n.queryBuilderList > div > div {display: table-cell;vertical-align:top;padding: 2px;}\\r\\n.queryBuilderList > div > div:first-child {width:100%;}\\r\\n.queryBuilderList > div > div > div {display: flex;}\\r\\n.queryBuilderInput {flex-grow: 1;min-width: 200px;}\\r\\n\\r\\n\\r\\n',\n\tlocalsvg: '',\n\tjavascript: ';',\n\tmethodForDefiningControl: 'Specify Now'\n}",
                        "subtype": "AdvancedListSearch",
                        "class": "",
                        "style": ""
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 550px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; height: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'ADVANCEDSEARCH': {info: {controlType: 'AdvancedListSearch'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n"
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>",
                "idInternal": "dd1800d6-0bbb-4428-9802-771982029090",
                "crc": "4294936429",
                "v": {
                    "controlType": "list",
                    "variableName": "dummy_list",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptClientSideWatches": "{dialog.object}.dialogWatches['ENABLE_DUMMY_LIST'] = {\n\t\twatch: [],\n\t\tvariables: [],\n\t\tonChange: function(data) {\n\t\n\tvar dialog = {};\n\tvar summary = {};;\n\t;\n\tvar enable = (false);\n\tvar eles = $cetp($n('V.R' + data.rowNumber + '.DUMMY_LIST'),$('{dialog.componentName}.R'+data.rowNumber));\n\tif(typeof eles.length == 'undefined' || eles.length == 0) eles = [$('{grid.componentname}.'+'V.R' + data.rowNumber + '.DUMMY_LIST')];\n\tvar pObj = {dialog.object}.getControl('dummy_list'); if(pObj) { if(typeof pObj.setDisabled != 'undefined') {  pObj.setDisabled(!enable,eles); return true;  } }\n\tif(typeof {dialog.object}._buttons['dummy_list'] != 'undefined') {\n\t{dialog.object}._buttons['dummy_list'].setDisabled(!enable,eles)\n\t} else {\n\tfor(var i=0; i<eles.length;i++) eles[i].disabled = !enable;\n\t}\n\t;;\n\t{dialog.object}._executeEvent('onWatchEvent',{type: 'enable', control: 'dummy_list', flag: enable});}\n}\n\n",
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_dummy_list_dd1800d60bbb44289802771982029090(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('DUMMY_LIST');};",
                        "controlHTMLInPanelCard": "in panel card",
                        "javascript_listViewData": "{dialog.object}._listViewData['DUMMY_LIST'] = [[dialog.listViewData.dummy_list]]; ",
                        "javascript_listViewSettings": "{dialog.object}._listViewSettings['DUMMY_LIST'] = [[dialog.listViewSettings.dummy_list]]; ",
                        "javascript_listview": "{dialog.object}._controls['DUMMY_LIST'] =  { type: 'list',  data: {dialog.object}._listViewData['DUMMY_LIST'],  onInitialize: function() {\n\t\tvar pe = $(this.contId).parentElement;\n\t\tif(typeof this.listVariableName != 'undefined') { \n\t\t\tvar _cn = '{dialog.componentName}_' + this.listVariableName.toUpperCase() + '_2';\n\t\t\t$acn(pe,_cn);\n\t\t}\n\t\n\n\n\nvar flagCordova = true;\nif (typeof window['cordova'] == 'undefined') {\n\tvar flagCordova = false;\n}\nif(flagCordova) { \n\tif(this.__flagPersist) { \n\t\tif(this.__persistWhere.toLowerCase() == 'indexdb') { \n\t\t\talert('Error. App is running as a Cordova app. You cannot set the persist location to \\'IndexedDB\\' for Cordova applictions. You must set the persist location to \\'FileSystem\\'');\n\t\t}\n\t}\n}\n\n;var that = this;\ntry{\n\t\n\tif(this._hasDetailView) { \n\t\tif(this._JSONForm) { \n\t\n\t\t\tsetTimeout(function() { \n\t\t\tthat.resize();\n\t\n\t\t\t},10);\n\t\t}\n\t}\n}catch(e){};\n\t\n\n\nif(typeof this.__flagHasFixedColumnFooters != 'undefined') { \n\tif(this.__flagHasFixedColumnFooters) { \n\t\tthis.refresh();\n\t}\n}\n\n; if(this.initializeVirtualizedColumns) this.initializeVirtualizedColumns(); if(this._setupAlphabetSearch) this._setupAlphabetSearch.call(this)},  settings: {dialog.object}._listViewSettings['DUMMY_LIST'] }"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "List1",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "enableExpression": "javascript:false",
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "color": "",
                        "icon": "$$control.browse",
                        "displayText": "[dummy_list]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=dd1800d6-0bbb-4428-9802-771982029090}{I:'$$control.browse'} [dummy_list]<<break>>"
                    },
                    "listView": {
                        "listGUID": "549ec0a5-de69-4089-8d1e-8158efcaecbb",
                        "compressList": false,
                        "class": "<Default>",
                        "style": "",
                        "dataSourceType": "Static",
                        "overrides": "",
                        "flagIsDefined": true,
                        "staticData": "firstname",
                        "staticJSONData": "",
                        "height": "0px",
                        "width": "0px",
                        "hasParentList": false,
                        "parentListId": "",
                        "preLoadData": false,
                        "emptyListWhenParentChanges": false,
                        "objectNameInParentListForData": "",
                        "linkingFields": {
                            "parent": "",
                            "this": ""
                        },
                        "hasDataHeader": false,
                        "readonlyList": false,
                        "captureFocus": true,
                        "allowKeyboardNavigationToGiveFocus": true,
                        "headerHTML": "",
                        "noRecordsMessage": {
                            "has": false,
                            "HTML": "No records in list.",
                            "addrecordwhenmessageiclicked": true,
                            "centerH": true,
                            "centerV": true
                        },
                        "templateItemsJSON": "[]",
                        "hasDataFooter": false,
                        "footerHTML": "",
                        "headerStyle": "",
                        "footerStyle": "",
                        "hasFixedHeader": false,
                        "fixedHeaderHTML": "",
                        "fixedHeaderStyle": "",
                        "fixedHeaderClassName": "",
                        "hasFixedFooter": false,
                        "fixedFooterHTML": "",
                        "fixedFooterStyle": "",
                        "fixedFooterClassName": "",
                        "fillPanelContainer": false,
                        "static": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "jsFuncDS": {
                            "functionName": "",
                            "columnNames": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "sampleData": ""
                        },
                        "transform": {
                            "apikey": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "formId": "",
                            "fetchFormDefinition": false,
                            "allfields": true,
                            "fieldlist": "",
                            "paginate": false,
                            "pagesize": "",
                            "hasNavigationBar": false,
                            "navigationBarJson": ""
                        },
                        "excelfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "csvfile": {
                            "filename": "",
                            "sheetname": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "jsonfile": {
                            "filename": "",
                            "filter": "",
                            "order": "",
                            "dataReturnField": ""
                        },
                        "firestore": {
                            "executeWhere": "Server",
                            "databaseURL": "",
                            "serviceAccountConnString": "",
                            "collectionName": "",
                            "queryDefinition": "",
                            "maxRowCount": 10000,
                            "cs": {
                                "apikey": "",
                                "authDomain": "",
                                "databaseURL": "",
                                "projectId": "",
                                "method": "ConnectionString",
                                "connectionString": ""
                            },
                            "trackChanges": false,
                            "enablePersistence": true,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "mongodb": {
                            "connectionstring": "",
                            "database": "",
                            "collection": "",
                            "fields": "",
                            "dataReturnType": "",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "filter": "",
                            "order": ""
                        },
                        "clientSideFilterExpression": "",
                        "clientSideOrderExpression": "",
                        "custom": {
                            "xbasicfunctionname": "",
                            "xbasicdefinition": "",
                            "localXbasic": false,
                            "localXbasicDef": "",
                            "javascriptfunctionname": "",
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": ""
                        },
                        "dataSeriesSeriesName": "",
                        "dataSeries": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": ""
                        },
                        "sql": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "refreshSchemaOnEdit": true,
                            "storedSchemaJSON": "",
                            "flagTableInfoHasBeenUpdated": false,
                            "connectionString": "",
                            "selectType": "FieldsFromTable",
                            "tablename": "",
                            "fieldlist": "",
                            "filter": "",
                            "distinct": false,
                            "order": "",
                            "sqlstatement": "",
                            "portableSQL": true,
                            "sqlstatementforfieldlist": "",
                            "first": -1,
                            "primaryKey": "",
                            "serverSideAfterQueryEvent": "",
                            "serversidePostProcessJSONEvent": "",
                            "serverSideBeforeQueryEvent": "",
                            "getCountOfRecordsInQuery": true,
                            "sqlSecurityJSON": "",
                            "serversidedatenumberformatjson": "",
                            "useSubselectsForNestedQueries": true,
                            "useTransactions": true,
                            "stripCurlyBracketsFromGUIDS": false,
                            "allowIncrementalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "setrowcounttoargument": false,
                            "rowcountargumentname": "",
                            "sanitizedata": false,
                            "optimizedDetailViewSync": false,
                            "captureDebuggingInfoForOptimizedSync": false,
                            "captureDebuggingInfoS3ConnectionString": "<default>",
                            "optimizedDetailViewSyncWriteConflicts": false
                        },
                        "dbf": {
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "dataReturnExpression": "",
                            "serverSideAfterQueryEvent": "",
                            "isDefined": false,
                            "fieldmap": "",
                            "filter": "",
                            "order": ""
                        },
                        "variablename": "",
                        "showTitleRow": false,
                        "titleText": "",
                        "hasFreeformTemplate": false,
                        "freeformTemplate": "",
                        "javascript": {
                            "onBeforePopulate": "",
                            "onPopulate": "",
                            "onBeforeAddRows": "",
                            "onBeforeRemoveRows": "",
                            "onBeforeUpdateRow": "",
                            "onAddRows": "",
                            "onChange": "",
                            "onRemoveRows": "",
                            "onUpdateRow": "",
                            "onBeforeDestroy": "",
                            "onDestroy": "",
                            "onBeforeListDraw": "",
                            "onBeforeListClear": "",
                            "onInitialize": "",
                            "onBeforeItemDraw": "",
                            "onListDraw": "",
                            "onItemDraw": "",
                            "onNavigate": "",
                            "onSelect": "",
                            "onBeforeSelect": "",
                            "afterSelect": "",
                            "onDblClick": "",
                            "onClick": "",
                            "onRightClick": "",
                            "onTap": "",
                            "onDblTap": "",
                            "onDownHold": "",
                            "onFocus": "",
                            "onFieldClick": "",
                            "onRowCheck": "",
                            "onFieldDblClick": "",
                            "onFieldRightClick": "",
                            "onFocusOut": "",
                            "onBlur": "",
                            "beforeFetchMore": "",
                            "afterFetchMore": "",
                            "beforePageNavigate": "",
                            "afterPageNavigate": "",
                            "beforeRefreshRow": "",
                            "afterRefreshRow": "",
                            "afterRefreshData": "",
                            "afterRenderComplete": "",
                            "afterAjaxCallback": "",
                            "beforeClientSideFilter": "",
                            "afterClientSideFilter": "",
                            "beforeServerSideSort": "",
                            "afterServerSideSort": "",
                            "afterServerSideSummaryCompute": "",
                            "afterClientSideSummaryCompute": "",
                            "onListColumnSelectorChanged": "",
                            "beforeClientSideSort": "",
                            "afterClientSideSort": "",
                            "onInplaceEditStart": "",
                            "oninplaceeditdeleterow": "",
                            "oninplaceeditdeleterowAfter": "",
                            "onInplaceeditSave": "",
                            "onInplaceEditCancel": "",
                            "oninplaceeditAddRow": "",
                            "afterinplaceeditAddRow": "",
                            "afterinplaceeditAddRowWasSaved": "",
                            "afterRefreshListIncremental": "",
                            "beforeMenuOpen": "",
                            "onMenuClose": "",
                            "showeditrowicon": "",
                            "showaddrowicon": "",
                            "onSwipe": "",
                            "onScroll": "",
                            "onPullRelease": "",
                            "onPullEnd": "",
                            "onPull": "",
                            "afterSearchComplete": "",
                            "beforeSearch": "",
                            "onSearchResultTooLarge": "",
                            "onSearchResultTooLargeForLocalStorage": "",
                            "onBeforePersistToLocalStorage": "",
                            "onPersistToLocalStorage": "",
                            "onRestoreFromLocalStorage": "",
                            "onListReady": "",
                            "onResize": ""
                        },
                        "inplaceedit": {
                            "editrowsecuritygroups": "",
                            "addrowsecuritygroups": "",
                            "deleterowsecuritygroups": ""
                        },
                        "_hasIntegerControl": false,
                        "pullpastEnd": {
                            "YSetting": "auto",
                            "XSetting": "auto",
                            "Duration": 1000
                        },
                        "displayTextForNulls": "",
                        "hasMoreEventsDefined": false,
                        "hasMultipleLayouts": false,
                        "autoselectLayoutOnOrientationChange": false,
                        "autoSelectLandscape": "",
                        "autoSelectPortrait": "",
                        "subTheme": "",
                        "dragScrollDirection": "Both",
                        "scrolling": {
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "hasSearchPart": false,
                        "hasAlphabetbuttonsearch": false,
                        "alphabetbuttonsearchjson": "",
                        "hasquicksearch": false,
                        "qyucjsearchjson": "",
                        "searchPart": {
                            "fieldMap": "",
                            "searchFieldProperties": "",
                            "searchStyle": "IndividualControls",
                            "combineMultipleConditionsUsing": "AND",
                            "keywordsearchControl": "",
                            "keywordSearchFields": "",
                            "showDebugInfo": false,
                            "debugInfoPlaceholder": "",
                            "delayPopulateListTillActiveSearch": false,
                            "searchErrorPlaceholder": "",
                            "setMaxProperties": false,
                            "maxSearchSizeJSON": ""
                        },
                        "controlCSS": "",
                        "includeCRC": false,
                        "userDefinedMethodsJSON": "{\n\t\"functions\": []\n}",
                        "reverseColumnOrder": false,
                        "enableHorizontalScrolling": false,
                        "mincolumnwidth": "150px",
                        "maxcolumnwidth": "",
                        "enablewordwrap": true,
                        "persistDataToLocalStorage": false,
                        "persistWhere": "LocalStorage",
                        "persistMode": "Full",
                        "persisListLayout": false,
                        "loadPersistedLayout": false,
                        "incrementalRefreshAfterLoad": false,
                        "versionNumber": 1,
                        "hasDetailView": false,
                        "detailView": {
                            "method": "FieldMap",
                            "fieldMap": "",
                            "jsonformname": "",
                            "propertygridname": "",
                            "viewboxname": "",
                            "jsonformdefinition": "Pre-defined",
                            "propertygriddefinition": "Pre-defined",
                            "container": "",
                            "serverSideUpdateRules": "DirtyFieldsOnly",
                            "showDebuggingInfo": false,
                            "placeholderForDebuggingInfo": "",
                            "placeholderGlobalErrors": "",
                            "suppressGlobalErrorAlerts": false,
                            "globalErrorStyle": "font-family: Arial; font-size: 10pt; color: red; border: solid 1px red; width: 100%;",
                            "showFadeOutConfirmationMessage": false,
                            "fadeOutMessagePlaceholder": "",
                            "fadeOutMessageText": "",
                            "fadeOutMessageDuration": 2000,
                            "fadeOutMessageStyle": "Default",
                            "submitLocationInformation": false,
                            "noRecordInListIsSelectedSetting": "None",
                            "newRecordPolicy": "UseControlDefault",
                            "useServerSideSyncLog": false,
                            "clearServerSideSyncLog": true,
                            "updateServerSideSyncLogAfterEachInsert": false,
                            "convertInsertToUpsert": false,
                            "useTimestampfieldForIncrmentalRefresh": false,
                            "incrementalRefreshTimestampfield": "",
                            "synchronizationHandler": "",
                            "synchronizationRefreshHandler": "",
                            "refreshListIncrementalHandler": "",
                            "synchronizationLevel": "EachListInHierarchy",
                            "phoneGap": {
                                "mediaFilesSettingsJSON": ""
                            },
                            "__doNotshowsynclogPrompt": true,
                            "firestore": {
                                "primarykeyfornewrecords": "<auto>"
                            },
                            "customization": {
                                "clientSideErrorWarning": "Cannot save because there are validation errors.",
                                "dirtyDetailViewRecord": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "You must first save or undo the changes you have made to the List's Detail View."
                                },
                                "confirmFormResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to the List's Detail View?"
                                },
                                "confirmRowResetWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to undo changes made to this record?"
                                },
                                "confirmDeleteWarning": {
                                    "title": "Warning",
                                    "icon": "<Defined in Style>",
                                    "message": "Are you sure you want to delete this record?"
                                },
                                "writeConflict": {
                                    "message": "Write conflict. Tap here to resolve.",
                                    "useMineMessage": "Use mine ('{myvalue}')",
                                    "useTheirsMessage": "Use theirs ('{theirvalue}')",
                                    "useMineAll": "Use mine for all fields",
                                    "useTheirsAll": "Use theirs for all fields"
                                },
                                "databaseError": {
                                    "update": "Record was not updated.|More...|Less",
                                    "insert": "Record was not inserted.|More...|Less",
                                    "delete": "Record was not deleted.|More...|Less"
                                },
                                "useCustomClasses": false,
                                "customClasses": "",
                                "setClassonEditedRows": true,
                                "css": {
                                    "dirtyRecord": "",
                                    "newRecord": "",
                                    "serverSideError": "",
                                    "deletedRecord": "",
                                    "dirtyRecordRow": "",
                                    "newRecordRow": "",
                                    "serverSideErrorRow": "",
                                    "deletedRecordRow": "",
                                    "hasUnSyncedMediaFiles": ""
                                }
                            },
                            "refreshRowOnSelect": false,
                            "synchronizeImmediately": false,
                            "pushServerUpdatesToClientOnCommit": false,
                            "tablePropertiesDefined": false,
                            "autoCommitDetailViewEdits": true,
                            "syncBatchSize": 0,
                            "synchProgressPlaceholder": "",
                            "synchProgressProperties": "",
                            "dirtyControlClassName": "",
                            "linkedfreeformcontrols": "",
                            "detailviewposition": "OnPage",
                            "containerName": "",
                            "inListSettingsJSON": "",
                            "javascript": {
                                "canUpdateList": "",
                                "afterUpdateList": "",
                                "canSynchronizeList": "",
                                "afterSynchronizeList": "",
                                "afterSynchronizeListCompleted": "",
                                "afterRefreshListIncremental": "",
                                "hasClientSideValidationErrors": "",
                                "afterSynchronizeListBatch": "",
                                "beforeSynchronizeListBatchStart": "",
                                "afterDetailViewSave": "",
                                "afterSynchronizeListBatchEnd": "",
                                "canCancelBatch": "",
                                "afterCancelBatch": "",
                                "afterListRowSelectCancelled": "",
                                "canResetRow": "",
                                "canDeleteRow": "",
                                "afterDeleteRow": "",
                                "canUndoEdits": "",
                                "afterResetRow": "",
                                "afterUndoEdits": "",
                                "canNewRecord": "",
                                "afterNewRecord": "",
                                "modeChanged": "",
                                "onStateChanged": "",
                                "afterDetailViewPopulate": "",
                                "beforeDetailViewPopulate": "",
                                "beforeMediaFilesUploaded": "",
                                "afterMediaFilesUploaded": "",
                                "listReadyToPersist": "",
                                "beforeCRUDExecute": "",
                                "onMediaFilesUploadErrors": "",
                                "onNoMediaFilesToFetch": "",
                                "beforeMediaFilesDownloaded": "",
                                "afterMediaFilesDownloaded": "",
                                "beforeDeleteOrphanMediaFiles": "",
                                "afterDeleteOrphanMediaFiles": "",
                                "onSynchronizationStep": ""
                            },
                            "hasClientSideEventsDefined": false,
                            "serverSideEvent": {
                                "validate": "",
                                "errorMessageTranslate": "",
                                "onsynchronize": "",
                                "aftersynchronize": "",
                                "aftersynchronizeRecord": ""
                            }
                        },
                        "dragScrollMomentum": true,
                        "dragScroll": {
                            "hasCustomSnapSettings": false,
                            "snap": {
                                "x": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                },
                                "y": {
                                    "use": false,
                                    "offset": "0",
                                    "step": "1"
                                }
                            },
                            "momentum": {
                                "friction": 4,
                                "duration": 1000
                            }
                        },
                        "behavior": {
                            "pulltorefresh": false,
                            "pulltoRefreshSettingsJSON": "",
                            "drag": {
                                "has_side_to_side_rowdragbehavior": false,
                                "settingsJSON": "",
                                "has_reorder": false,
                                "reorderSettingsJSON": ""
                            }
                        },
                        "hasCheckBoxSelectColumn": false,
                        "checkboxSelectColumnCustomzationJSON": "",
                        "searchHighlighting": false,
                        "searchHighlightClass": "",
                        "searchHighlightStyle": "color: red;",
                        "useDragScrolling": "Auto",
                        "customSettingsJSON": "",
                        "clientSideVirtualColumns": "",
                        "clientSideLookupColumnsJSON": "",
                        "allowInplaceediting": false,
                        "inplaceEditingSettingsJSON": "",
                        "clientSideGroupBreaksHas": false,
                        "clientSideGroupBreakJSON": "",
                        "listNavigatorHas": false,
                        "listNavigatorJSON": "",
                        "serverSideRowStyle": "",
                        "clientSideRowStyle": "",
                        "alternatingRowColor": false,
                        "evenRowColor": "",
                        "oddRowColor": "",
                        "defaults": {
                            "indexLayout": 1
                        },
                        "fieldsArray": {
                            "fields": [
                                {
                                    "name": "firstname",
                                    "type": "C",
                                    "displayFormat": "",
                                    "serverSideInlineStyle": "",
                                    "serverSideConditionalStyle": "",
                                    "clientSideConditionalStyle": "",
                                    "clientSideConditionalCellStyle": "",
                                    "encryptfield": false,
                                    "encryptionkey": "",
                                    "decodeValue": false,
                                    "decodeValueLookupListJSON": "",
                                    "securityGroups": "",
                                    "javascriptAddressible": false,
                                    "serversideShowhideExpn": "",
                                    "clientSideShowHideExpn": "",
                                    "controlType": "Label",
                                    "clientsideInlineStyle": "",
                                    "wordwrap": false,
                                    "wordwrapOption": "normal",
                                    "clientsideClass": "",
                                    "baseExpression": "",
                                    "searchPropertiesJSON": "",
                                    "image": {
                                        "base64Encode": false,
                                        "type": "JPG",
                                        "scale": "",
                                        "fileNameTransformation": "",
                                        "imageDataType": "Name",
                                        "base64Prefix": "data:image/jpg;base64,",
                                        "noImageFoundImage": ""
                                    },
                                    "sourceTableType": "",
                                    "detailview": {
                                        "serversidevalidation": "",
                                        "defaultValueJavascript": "",
                                        "onDetailViewPopulateJavascript": "",
                                        "onListUpdateFromDetailView": "",
                                        "updateable": true,
                                        "checkforwriteConflicts": true,
                                        "blankIsNull": false,
                                        "updatePermissionSecurityGroups": "",
                                        "serverSidePermissionExpression": "",
                                        "imageCapturePropertiesJSON": "",
                                        "ExifCapturePropertiesJSON": ""
                                    },
                                    "hide": false,
                                    "button": {
                                        "type": "Text",
                                        "image": "",
                                        "label": "Button",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "hyperlink": {
                                        "label": "Hyperlink",
                                        "bubblehelp": "",
                                        "class": "",
                                        "style": "",
                                        "onClick": "",
                                        "actionType": "Javascript",
                                        "href": "",
                                        "target": "New Window",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false
                                    },
                                    "unboundtype": "",
                                    "dynamicImage": {
                                        "definition": "",
                                        "class": "",
                                        "style": "",
                                        "bubbleHelp": "",
                                        "onClick": "",
                                        "stopPropagation": false,
                                        "giveFocusToRowOnClick": false,
                                        "fireEventsWhenRowGetsFocus": false,
                                        "twoStateImage": false,
                                        "swapImageName": "",
                                        "toggleOnClick": true,
                                        "rotationType": "90"
                                    },
                                    "menu": {
                                        "definitionJSON": "",
                                        "buttonType": "Image",
                                        "text": "Menu",
                                        "image": "svgIcon=#alpha-icon-bars:icon,24",
                                        "image_rotate": true,
                                        "bubblehelp": "",
                                        "inlinestyle": "",
                                        "className": "",
                                        "focusrow": false,
                                        "imageOpen": "svgIcon=#alpha-icon-xLarge:icon,24",
                                        "fireEventsWhenRowGetsFocus": false,
                                        "image_rotate_duraction": 300
                                    },
                                    "virtualJavascript": {
                                        "javascript": ""
                                    },
                                    "serverSideSummaryFieldsHas": false,
                                    "horizontalwidth": "200px",
                                    "serverSideSummaryFields": "",
                                    "clientSideSummaryFieldsHas": false,
                                    "clientSideTypeTransform": "None",
                                    "clientSideDateTemplate": "MM-dd-yyyy",
                                    "clientSideDateFormat": "<None>",
                                    "clientSideNumericFormat": "",
                                    "inplaceEditing": {
                                        "template": "",
                                        "javascript": {
                                            "validation": "",
                                            "initialvalue": ""
                                        },
                                        "serverside": {
                                            "validation": ""
                                        },
                                        "controltype": "Textbox",
                                        "controljson": "",
                                        "allow": true,
                                        "conditionalalloweditJSfunction": "",
                                        "securitygroups": ""
                                    },
                                    "customControl": {
                                        "definition": ""
                                    },
                                    "chartPropertiesJSON": "",
                                    "isComputedColumn": false,
                                    "ink": {
                                        "width": "300",
                                        "height": "",
                                        "sizeMethod": "Width-Height",
                                        "scale": 0.25,
                                        "zoom": "50%",
                                        "boundsType": "Page",
                                        "boundsMargin": 10,
                                        "boundsX": 0,
                                        "boundsY": 0,
                                        "boundsWidth": 100,
                                        "boundsHeight": 100
                                    },
                                    "star": {
                                        "maxstars": 5,
                                        "selectedColor": "Gold",
                                        "unselectedColor": "Gray",
                                        "width": "26px",
                                        "height": "26px",
                                        "readonly": false
                                    },
                                    "integer": {
                                        "min": "0",
                                        "max": "100",
                                        "buttonClass": "[theme:button.base.className]",
                                        "valueClass": "[class.dialogInput]",
                                        "ValueStyle": "width: 40px;",
                                        "hasIncrementBy10": false,
                                        "hasIncrementBy100": false
                                    },
                                    "javascript": {
                                        "methodName": ""
                                    },
                                    "map": {
                                        "height": "300",
                                        "width": "300",
                                        "markerColor": "green",
                                        "markerSize": "<default>",
                                        "zoom": "8"
                                    },
                                    "radiobuttons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "checkboxButtons": {
                                        "choices": "",
                                        "readonly": false,
                                        "fillWidth": true
                                    },
                                    "switch": {
                                        "onvalue": "On",
                                        "offValue": "Off",
                                        "width": "100px",
                                        "direction": "ltr",
                                        "readonly": false,
                                        "displaystyle": "Switch",
                                        "htmlOn": "On",
                                        "htmlOff": "Off",
                                        "iconOn": "svgIcon=#alpha-icon-checkRounded:icon,24",
                                        "iconOff": "svgIcon=#alpha-icon-squareRounded:icon,24",
                                        "behavior": "ComboBox",
                                        "groupName": "Group1"
                                    },
                                    "unboundField": false,
                                    "display": "{data=1}{I:'$$control.smartField'} firstname (C)",
                                    "xbfunction": "",
                                    "onItemDrawSystemJavascript": "",
                                    "onItemDrawInlineStyle": "",
                                    "onItemDrawConditionalStyle": "",
                                    "controlHTML": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "controlHTMLFreeformLayout": "<span id=\"{dialog.componentName}.DUMMY_LIST.FIRSTNAME.I.{*dataRow}\">{firstname}</span>",
                                    "baseName": "firstname",
                                    "_templateEditingFreeform": "{firstname}"
                                }
                            ]
                        },
                        "layoutsArray": {
                            "layouts": [
                                {
                                    "Name": "Default",
                                    "Type": "Column",
                                    "isDefaultLayout": true,
                                    "friendlyName": "",
                                    "kanbansettingsjson": "",
                                    "customsettingsjson": "",
                                    "chartsettingsjson": "",
                                    "mapsettingsjson": "",
                                    "calendarsettingsjson": "",
                                    "showColumnTitles": true,
                                    "hasColumnActions": false,
                                    "columnActionsJSON": "",
                                    "template": "",
                                    "snakingLayoutWidth": "1in",
                                    "itemHeight": "",
                                    "contentclassname": "",
                                    "clientSideGroupBreaksHas": false,
                                    "clientsidegroupBreaksMode": "<Use Default>",
                                    "clientSideGroupBreakJSON": "",
                                    "freeformType": "Vertical",
                                    "className": "",
                                    "hoverclassName": "",
                                    "selectedClassName": "",
                                    "style": "",
                                    "titleClassName": "",
                                    "hasListItemFooter": false,
                                    "listItemFooter": "",
                                    "HaslistColumnSeparator": false,
                                    "listFixedColumnsSettingsJSON": "",
                                    "hasVirtualizedColumns": false,
                                    "listItemFooterInitialState": "Open",
                                    "listColumnSeparatorHas": false,
                                    "listColumnSeparator": {
                                        "propertiesJSON": ""
                                    },
                                    "dragScroll": {
                                        "hasCustomSnapSettings": false,
                                        "snap": {
                                            "x": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            },
                                            "y": {
                                                "use": false,
                                                "offset": "0",
                                                "step": "1"
                                            }
                                        },
                                        "momentum": {
                                            "friction": 4,
                                            "duration": 1000
                                        }
                                    },
                                    "dragScrollMomentum": true,
                                    "columns": [
                                        {
                                            "heading": "Firstname",
                                            "headingInlineStyle": "",
                                            "headingClassName": "",
                                            "Template": "{firstname}",
                                            "footerTemplate": "",
                                            "dataInlineStyle": "",
                                            "canSort": true,
                                            "sortColumnName": "firstname",
                                            "initialsortdirection": "Ascending",
                                            "columnWidth": "flex(1)",
                                            "sortWhere": "ClientSide",
                                            "sortJavascript": "",
                                            "serverSideSortExpression": "",
                                            "javascript": {
                                                "onclick": "",
                                                "onrightclick": ""
                                            },
                                            "hideColumnIfFieldHidden": true,
                                            "initialStateHidden": false,
                                            "hideColumnReferenceField": "firstname",
                                            "columnIsResizeable": false,
                                            "responsiveColumnWidth": "",
                                            "hidecolumnactions": false,
                                            "hasFixedFooter": false,
                                            "hasDataFooter": false,
                                            "fixedFooterjSON": "",
                                            "datafooterJSON": "",
                                            "hasColumnFooter": false,
                                            "columnFooterJSON": "",
                                            "unboundtype": "",
                                            "hasIconsIncolumnHeader": false,
                                            "columnIconsJSON": "",
                                            "name": "firstname",
                                            "display": "{I:'$$control.smartField'} firstname",
                                            "enableCanSort": true,
                                            "enableShowInitialSortDirection": true,
                                            "enableShowSortField": true
                                        }
                                    ]
                                }
                            ]
                        },
                        "odata": {
                            "url": "http://services.odata.org/V4/Northwind/Northwind.svc",
                            "serviceType": "OData",
                            "requiresAuthentication": false,
                            "usesCSRFToken": false,
                            "authType": "Basic",
                            "authUsername": "",
                            "authPassword": "",
                            "containerName": "",
                            "columns": "",
                            "filter": "",
                            "order": "",
                            "max_rows": -1,
                            "dataReturnType": "Field",
                            "dataReturnField": "",
                            "primarykey": "",
                            "primaryKeyType": ""
                        },
                        "paginateData": false,
                        "pageSize": 20,
                        "paginateMethod": "FetchMore",
                        "fetchMoreButtonHTML": "More records...",
                        "fetchMoreButtonType": "Button",
                        "fetchMoreButtonStyle": "",
                        "fetchMoreButtonContainerStyle": "text-align: center;",
                        "hasNavigationBar": false,
                        "navigationBarJson": "",
                        "serverSideSorting": false,
                        "breaks": {
                            "has": false,
                            "field": "",
                            "sortDescending": false,
                            "sortOnBreakField": true,
                            "fieldChars": -1,
                            "template": "",
                            "stringDictionary": "",
                            "caseSensitive": false,
                            "breakType": "Automatic",
                            "userDefinedBreakGroups": "",
                            "geographyUnits": "Meters|Meters"
                        },
                        "allowNullSelection": true,
                        "allowAnyValue": false,
                        "allowTextSelection": false,
                        "allowNullDeselection": false,
                        "loopNavigate": false,
                        "loopNavigateNullSelection": false,
                        "delayRenderTillVisible": false,
                        "delayRenderTillRefresh": false,
                        "delayRenderTillUserLogsIn": false,
                        "multiSelect": false,
                        "multiSelectMode": "Control-click",
                        "separator": ",",
                        "localCSS": "",
                        "virtualization": {
                            "type": "None",
                            "onNavigateBehavior": "Navigate",
                            "size": 50,
                            "maxSize": 0,
                            "offset": 10,
                            "navigation": {
                                "pull": true,
                                "pullSize": 40,
                                "prevHTML": "Previous",
                                "prevClassName": "",
                                "prevPressedClassName": "",
                                "nextHTML": "Next",
                                "nextClassName": "",
                                "nextPressedClassName": ""
                            }
                        },
                        "scroller": {
                            "has": false,
                            "messageType": "Template",
                            "messageTemplate": "",
                            "messageJS": "",
                            "customizationIsDefined": false,
                            "flow": "ttb",
                            "location": "after",
                            "className": "",
                            "focusClassName": "",
                            "dialClassName": "",
                            "style": "",
                            "offset": {
                                "top": "0px",
                                "bottom": "0px",
                                "left": "0px",
                                "right": "0px"
                            },
                            "slider": {
                                "className": "",
                                "innerClassName": "",
                                "handle": {
                                    "className": "",
                                    "style": ""
                                },
                                "shadow": {
                                    "show": true,
                                    "className": "",
                                    "style": ""
                                },
                                "message": {
                                    "show": "auto",
                                    "className": "",
                                    "topClassName": "",
                                    "bottomClassName": "",
                                    "leftClassName": "",
                                    "rightClassName": "",
                                    "style": "",
                                    "lowSwitch": 75,
                                    "highSwitch": 75
                                }
                            },
                            "dial": {
                                "show": "drag",
                                "invertDrag": false,
                                "className": "",
                                "message": {
                                    "className": ""
                                },
                                "style": "",
                                "pixelStep": 4,
                                "size": 2
                            }
                        },
                        "precalc": {
                            "javascriptOnOrientationChange": ""
                        },
                        "previewMode": false,
                        "__xbjs": "ps.__checkedImage = \"svgIcon=#alpha-icon-checkCircle:icon,24\"\nps.__uncheckedImage = \"svgIcon=#alpha-icon-circle:icon,24\"",
                        "_templateCSS": "\n",
                        "allchildren": "",
                        "optimizeJSONSize": true
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'DUMMY_LIST': {info: {controlType: 'list'}, hiddenVal: false, type: 'control', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n",
                    "listviewData": "[[%%[[dummy_list]]%%]]",
                    "listviewSearchReplace": "[[dialog.listViewData.dummy_list]] = tmpl.page_fields[3].precalc.listViewData",
                    "listViewHasBeenRendered": false,
                    "js_afterListInitialize": "var listObj = {UXPRERENDEREDALIAS}_DlgObj.getControl('DUMMY_LIST');\nif(listObj) listObj._state.recordCount = 0;\nif(listObj) listObj._state.recordCountFormatted = '0';\nif(listObj) listObj._state.lastBreakValue = '<None>';\nif(listObj) listObj._state.pageCount = 0;\nif(listObj) listObj._state.pageSize = 20;\nif(listObj) {var ele = $('{UXPRERENDEREDALIAS}.dummy_list.RECORDCOUNT'); if(ele) ele.innerHTML = listObj._state.recordCountFormatted;};\nif(listObj) listObj._state.paginated = false;\n\nif(listObj) listObj._state.highlight = {  };\nif(listObj) listObj._state.whereClause = '';\nif(listObj) listObj._state.whereParameters = '';\nlistObj._state.order = '';\n\t\t\n\t\tvar flagPersist = false;\n\t\tif(typeof listObj._flagPersistDataOK != 'undefined') { \n\t\t\tif(listObj._flagPersistDataOK) { \n\t\t\t\tvar data = listObj._data;\n\t\t\t\tlistObj.persistToStorage({mode:'populate', data: data, submode: 'ListViewData'});\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n;\n{UXPRERENDEREDALIAS}_DlgObj._list_executeEvent('DUMMY_LIST','afterRenderComplete',{});\n\nif(listObj._refreshStateMessages) listObj._refreshStateMessages();",
                    "list_CapturedFieldValueFromFirstRow": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_image",
                "display": "{B=White,Light Blue}{Data=6b6328e2-9d3b-4588-99ed-219e24c90551}{I:'$$generic.image'} [Image: (static) css/A5System/Images/wait.gif]<<break>>",
                "idInternal": "6b6328e2-9d3b-4588-99ed-219e24c90551",
                "crc": "4294920929",
                "v": {
                    "ImageMode": "Static",
                    "localxbasic": "",
                    "localjavascript": "",
                    "cssGridItemPropertiesJSON": "",
                    "clientSideconditionalStyle": "",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "breakHeight2": "",
                    "breakHorizontalSpace2": "",
                    "id": "IMAGE_1",
                    "hide": false,
                    "label": "",
                    "labelBubbleHelp": "",
                    "labelClass": "<Default>",
                    "labelStyle": "",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Left",
                    "repeatingSectionColumnHeading": "",
                    "securityGroups": "",
                    "showHideExpn": "",
                    "ShowExpression": "",
                    "advancedImageDisplayJSON": "",
                    "dynamicImage": {
                        "twoStateImage": false,
                        "swapImageName": "",
                        "toggleOnClick": true,
                        "rotationType": "90"
                    },
                    "Imagename": "css/A5System/Images/wait.gif",
                    "ImageAlt": "",
                    "class": "",
                    "style": "",
                    "precalc": {
                        "javascriptClientSideWatches": "",
                        "javascriptAbstractSetupCode": ""
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 4,
                        "color": "",
                        "icon": "$$generic.image",
                        "displayText": "[Image: (static) css/A5System/Images/wait.gif]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{Data=6b6328e2-9d3b-4588-99ed-219e24c90551}{I:'$$generic.image'} [Image: (static) css/A5System/Images/wait.gif]<<break>>"
                    },
                    "controlContainerStyle": ""
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.IMAGE_1\" style=\"z-index:10000; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box; ; padding:0;margin:0;\"    >\n\t\t<img src=\"css/A5System/Images/wait.gif\" class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\" title=\"\"  onerror=\"if(typeof {dialog.object} != 'undefined') {dialog.object}._executeEvent('onImageError',{element: this});\"  />\n\t</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": ""
                },
                "containerStartIndex": 0
            }
        ],
        "builderType": "Dialog2",
        "guid": "8f9ce967-74a0-4f32-b442-47c7dea05051",
        "componentName": "SEARCH_UX",
        "componentFilename": "C:\\Users\\lukes\\Documents\\AlphaAnywhere\\Phase 1 Project\\Phase 1 Project.WebProjects\\Default.WebProject\\search_ux.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": false,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": false,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "9bd03259-4af8-4e24-8ed7-8c025938bf3b\n",
        "designPaneIndex": 1,
        "masterPaneC": "EventsClientSide",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 10,
        "clientSideEventIndexC": "10",
        "lastControlSelected": "insert_layout_directive_Image",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5691",
        "addinBuildNumberHighestUsed": "5691",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "134",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n<div class=\"A5CWLayout\" style=\"width: 100%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.SEARCHFORM\" class=\"{dialog.componentName}_SEARCHFORM\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 550px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH\" name=\"V.R{grid.rownumber}.ADVANCEDSEARCH\" /><!--JSControlEnd-->\n<div >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.ADVANCEDSEARCH.CONTROL\"  class=\"{grid.componentName}_ADVANCEDSEARCH\" style=\"overflow: auto; width: 100%; height: 100%; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: 0px\" >\n\t<!--FldS--><!--JSControlStart--><input type=\"hidden\" id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST\" name=\"V.R{grid.rownumber}.DUMMY_LIST\" /><!--JSControlEnd-->\n<div   style=\"padding:0px; \"  >\n\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.DUMMY_LIST.CONTROL\"  class=\"{grid.componentName}_DUMMY_LIST\" style=\"overflow: auto; width: 100%; height: 0px; \"></div>\n</div>\n<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n<div class=\"A5CWLayout\" style=\"width: \" >\n\t<div id=\"{dialog.componentName}.V.R{dialog.rownumber}.IMAGE_1\" style=\"z-index:10000; box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box; ; padding:0;margin:0;\"    >\n\t\t<img src=\"css/A5System/Images/wait.gif\" class=\"\" style=\"box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; -webkit-box-sizing: border-box;\" title=\"\"  onerror=\"if(typeof {dialog.object} != 'undefined') {dialog.object}._executeEvent('onImageError',{element: this});\"  />\n\t</div>\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:listBox.base.className]=*if_error(p.listBox.base.className,\"\")\n[theme:listBox.base.item.className]=*if_error(p.listBox.base.item.className,\"\")\n[theme:listBox.base.item.hoverClassName]=*if_error(p.listBox.base.item.hoverClassName,\"\")\n[theme:ux.base.labelClassName]=*if_error(p.ux.base.labelClassName,\"[class.dialogFieldLabel]\")\n[theme:edit.base.className]=*if_error(p.edit.base.className,\"[class.gridNavigatorInput]\")\n[theme:edit.primary.className|{dialog.style}Edit]=*if_error(*if_error(p.edit.primary.className,p.edit.base.className),\"{dialog.style}Edit\")\n[theme:menu.base.className]=*if_error(p.menu.base.className,\"\")\n[theme:menu.base.innerClassName]=*if_error(p.menu.base.innerClassName,\"\")\n[theme:menu.base.item.className]=*if_error(p.menu.base.item.className,\"\")\n[theme:menu.base.item.hoverClassName]=*if_error(p.menu.base.item.hoverClassName,\"\")\n[theme:menu.base.item.selectedClassName]=*if_error(p.menu.base.item.selectedClassName,\"\")\n[theme:button.base.className]=*if_error(p.button.base.className,\"[class.gridButton]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\n\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": true,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": true,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": false,
            "__freeformLayoutsJS": "",
            "_jsOnChangeFunctions": "function onChange_AdvancedSearch_9bd032594af84e248ed78c025938bf3b(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('ADVANCEDSEARCH');};",
            "_jsOnClickFunctions": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: '8f9ce967-74a0-4f32-b442-47c7dea05051',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tonInitializeComplete: function(e) {\n{dialog.object}.setControlDisplay(\"SEARCHFORM\", false, \"display\");\n{dialog.object}.setControlDisplay(\"ADVANCEDSEARCH\", false, \"display\");\n\n{dialog.object}.addOnSearchCallback = (callback) => {\n\tif ({dialog.object}.stateInfo.onSearchCallbacks) {\n\t\t{dialog.object}.stateInfo.onSearchCallbacks.push(callback);\n\t} else {\n\t\t{dialog.object}.stateInfo.onSearchCallbacks = [callback];\n\t}\n}\n\n{dialog.object}.addOnClearSearchCallback = (callback) => {\n\tif ({dialog.object}.stateInfo.onClearSearchCallbacks) {\n\t\t{dialog.object}.stateInfo.onClearSearchCallbacks.push(callback);\n\t} else {\n\t\t{dialog.object}.stateInfo.onClearSearchCallbacks = [callback];\n\t}\n}\n\t\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueProperties2": "value.SEARCHFORM=\"\"\nvalue.ADVANCEDSEARCH=\"\"\nvalue.DUMMY_LIST=\"\"",
            "setValueUnformattedProperties": "value.SEARCHFORM=convert_type(\"\",\"C\")\nvalue.ADVANCEDSEARCH=convert_type(\"\",\"C\")\nvalue.DUMMY_LIST=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentValues": "",
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": false,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/a5.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "A5SaveTimeStamp": "20240812081130416",
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "showPulseEffect": true,
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": false,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": false,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "__LPhostName": "Chrome",
        "_style_isInherited": false,
        "_analyzecontainersjs": true,
        "_repeatingSectionPendingRecalc": "\n",
        "cachecomponent": false,
        "_crcXbEvents": 4294903431,
        "_crcJSFunctions": 4294921817,
        "_crcJSEvents": 4294907293,
        "_treeErrors": "",
        "__flagHasMacro": false,
        "__staticMode": "",
        "__componentnotfound": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "_passwordReset": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "suppressJavascriptCodeWarning": false,
        "restorePanelSizes": true,
        "populateArgumentsFromQueryString": false,
        "livePreview_permissions_friendly": "",
        "simulatedcultureNumber": "",
        "_alphasoftwareBucketName": "",
        "staticHTMLFileJSON": "",
        "__flagRecursive": false,
        "_flagForceRecalcChildren": true,
        "__idinternalCurrentControl": "9bd03259-4af8-4e24-8ed7-8c025938bf3b",
        "__nameCurrentControl": "AdvancedSearch",
        "_containerstorecalc": "",
        "a_UnboundActionJavascript": [
            {
                "idInternal": "",
                "name": ""
            }
        ],
        "favoriteControls": "",
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC5WMsQ6CQBAFexP/Aa/Hq+gOOjsqf2Cznq84PPGyuyD8vSQUFlaWM5NM0CipWGVrQesMi/mBZ96tq1Ri677Cc3Me1HXB79wdD+HfAU2Sfyanun/x/bIYZOTcp5uwJGi9NSJByRzBdp1GS08QRVW1NcPe4IcSfQAk7ywxxgAAAA==",
                    "CSS_Link": "*gzip:H4sIAAAAAAAAC81Z/0/jOBa/Xxlp/gcfM2jhNClp2e5BMnDqFGYHid1bwezOSafTyE3c1osb5xyXwlT87/f8JYmTJm2B+eGEgPjl+X3ze59nO+8z+cAIkg8pOd2V5F4eRlm2e/b61VTOGFoib0FGt1R6EqfelE6mDH6lF3HGRYDEZIT3/Xf65yAseOcZEV5GGIlkgBKeEHg1yzzJ59HUw5GkPLH0x9ev6FjgGUHLxsnKIMXUGfQjnkhMEyLQcsw4lgEjYxmmOI5pMgn89N7yDb9c4Qc+l2iZv0M/wktkJiE9C434vZfRb/rtiIsYVAJJmcm/ee0vs/Z31vqW98a0nwWNP9GYXAjBxZAzZGnFeBnTLGX4ITBBK2dd84VmuoQo1Lgc0TjL+dDaeTRhEEhvxHh0G1aU/EHJ4hcek5K3gekiprLKVDMEeC6Tgmud9C0nrmpsMOucCvmwTvSQEbwShZr2zEhplbrdpJqmwhSi1uIz5DRamgoSJA7HkNgqZ0hwnMoq26e84CDnFdeCqEEw4qx9Gk1d4SMc3U4Enydx8GY8HuMxRnPB9n+gMzwh2eFbSM7Dt0rK4fH98eHbMWXs8Pd0r//xnOIJTzALvkypJHtHg73eUa/f3+sNe0cn5m8nTSYd3NeifjgITboH3fQeZZzRGL0ZHx+HMywmNIHaT4MelGFek+q5xYPLJJ1XArQiWBGNXEWszXRitiKi1ySihI4bjTok/jCXUtULT3FE5UPQ6YcQGAkCMEuneN/ST/sAembmZXJHMzpi5ArSEi2dqNcx0vBrMFJZAmiGIvVfwYWcAkwVQUHKMLSgsZza56lZfjPgd0SAmEWApjSOSRKiAu/0e+udGVj/DaxoUylTnuVTjVVXNJM/g9npJ4KBPUPLbx5NYnIf9MOdlGdUI7cgDEt6pzPa/CjUzdF5ALFPhiSRCqirCGxTQSFwgOeS57khtFeaovDew0pEgCItpBWrHxv0XoHoFq0tSta2g0fUoOPa5NYG11wdWvU6P9ojeIacjvYONTu8iclYvInL1Vj02rUq13E5OsvGXSIiqrSgvDc7kH1OMwzlFJdFiDr9xyLdPqoJEMkrPCJMaUbLMkFRkaE7DvqgXlnolemXSQY9eY2Q9XOoAh0dgTYOs5lZy6LSBQuClQUmsUqb0V/pLOVC4kQWyVKR0yYZkpRTtageuYPFzUz5Oy7iEYDhXALNCXK4ozX3/b1wR+cz6qrAhTumguwISYGTbMzFLDCPECyyD6/eef3u3gEIUUSrp+BFR74/y94h0JA/FnhnCE0LpAcrPkKoHKzUVhnL9VPhUNea0mhq1/f3DrZXmYf1xYp/Su8PirX8DSeEXRMdgyUqW4fdZDv9o9Ptmw7iAO8gigBLIMyfqWTkn4lOhhpxPG6glhVWFKWpRtsrkNPIT05Ois6NVOvW8BYTkIed3Xw0F5k6Fti0y/EdGpvkMzMRuWIeqx6oQEDvbFZvEVMHWitrEO5Wu9crqv0zHn3mqQ2NHdiQmFFrKNwzw3q7cjNc02zBuNueJwSvajta1vz1uqXYgnjk+vxBE0u37bj03BBe4vz3dTQ3OM8BZ7EroFjxUrWj0kc9Kj1Uw6fmeUNevcQpY1+xfDZUldWzNOWWddxSnH4IknRLLV01w9JXPX6qs1afwfm2snqJ+9bown+jqeK+IR3VylWBQTVRXYqKqjvWatbiRwV4wnInocTjJN5inl8pLpgD/5zqsgSnvAylXJKGvcWTVmkDxlT2Os9btoU663kZtDCiOBYCpw0uPweLYO4NSTFo56KMtTbCLfaa4/mB58h1x7dHR/UkERYUs6oilRw3keCMbRPzSpi2daw5nFsXWdOCVlzQ+fx/6IMLTBudcJK/odk2YXQjljW3q7U7Gnc7i+zRHVXO7mqDe2Cs/QJHXL5AS3v3Z/zEMZ1nJk7O3d7KO1eCOvo3oYjv++41DHrT6/XC0sJecblQt7DXLzeJ9W1eMFXn/+bNnvOuAkxVutkFVWm2fVaJeaOpic13E4a8XMkm8JWI/LJM+/ALSeaXkszQCnPl4IcZn1zfrKBFCRAxqIZVfhNFUYj0MdLiRN85iptDTLFEudiPnOubCZer66flMXyQ0Nk1l7BTP/FNeB3CcPilRuse17mAAmxtR901xyJrqavv37jvRVMS3ZL4lCf/gcCVJwqhefZP/JhMDhrmghFbTPda5oMXW8wGrrbZW6pflXCzwGnNFXSG/hYwnEkQR1m8nR8NctS6bBa1WRIYvY1JW/hmk2WzsGZZ63vDMxJPCwVrrAmW3yJSK3fF9obrheJ0bFqgeipAzq/JqyeNEj+mopT/pJmuYc7J3DlCvz/UH8DO9DPE6xY2fIwAwJzu7qqYnu7q99mUELlb/0yGpoKMT3fh8XCgsNvI6sD4H6M5KI0A8eXX7tGP6oPa+ywSFHYsgswAMemYJgsubqErp4LcUbJwhf+J77Bh30WZiFZV/LmqATzRM85yR55g/ddsigWJbzTzWi+UHy1fDDtUf2V6/Qoh6AiSRpjlV6AzGseMhOqVvdDu/QRZoMb5Hq8gqG8QgWmbaphJwW+JJeiLaqXmhn4jqtlvVLdOmqte39o69ulxoa7cWiiWsnn/vW94lr//67fri+uLX8/hz/ng6nJw8/h1cP7H4NfhxfnNxeB6+Al1/jsn4uGDiqi+Z43pnRFX2b09T5y6uTfC6tUvld2uY+rOK6yord0xvsACx6nCDm2AJ/ji5YLbxUeEsbApEwB6wu8ZY8eQKizVI/ydnG1yeczIc32w39Z0YYAUD/akCwWIijCD/VBenL5vw1TC4/vioSD95X/HnSRvPSAAAA==",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVAoKM0pTlWyAwC29a3YGgAAAA==",
                    "dialog2_html": "*gzip:"
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}