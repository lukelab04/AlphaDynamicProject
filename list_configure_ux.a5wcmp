{
    "$schema": "UX",
    "$definition": {
        "style_name": "Alpha",
        "style_type": "Alpha Five",
        "resolveAbstractClassNames": true,
        "builderVersionNumber": 1,
        "overrideStyleName": "Default",
        "FontSize": "Medium",
        "LocalCss": "<style type=\"text/css\">\n\n\n\n\n\n\n\n\n\n\n\n</style>",
        "A5ContainerClassPadding": "0px",
        "A5ContainerClassPaddingForContainerWidthMode": "4px",
        "JavaScriptFunctionDeclarations": "\n\n// Take items (should be string representation of JSON) and render form\nfunction renderForm(obj, formName, items) {\n\titems = items.filter((x) => Boolean(x));\n\n\tobj.setJSONFormItems(formName, items);\n\tobj.getControl(formName)._formBoxSize = \"\";\n\tobj.resizeFormBoxes();\n}\n\n// Mapping from ID to boolean so components can look up if they are hidden\nvar SHOW_HIDE_MAP = {};\n\n// https://stackoverflow.com/questions/105034/how-do-i-create-a-guid-uuid\nfunction uuidv4() {\n  return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, c =>\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n  );\n}\n\n// Helper to make sure arguments are what they should be\nfunction typeCheck(x, type, msg) {\n\tif (typeof x !== type) throw new Error(msg);\n\treturn x;\n}\n\n// Class to handle VALUES in the input. Numbers, strings, objects, arrays, etc.\n// The options can be of multiple forms. Null for strings, numbers, and functions, \n// an object description for objects, or an Input instance for arrays.\nclass Value {\n\tconstructor(type, options) {\n\t\t// Dialog object and form name\n\t\tthis.obj = null;\n\t\tthis.formName = null;\n\t\t\n\t\tthis.options = options ? options : {};\n\t\tthis.id = \"INPUT_TYPE_\" + uuidv4();\n\t\tSHOW_HIDE_MAP[this.id] = true;\n\t\n\t\t// Helper function to make sure object description matches what we expect\n\t\tlet validateObj = (o) => {\n\t\t\tif (!o.staticKeys) {\n\t\t\t\tthrow new Error(\"Expected input object to have field 'staticKeys'\");\n\t\t\t}\n\t\t\tif (o.dynamicKeys) {\n\t\t\t\tif (!(o.dynamicKeys instanceof Input)) throw new Error(\"Expected field 'dynamicKeys' to be an instance of Input\");\n\t\t\t}\n\t\t\tfor(const prop in o.staticKeys) {\n\t\t\t\tif (!(o.staticKeys[prop] instanceof Input)) throw new Error(`Key ${prop} is not associated with an instance of Input`);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Helper function to make sure array description is an Input\n\t\tlet validateArr = (options) => {\n\t\t\tif (!options.arrayInput || !(options.arrayInput instanceof Input)) throw new Error(`Expected 'options.arrayInput' to be an instance of Input`);\n\t\t}\n\t\n\t\t// Set up class variables according to type of input\n\t\tswitch (type) {\n\t\t\tcase 'string':\n\t\t\tcase 'number': \n\t\t\tcase 'boolean': \n\t\t\tcase 'function':\n\t\t\tcase 'dropdown':\n\t\t\t\tthis.type = type;\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tthis.type = type;\n\t\t\t\tvalidateObj(options);\n\t\t\t\t// Key -> Input\n\t\t\t\tthis.dynamicElems = {};\n\t\t\t\tbreak;\n\t\t\tcase 'array':\n\t\t\t\tthis.type = type;\n\t\t\t\tvalidateArr(options);\n\t\t\t\toptions.arrayInput.renderOptions.delete = true;\n\t\t\t\t// Element ID -> Input\n\t\t\t\tthis.allArrayElems = {};\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Value: Unknown type ${type}`)\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t// Helper method to find instances of Input that are included in this class's description \n\t// (i.e. in Arrays or Objects) and set those Input parents to the parent specified here\n\tsetParent(parent) {\n\t\tswitch (this.type) {\n\t\t\tcase 'object':\n\t\t\t\tfor (const prop in this.options.staticKeys) {\n\t\t\t\t\tthis.options.staticKeys[prop].setParent(parent);\n\t\t\t\t}\n\t\t\t\tfor (const prop in this.dynamicElems) {\n\t\t\t\t\tthis.dynamicElems[prop].setParent(parent);\n\t\t\t\t}\n\t\t\t\tif (this.options.dynamicKeys)\n\t\t\t\t\tthis.options.dynamicKeys.setParent(parent);\n\t\t\t\treturn;\n\t\t\tcase 'array':\n\t\t\t\tfor (const prop in this.allArrayElems) {\n\t\t\t\t\tthis.allArrayElems[prop].setParent(parent);\n\t\t\t\t}\n\t\t\t\tthis.options.arrayInput.setParent(parent);\n\t\t\t\treturn;\n\t\t\tdefault: return;\n\t\t}\n\t}\n\t\n\t// Set the dialog object and form name for this and all children\n\tsetObjAndFormName(obj, formName) {\n\t\tthis.obj = obj;\n\t\tthis.formName = formName;\n\t\t\n\t\tswitch(this.type) {\n\t\t\tcase 'object':\n\t\t\t\tfor (const prop in this.options.staticKeys) {\n\t\t\t\t\tthis.options.staticKeys[prop].setObjAndFormName(obj, formName);\n\t\t\t\t}\n\t\t\t\tfor (const prop in this.dynamicElems) {\n\t\t\t\t\tthis.dynamicElems[prop].setObjAndFormName(obj, formName);\n\t\t\t\t}\n\t\t\t\tif (this.options.dynamicKeys) {\n\t\t\t\t\tthis.options.dynamicKeys.setObjAndFormName(obj, formName);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'array':\n\t\t\t\tfor (const prop in this.allArrayElems) {\n\t\t\t\t\tthis.allArrayElems[prop].setObjAndFormName(obj, formName);\n\t\t\t\t}\n\t\t\t\tthis.options.arrayInput.setObjAndFormName(obj, formName);\n\t\t\t\treturn;\n\t\t\tdefault: return;\n\t\t}\n\t}\n\t\n\tpropagateDefaults(hasDefault, val) {\n\t\tif (!('default' in this.options) && hasDefault) this.options.default = val;\n\t\n\t\tswitch(this.type) {\n\t\t\tcase 'object':\n\t\t\t\tfor (const prop in this.options.staticKeys) {\n\t\t\t\t\tthis.options.staticKeys[prop].propagateDefaults('default' in this.options, this.options.default);\n\t\t\t\t}\n\t\t\t\tfor (const prop in this.dynamicElems) {\n\t\t\t\t\tthis.dynamicElems[prop].propagateDefaults('default' in this.options, this.options.default);\n\t\t\t\t}\n\t\t\t\tif (this.options.dynamicKeys) {\n\t\t\t\t\tthis.options.dynamicKeys.propagateDefaults('default' in this.options, this.options.default);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\tcase 'array':\n\t\t\t\tfor (const prop in this.allArrayElems) {\n\t\t\t\t\tthis.allArrayElems[prop].propagateDefaults('default' in this.options, this.options.default);\n\t\t\t\t}\n\t\t\t\tthis.options.arrayInput.propagateDefaults('default' in this.options, this.options.default);\n\t\t\t\treturn;\n\t\t}\n\t}\n\t\n\t// Return *value*\n\t// Will be a number, bool, string, array, etc\n\tserialize() {\n\t\tlet val;\n\t\tlet form = this.obj.getControl(this.formName);\n\t\tswitch (this.type) {\n\t\t\t// The simple input types can be parsed directly from the JSON\n\t\t\tcase 'string':\n\t\t\t\tval = form.data[this.id];\n\t\t\t\tif ('default' in this.options && (val === undefined || val === \"\")) return this.options.default;\n\t\t\t\tif (val === undefined || val === '') throw new Error(\"Value must be filled out.\");\n\t\t\t\treturn val;\n\t\t\tcase 'number':\n\t\t\t\tval = form.data[this.id];\n\t\t\t\tif ('default' in this.options && (val === undefined || val === \"\")) return this.options.default;\n\t\t\t\tif (val === undefined || val == '') throw new Error(\"Value must be filled out.\");\n\t\t\t\treturn val;\n\t\t\tcase 'boolean': \n\t\t\t\tval = form.data[this.id];\n\t\t\t\t\n\t\t\t\t// Doesn't really make sense for a categorical value to be undefined. But the code is here to deal with it in case\n\t\t\t\t// if ('default' in this.options && (val === undefined || val === false)) return this.options.default;\n\t\t\t\t// if (val === undefined) throw new Error(\"Value must be filled out.\");\n\t\t\t\treturn Boolean(val);\n\t\t\tcase 'function':\n\t\t\t\tval = eval(form.data[this.id]);\n\t\t\t\tif ('default' in this.options && (val === undefined || val === \"\")) return this.options.default;\n\t\t\t\tif (val === undefined) throw new Error(\"Value must be filled out.\");\n\t\t\t\treturn val;\n\t\t\tcase 'dropdown':\n\t\t\t\tval = form.data[this.id];\n\t\t\t\tif ('default' in this.options && (val == undefined || val === \"\")) return this.options.default;\n\t\t\t\treturn val;\n\t\t\tcase 'object':\n\t\t\t\tlet allErrors = [];\n\t\t\t\n\t\t\t\t// Collect all static & dynamic keys into objResult\n\t\t\t\tlet objResult = {};\n\t\t\t\tfor(const prop in this.options.staticKeys) {\n\t\t\t\t\tlet input = this.options.staticKeys[prop];\n\t\t\t\t\tobjResult[prop] = input.serialize();\n\t\t\t\t}\n\t\t\t\tfor(const prop in this.dynamicElems) {\n\t\t\t\t\tlet input = this.dynamicElems[prop];\n\t\t\t\t\tobjResult[prop] = input.serialize();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Undefined values can't be serialized anyway, so we'll clean them out\n\t\t\t\t// This also makes it possible to see if we should use the default value for this object \n\t\t\t\tfor (const key in objResult) {\n\t\t\t\t\tif(objResult[key] === undefined) delete objResult[key];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// If objResult empty and default exists, use the default\n\t\t\t\tif ('default' in this.options && Object.keys(objResult).length == 0) {\n\t\t\t\t\treturn this.options.default;\n\t\t\t\t} \n\t\t\t\tif (Object.keys(objResult).length == 0) throw new Error('Object must specify at least one key.');\n\t\t\t\treturn objResult;\n\t\t\tcase 'array':\n\t\t\t\tlet arrResult = [];\n\t\t\t\tfor(const prop in this.allArrayElems) {\n\t\t\t\t\tarrResult.push(this.allArrayElems[prop].serialize());\n\t\t\t\t}\n\t\t\t\tif (arrResult.length == 0 && 'default' in this.options) return this.default;\n\t\t\t\tif (arrResult.length == 0) throw new Error('Array must have at least one element.');\n\t\t\t\treturn arrResult;\n\t\t}\n\t}\n\t\n\t// If this is an object, return the Input associated with this key\n\tkey(name) {\n\t\tif (this.type !== 'object') return;\n\t\t\n\t\tif (this.options.staticKeys[name]) {\n\t\t\treturn this.options.staticKeys[name];\n\t\t}\n\t\tif (this.dynamicElems[name]) {\n\t\t\treturn this.dynamicElems[name];\n\t\t}\n\t}\n\t\n\t// If this is an array, return the Input associated with the index\n\tindex(i) {\n\t\tif (this.index !== 'array') return;\n\t\t\n\t\treturn Object.values(this.allArrayElems)[i];\n\t}\n\t\n\t// Return a JSON object that can be used to populate the form\n\t// Takes 'data', which is a JSON object *or JSON value* corresponding to this object\n\tgetPopulateDataFromObj(data, callbacks) { \n\t\t// If data is undefined and we have a default, just return an object setting this item to our default\n\t\tif (data === undefined && 'default' in this.options) {\n\t\t\tlet d = {};\n\t\t\td[this.id] = this.options.default;\n\t\t\treturn d;\n\t\t}\n\t\n\t\tlet t = typeof data;\n\t\t\n\t\t// Simple types can be set directly to 'data'\n\t\tif ((t == 'string' || t == 'boolean' || t == 'number') && this.type === t) {\n\t\t\tlet d = {};\n\t\t\td[this.id] = data;\n\t\t\treturn d;\n\t\t}\n\t\t\n\t\tif (t == 'string' && this.type == 'dropdown') {\n\t\t\tlet d = {};\n\t\t\td[this.id] = data;\n\t\t\treturn d;\n\t\t}\n\t\t\n\t\t// Functions must be converted to string representation (we input functions through a text edit box).\n\t\t// Implies closures don't work, but the JSON object representation of whatever we are building\n\t\t// should be standalone anyway.\n\t\tif(t == 'function' && this.type === t) {\n\t\t\tlet d = {};\n\t\t\td[this.id] = data.toString();\n\t\t\treturn d;\n\t\t}\n\t\t\n\t\t// Handle arrays\n\t\telse if (t == 'object' && this.type == 'array') {\n\t\t\tthis.allArrayElems = {};\n\t\t\tlet d = {};\n\t\t\tfor (const elem of data) {\n\t\t\t\t// Make a new instance of the array element to hold this element of d\n\t\t\t\tlet input = this.options.arrayInput.cloneWithNewId();\n\t\t\t\t// We don't actually need the form, we just need to populate the child map,\n\t\t\t\t// which is done when building the form\n\t\t\t\tinput.buildJSONForm(() => {});\n\t\t\t\tObject.assign(d, input.getPopulateDataFromObj(elem));\n\t\t\t\tthis.allArrayElems[input.id] = input;\n\t\t\t}\n\t\t\treturn d;\n\t\t}\n\t\t\n\t\t// Handle objects\n\t\telse if (t == 'object' && this.type == 'object') {\n\t\t\tlet d = {};\n\t\t\t// We will try to parse all remaining keys in d as a dynamic key.\n\t\t\t// So we should keep track of which keys we see while filling so we don't parse any twice.\n\t\t\tlet seen = {};\n\t\t\t\n\t\t\t// If key corresponds to static entry, populate it.\n\t\t\tfor (const elem in this.options.staticKeys) {\n\t\t\t\t// Ok if data[elem] undefined, input getPopulateDataFromObj will handle default items\n\t\t\t\tObject.assign(d, this.options.staticKeys[elem].getPopulateDataFromObj(data[elem]));\n\t\t\t\tseen[elem] = true;\n\t\t\t}\n\t\t\t\n\t\t\t// For remaining keys, try to parse according to dynamic keys\n\t\t\tthis.dynamicElems = {};\n\t\t\tfor (const elem in data) {\n\t\t\t\tif (seen[elem]) continue;\n\t\t\t\t\n\t\t\t\tlet input = this.options.dynamicKeys;\n\t\t\t\tif (!input) throw new Error('Could not parse keys ' + JSON.stringify(data));\n\t\t\t\tinput = input.cloneWithNewId();\n\t\t\t\t// Same deal as with arrays\n\t\t\t\tinput.buildJSONForm(() => {});\n\t\t\t\tthis.dynamicElems[elem] = input;\n\t\t\t\tObject.assign(d, input.getPopulateDataFromObj(data[elem]));\n\t\t\t}\n\t\t\t\n\t\t\treturn d\n\t\t}\n\t\t\n\t\t// Type didn't match anything we recognize\n\t\telse {\n\t\t\tlet str = JSON.stringify(data);\n\t\t\tlet label = this.parent ? 'Value ' + this.parent.label + ': ' : '';\n\t\t\tthrow new Error(label + 'Could not parse ' + (str ? str : 'empty value when no default was supplied'));\n\t\t}\n\t}\n\t\n\t// Return an object containing key-value pairs for data currently in the form \n\tgetPopulateData() {\n\t\tlet data = {};\n\t\tlet form = this.obj.getControl(this.formName);\n\n\t\tswitch (this.type) {\n\t\t\tcase 'string':\n\t\t\tcase 'number':\n\t\t\tcase 'function':\n\t\t\tcase 'boolean':\n\t\t\tcase 'dropdown':\n\t\t\t\tdata[this.id] = form.data[this.id];\n\t\t\t\treturn data;\n\t\t\tcase 'object':\n\t\t\t\tfor (const prop in this.options.staticKeys) {\n\t\t\t\t\tObject.assign(data, this.options.staticKeys[prop].getPopulateData());\n\t\t\t\t}\n\t\t\t\tfor (const prop in this.dynamicElems) {\n\t\t\t\t\tObject.assign(data, this.dynamicElems[prop].getPopulateData());\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t\tcase 'array':\n\t\t\t\tfor (const prop in this.allArrayElems) {\n\t\t\t\t\tObject.assign(data, this.allArrayElems[prop].getPopulateData());\n\t\t\t\t}\n\t\t\t\treturn data;\n\t\t}\n\t}\n\t\n\t// Do a \"fairly deep\" clone of an object. The ID is new and all children will be cloned as well. \n\t// Options will be kept. Array elements and dynamic keys are not kept.\n\tcloneWithNewId() {\n\t\tlet newOptions = {};\n\t\tlet value = null;\n\t\tswitch (this.type) {\n\t\t\t// No special handling for basic input types\n\t\t\tcase 'string':\n\t\t\tcase 'number':\n\t\t\tcase 'function':\n\t\t\tcase 'boolean':\n\t\t\tcase 'dropdown':\n\t\t\t\t value = new Value(this.type, this.options);\n\t\t\t\t value.obj = this.obj;\n\t\t\t\t value.formName = this.formName;\n\t\t\t\t return value;\n\t\t\tcase 'object':\n\t\t\t\t// Clone static & dynamic keys and return\n\t\t\t\tnewOptions.staticKeys = {};\n\t\t\t\tif ('default' in this.options) newOptions.default = this.options.default;\n\t\t\t\tfor (const prop in this.options.staticKeys) {\n\t\t\t\t\tnewOptions.staticKeys[prop] = this.options.staticKeys[prop].cloneWithNewId();\n\t\t\t\t}\n\t\t\t\tif (this.options.dynamicKeys) {\n\t\t\t\t\tnewOptions.dynamicKeys = this.options.dynamicKeys.cloneWithNewId();\n\t\t\t\t}\n\t\t\t\tnewOptions.inline = this.options.inline;\n\t\t\t\tvalue = new Value(this.type, newOptions);\n\t\t\t\tvalue.setObjAndFormName(this.obj, this.formName);\n\t\t\t\treturn value;\n\t\t\tcase 'array':\n\t\t\t\tnewOptions.inline = this.options.inline;\n\t\t\t\tnewOptions.arrayInput = this.options.arrayInput.cloneWithNewId();\n\t\t\t\tif ('default' in this.options) newOptions.default = this.options.default;\n\t\t\t\tvalue = new Value(this.type, newOptions);\n\t\t\t\tvalue.setObjAndFormName(this.obj, this.formName);\n\t\t\t\treturn value;\n\t\t}\n\t}\n\t\n\t// Build the JSON form input element corresponding to this object instance. \n\tbuildFormInput(callbacks) {\n\t\tswitch(this.type) {\n\t\t\tcase 'string':\n\t\t\tcase 'function':\n\t\t\tcase 'number':\n\t\t\t\treturn this.buildSimpleInput('edit');\n\t\t\tcase 'boolean':\n\t\t\t\treturn this.buildSimpleInput('checkbox');\n\t\t\tcase 'dropdown':\n\t\t\t\treturn this.buildDropdownInput();\n\t\t\tcase 'object':\n\t\t\t\treturn this.buildObjectInput(callbacks);\n\t\t\tcase 'array':\n\t\t\t\treturn this.buildArrayInput(callbacks);\n\t\t}\n\t}\n\t\n\tbuildOpenInTabButton(id, buttonText, onClick) {\n\t\treturn {\n\t\t\ttype: \"button\",\n\t\t\tid: id,\n\t\t\tcontrol: {\n\t\t\t\tlayout: \"text\",\n\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\">\" + buttonText + \"</span>\",\n\t\t\t\ticon: \"svgIcon=#alpha-icon-addCircleBorder:icon,24\",\n\t\t\t\tonClick: onClick,\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"width: 100%;\",\n\t\t\t\tclassName: \"\"\n\t\t\t},\n\t\t\tlayout: \"{content}\"\n\t\t};\n\t}\n\t\n\t// Build JSON form input for an Object input\n\tbuildObjectInput(callbacks) {\n\t\tlet allChildren = [];\n\t\t\n\t\tlet makeTabBtn = (input, btnText, tabTitle) => {\n\t\t\treturn this.buildOpenInTabButton(this.id + \"_OPEN_BTN_\"+ input.id, btnText, () => callbacks.addObjAsTab(input, tabTitle));\n\t\t};\n\t\n\t\t// Get form JSON for all static & dynamic keys\n\t\tfor (const key in this.options.staticKeys) {\n\t\t\tlet input = this.options.staticKeys[key];\n\t\t\tlet inputType = input.selected();\n\t\t\tlet inputForm = null;\n\t\t\t\n\t\t\tif (inputType && (inputType.type == 'object' || inputType.type == 'array') && !inputType.options.inline) {\n\t\t\t\tinputForm = makeTabBtn(input, \"Open \" + key, input.label + \" -- \" + key);\n\t\t\t}\n\t\t\telse inputForm = input.buildJSONForm(callbacks);\n\t\t\t\n\t\t\tallChildren.push(inputForm);\t\t\n\t\t}\n\t\t\n\t\tfor (const key in this.dynamicElems) {\n\t\t\tlet input = this.dynamicElems[key];\n\t\t\tinput.renderOptions.delete = true;\n\t\t\tinput.renderOptions.keyName = key;\n\t\t\tlet inputType = input.selected();\n\t\t\tlet inputForm = null;\n\t\t\t\n\t\t\tif (inputType && (inputType.type == 'object' || inputType.type == 'array') && !inputType.options.inline) {\n\t\t\t\tinputForm = makeTabBtn(input, \"Open \" + key, input.label + ' -- ' + key);\n\t\t\t}\n\t\t\telse inputForm = input.buildJSONForm(callbacks);\n\n\t\t\tallChildren.push(inputForm);\n\t\t}\n\t\t\n\t\t// Callback function to add a key to this object\n\t\tlet addDynamicKey = () => {\n\t\t\tlet form = this.obj.getControl(this.formName);\n\t\t\t// Get the key name from the input box and make sure it isn't empty, isn't null, and doesn't already exist\n\t\t\tlet keyName = form.data[this.id + \"_ADD_KEY_INPUT\"];\n\t\t\t// Reset key input\n\t\t\tform.data[this.id + \"_ADD_KEY_INPUT\"] = \"\";\n\t\t\tif (keyName == \"\" || !keyName) return;\n\t\t\tif (!this.options.dynamicKeys) return;\n\t\t\t\n\t\t\t// Clone dynamic keys input element, add it to this object instance, and re render\n\t\t\tlet newItem = this.options.dynamicKeys.cloneWithNewId();\n\t\t\tnewItem.buildJSONForm(null, null, null);\n\t\t\tthis.dynamicElems[keyName] = newItem;\n\t\t\tcallbacks.reRender();\n\t\t};\n\t\t\n\t\tlet items = [];\n\t\t// If we have the ability to add dynamic keys, we need to add a button to create them\n\t\tif(this.options.dynamicKeys) {\n\t\t\titems = [\n\t\t\t\t{\n\t\t\t\t\ttype: \"button\",\n\t\t\t\t\tid: this.id + \"_ADD_KEY_BTN\",\n\t\t\t\t\tcontrol: {\n\t\t\t\t\t\tlayout: \"text\",\n\t\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\">Add Key</span>\",\n\t\t\t\t\t\t\"icon\": \"\",\n\t\t\t\t\t\t\"onClick\": addDynamicKey,\n\t\t\t\t\t},\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\tstyle: \";\",\n\t\t\t\t\t\tclassName: \"\"\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"{content}\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: \"edit\",\n\t\t\t\t\tid: this.id + \"_ADD_KEY_INPUT\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfrom: this.id + \"_ADD_KEY_INPUT\",\n\t\t\t\t\t\tensure: true,\n\t\t\t\t\t},\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\ttext: \"New key name\",\n\t\t\t\t\t},\n\t\t\t\t\tlayout: 'label-above',\n\t\t\t\t\tcontrol: {\n\t\t\t\t\t\tplaceholder: \"\",\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t},\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\tstyle: \";width: 30%;\",\n\t\t\t\t\t\tclassName: \"\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t\t\n\t\tallChildren.push({\n\t\t\ttype: \"group\",\n\t\t\tid: this.id + \"_ADD_KEY_GROUP\",\n\t\t\tcontainer: {\n\t\t\t\tstyle: \";width: 100%;display: flex; flex-direction: row; width: 100%; border-top: 1px solid black;\"\n\t\t\t},\n\t\t\titems: items,\n\t\t});\n\t\t\n\t\treturn {\n\t\t\ttype: \"group\",\n\t\t\tid: this.id,\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"; width: 100%;display: flex; flex-direction: row; flex-flow: wrap; box-sizing: border-box;\"\n\t\t\t},\n\t\t\t// Show if the show hide map says we should show\n\t\t\tshow: () => {return SHOW_HIDE_MAP[this.id] === undefined ? true : SHOW_HIDE_MAP[this.id]; },\n\t\t\titems: allChildren,\n\t\t};\n\t}\n\t\n\t// Build JSON form element from array input\n\tbuildArrayInput(callbacks) {\n\t\tlet value = this.options.arrayInput;\n\t\t\n\t\t// Helper function to take an instance of Input and wrap it in a JSON form row (rows have buttons to delete)\n\t\tlet injectIntoRow = (input) => {\n\t\t\tlet inputForm = input.buildJSONForm(callbacks);\n\t\t\tlet id = \"ARRAY_ROW_\" + uuidv4();\n\t\t\t\n\t\t\treturn {\n\t\t\t\ttype: \"group\",\n\t\t\t\tshow: () => {return SHOW_HIDE_MAP[id] === undefined ? true : SHOW_HIDE_MAP[id]; },\n\t\t\t\tid: id,\n\t\t\t\tcontainer: {\n\t\t\t\t\tstyle: \";width: 100%; display: flex; flex-direction: row; flex-flow: wrap;\"\n\t\t\t\t},\n\t\t\t\titems: [\n\t\t\t\t\tinputForm,\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t\t\n\t\t// Callback for the add row onclick\n\t\tlet makeArrayRow = () => {\n\t\t\tlet input = value.cloneWithNewId();\n\t\t\tthis.allArrayElems[input.id] = input;\n\t\t\tcallbacks.reRender();\n\t\t};\n\t\t\n\t\treturn {\n\t\t\ttype: \"group\",\n\t\t\tid: this.id,\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"; width: 100%;display: flex; flex-direction: row; flex-flow: wrap; box-sizing: border-box;\"\n\t\t\t},\n\t\t\tshow: () => {return SHOW_HIDE_MAP[this.id] === undefined ? true : SHOW_HIDE_MAP[this.id]; },\n\t\t\titems: [\n\t\t\t\t// allArrayElems are Input instances, so we need to map those to JSON forms\n\t\t\t\t...Object.values(this.allArrayElems).map(injectIntoRow),\n\t\t\t\t{\n\t\t\t\t\ttype: \"button\",\n\t\t\t\t\tid: this.id + \"_ADD_BTN\",\n\t\t\t\t\tcontrol: {\n\t\t\t\t\t\tlayout: \"icon\",\n\t\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\"></span>\",\n\t\t\t\t\t\ticon: \"svgIcon=#alpha-icon-addCircleBorder:icon,24\",\n\t\t\t\t\t\tonClick: makeArrayRow,\n\t\t\t\t\t},\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\tstyle: \";\",\n\t\t\t\t\t\tclassName: \"\"\n\t\t\t\t\t},\n\t\t\t\t\tlayout: \"{content}\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n\t\n\t// Build input for \"simple\" values (number, bool, string, function)\n\tbuildSimpleInput(editType) {\n\t\tlet input = {\n\t\t\ttype: editType,\n\t\t\tid: this.id,\n\t\t\tdata: {\n\t\t\t\tfrom: this.id,\n\t\t\t\tensure: true,\n\t\t\t},\n\t\t\tshow: () => {return SHOW_HIDE_MAP[this.id] === undefined ? true : SHOW_HIDE_MAP[this.id]; },\n\t\t\tcontrol: {\n\t\t\t\tplaceholder: \"\",\n\t\t\t\twidth: \"100%\",\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"; flex: 1 1;\",\n\t\t\t\tclassName: \"\"\n\t\t\t}\n\t\t};\n\t\t\n\t\treturn input;\n\t}\n\t\n\tbuildDropdownInput() {\n\t\tlet dropdown = {\n\t\t\ttype: \"picker\",\n\t\t\tid: this.id,\n\t\t\tdata: {\n\t\t\t\tfrom: this.id,\n\t\t\t\tensure: true,\n\t\t\t},\n\t\t\tshow: () => {return SHOW_HIDE_MAP[this.id] === undefined ? true : SHOW_HIDE_MAP[this.id]; },\n\t\t\tcontrol: {\n\t\t\t\tplaceholder: \"\",\n\t\t\t\tdata: {\n\t\t\t\t\tsrc: this.options.dropdownItems,\n\t\t\t\t\tmap: [\"value\", \"text\"],\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"; flex: 1 1;\",\n\t\t\t}\n\t\t};\n\t\treturn dropdown;\n\t}\n}\n\n\n// Class to handle an input for an *abstract* value.\n// For example, we may want an input to handle a shipping address. \n// The exact information we need for that may vary by state or country. \n// However, we are collecting the same abstract thing: a shipping address. \n// So, we would create an Input with a 'shipping address' label, then add multiple \n// values to encompass all of the options a user might need to input their address.\n// That is the core difference between this and the Value class. \n// Input = abstract thing or piece of data, Value = literal JSON value that can be entered into the form\nclass Input {\n\tconstructor(options) {\n\t\tthis.renderOptions = {\n\t\t\tkeyName: '',\n\t\t\tcollapse: true,\n\t\t\tdelete: false,\n\t\t};\n\t\t\n\t\t// Dialog object and form name \n\t\tthis.obj = null;\n\t\tthis.formName = null;\n\t\n\t\tthis.parent = null;\n\t\t// Helpful to keep track of the initial render because we want to set the default dropdown choice \n\t\t// to the first one specified, but *only* on the initial render.\n\t\tthis.initialRender = true;\n\t\t// Dropdown name -> child object\n\t\tthis.childMap = {};\n\t\tthis.dropdownId = \"DROPDOWN_\" + uuidv4();\n\t\t\n\t\tif (!options) throw new Error('Must supply options');\n\t\t\n\t\tthis.id = \"GROUP_\" + uuidv4();\n\t\tSHOW_HIDE_MAP[this.id] = true;\n\t\t\n\t\t// Helper to validate that the 'values' array is of the expected form\n\t\tlet validateTypes = (t) => {\n\t\t\tif (!(t instanceof Array))\n\t\t\t\tthrow new Error(\"Expected 'values' to be an Array\");\n\t\t\t\n\t\t\tif (t.length == 0) \n\t\t\t\tthrow new Error(\"Expected 'values' to have at least one element\");\n\t\t\t\n\t\t\tfor (const item of t) {\n\t\t\t\ttypeCheck(item, 'object', \"All items in 'values' should be objects\");\n\t\t\t\ttypeCheck(item.dropdownLabel, 'string', \"Expected 'dropdownLabel' to be a string\");\n\t\t\t\tif (!item.value || !(item.value instanceof Value)) \n\t\t\t\t\tthrow new Error(\"Field 'value' in an element of 'values' must be an instance of Value\");\n\t\t\t}\n\t\t};\n\n\t\tvalidateTypes(options.values);\n\t\tthis.currDropdownValue = options.values[0].dropdownLabel;\n\t\tthis.values = typeCheck(options.values, 'object', 'options.values should be an array');\n\t\tthis.label = typeCheck(options.label, 'string', 'options.label should be a string');\n\t\tthis.comments = typeCheck(options.comments, 'string', 'options.comments should be a string');\n\t\tthis.validate = typeCheck(options.validate, 'function', 'options.validate should be a function');\n\t\tif (options.onPopulate) {;\n\t\t\tthis.onPopulate = typeCheck(options.onPopulate, 'function', 'options.onPopulate should be a function');\n\t\t} else {\n\t\t\tthis.onPopulate = null;\n\t\t}\n\t\t// If show is undefined, just default to true\n\t\tthis.show = options.show ? typeCheck(options.show, 'function', 'options.show should be a function') : (() => true);\n\t}\n\t\n\t// Helper function to return a 'values' array (used in the Input description) with a single value \n\t// Takes value, an instance of the Value object\n\tstatic singleValue(value) {\n\t\treturn [{\n\t\t\tvalue: value,\n\t\t\tdropdownLabel: ''\n\t\t}]\n\t}\n\t\n\t// Helper function to return an input that has just a single Value in the values array \n\t// Takes a type string (object, array, number, etc)\n\t// Takes a label, used for the input\n\t// Takes options, which are used in the Value constructor (so you could pass in the object description, etc)\n\t// Takes show, a callback function, defaults to return true\n\tstatic singleInput(type, label, valueOptions, inputOptions) {\n\t\tvalueOptions = valueOptions ? valueOptions : {};\n\t\tinputOptions = inputOptions ? inputOptions : {};\n\t\treturn new Input({\n\t\t\tvalues: [{value: new Value(type, valueOptions), dropdownLabel: ''}],\n\t\t\tlabel: label,\n\t\t\tcomments: inputOptions.comments ? inputOptions.comments : '',\n\t\t\tvalidate: inputOptions.validate ? inputOptions.validate : (() => true),\n\t\t\tshow: inputOptions.show ? inputOptions.show : (() => true),\n\t\t\tonPopulate: inputOptions.onPopulate,\n\t\t});\n\t}\n\t\n\t// Set the parent of this object and recursivley set parents of all children\n\tsetParent(parent) {\n\t\tthis.parent = parent;\n\t\tfor (const item of this.values) {\n\t\t\titem.value.setParent(this);\n\t\t}\n\t}\n\t\n\t// Set the dialog object and form name for this and all children\n\tsetObjAndFormName(obj, formName) {\n\t\tthis.obj = obj;\n\t\tthis.formName = formName;\n\t\t\n\t\tfor (const item of this.values) {\n\t\t\titem.value.setObjAndFormName(obj, formName);\n\t\t}\n\t}\n\t\n\t// Return a JSON object representing the data in this class\n\tserialize() {\n\t\ttry {\n\t\t\tlet value = this.childMap[this.currDropdownValue].serialize();\n\t\t\tthis.validate(value);\n\t\t\treturn value;\n\t\t} catch (e) {\n\t\t\tlet errMsg = `<p>Errors while attempting to serialize input <b>${this.label}</b>:</p>`;\n\t\t\terrMsg += '<div style = \"margin-left: 1rem;\">';\n\t\t\terrMsg += e.toString();\n\t\t\terrMsg += \"</div>\";\n\t\t\tthrow errMsg;\n\t\t}\n\t}\n\t\n\t// Return input corresponding to selected dropdown element\n\tselected() {\n\t\treturn this.childMap[this.currDropdownValue];\n\t}\n\t\n\tpropagateDefaults(hasDefault, val) {\n\t\tfor (const item of this.values) {\n\t\t\titem.value.propagateDefaults(hasDefault, val);\n\t\t}\n\t}\n\t\n\tpreprocess(obj, formName, parent) {\n\t\tthis.setParent(parent);\n\t\tthis.setObjAndFormName(obj, formName);\n\t\tthis.propagateDefaults(false);\n\t}\n\t\n\t// Similar to the method in Value. \n\t// Clone this object with a new ID, and carry across the options specified. \n\t// Children are also cloned with a new ID. \n\tcloneWithNewId() {\n\t\tlet newOptions = {\n\t\t\tvalues: [],\n\t\t\tlabel: this.label,\n\t\t\tcomments: this.comments,\n\t\t\tvalidate: this.validate,\n\t\t\tshow: this.show,\n\t\t\tonPopulate: this.onPopulate,\n\t\t};\n\t\tfor (const value of this.values) { \n\t\t\tnewOptions.values.push({\n\t\t\t\tvalue: value.value.cloneWithNewId(),\n\t\t\t\tdropdownLabel: value.dropdownLabel,\n\t\t\t});\n\t\t}\n\t\tlet i = new Input(newOptions);\n\t\ti.renderOptions = JSON.parse(JSON.stringify(this.renderOptions));\n\t\ti.setParent(this.parent);\n\t\ti.setObjAndFormName(this.obj, this.formName);\n\t\treturn i;\n\t}\n\t\n\t// Return a JSON object that can be used to set the JSON Form data.\n\t// 'data' should be a JSON object or value.\n\tgetPopulateDataFromObj(data) {\n\t\t// Loop through value definitions, searching for one that matches the data \n\t\t// If none accept, return with false\n\t\tlet recentErrs = {};\n\t\tfor (const valuedef of this.values) {\n\t\t\t// getPopulateDataFromObj can throw an error, but we don't want to instantly return failure in that case. \n\t\t\t// Instead we want to try and find at least one that doesn't fail, and use that.\n\t\t\ttry {\n\t\t\t\tlet d = valuedef.value.getPopulateDataFromObj(data);\n\t\t\t\tthis.setDropdown({item: {data: valuedef.dropdownLabel}});\n\t\t\t\tif (this.onPopulate) {\n\t\t\t\t\tthis.onPopulate(this, data);\n\t\t\t\t}\n\t\t\t\treturn d;\n\t\t\t} catch (e) {\n\t\t\t\t// Just helpful for debugging. Errors logged here may not necessarily be critical, \n\t\t\t\t// they just reflect why certain dropdown values failed to parse.\n\t\t\t\trecentErrs[valuedef.dropdownLabel] = e;\n\t\t\t}\n\t\t}\n\t\tlet errMsg = `<p>Errors while attempting to parse input <b>${this.label}</b>:</p>`;\n\t\terrMsg += '<div style = \"margin-left: 1rem;\">';\n\t\tfor (const valuedef of this.values) {\n\t\t\tif (valuedef.dropdownLabel != '') errMsg += `<p>For dropdown <b>${valuedef.dropdownLabel} </b></p>`;\n\t\t\terrMsg += recentErrs[valuedef.dropdownLabel].toString();\n\t\t}\n\t\terrMsg += \"</div>\";\n\t\t\n\t\tthrow errMsg;\n\t}\n\t\n\tgetPopulateData() {\n\t\tlet d = {};\n\t\td[this.dropdownId] = this.currDropdownValue;\n\t\tfor (const prop in this.childMap) {\n\t\t\tObject.assign(d, this.childMap[prop].getPopulateData());\n\t\t}\n\t\treturn d;\n\t}\n\t\n\t// Helper function to select one of the dropdown values and update child visibility.\n\tsetDropdown(changeInfo) {\n\t\tlet changedTo = changeInfo.item.data;\n\n\t\tfor (const dropdownLabel in this.childMap) {\n\t\t\tif (dropdownLabel == changedTo) {\n\t\t\t\tSHOW_HIDE_MAP[this.childMap[dropdownLabel].id] = true;\n\t\t\t} else {\n\t\t\t\tSHOW_HIDE_MAP[this.childMap[dropdownLabel].id] = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet form = this.obj.getControl(this.formName);\n\t\tform.data[this.dropdownId] = changedTo;\n\t\tthis.obj.setValue(this.formName, this.obj.getValue(this.formName));\n\t\tthis.currDropdownValue = changedTo;\n\t}\n\t\n\t// Return a JSON Form object based on this object instance\n\tbuildJSONForm(callbacks) {\n\t\n\t\tlet childForms = [];\n\t\t// We clear the child map in case children were removed (i.e. an Array element was deleted).\n\t\t// It will be re populated in the below loop anyway.\n\t\tthis.childMap = {};\n\t\t\n\t\tlet first = true;\n\t\tfor (const item of this.values) {\n\t\t\t// Push each child's form to the child array\n\t\t\tlet component = item.value.buildFormInput(callbacks);\n\t\t\tchildForms.push(component);\n\t\t\t\n\t\t\t// Don't want multiple children with the same label. \n\t\t\t// Alt. option is to just overwrite or something but silent failure will likely come back to haunt us.\n\t\t\tif (this.childMap[item.dropdownLabel]) {\n\t\t\t\tthrow new Error(`Multiple components with same dropdown label (${item.dropdownLabel}`);\n\t\t\t}\n\t\t\tthis.childMap[item.dropdownLabel] = item.value;\n\t\t\t\n\t\t\t// Only want to update the show hide map if this is the first render. \n\t\t\t// Otherwise we would reset the dropdown option that the user had selected.\n\t\t\tif (this.initialRender) {\n\t\t\t\tSHOW_HIDE_MAP[this.id + \"_CHILDREN\"] = false;\n\t\t\t\tSHOW_HIDE_MAP[item.value.id] = first;\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.initialRender = false;\n\t\t\n\t\t// Information used for the dropdown in the JSON Form\n\t\tlet textToVal = [];\n\t\tfor (const label in this.childMap) { \n\t\t\ttextToVal.push({text: label, value: label});\n\t\t}\n\t\t\n\t\t// Callback for when the user selects a new dropdown option\n\t\tlet onChange = (info) => {\n\t\t\tthis.setDropdown(info);\n\t\t};\n\t\t\n\t\tlet header = this.makeHeader(textToVal, onChange, childForms, callbacks);\n\t\t\n\t\treturn header;\n\t}\n\t\n\t// Helper function to create a JSON Form group with a dropdown element placed in the upper right corner\n\tmakeHeader(textToValue, onChange, children, callbacks) {\n\t\tlet init = textToValue[0].value;\n\t\tlet dropdown = {\n\t\t\ttype: \"picker\",\n\t\t\tid: this.dropdownId,\n\t\t\tdata: {\n\t\t\t\tfrom: this.dropdownId,\n\t\t\t\tensure: true,\n\t\t\t\tblank: init,\n\t\t\t},\n\t\t\tlabel: {\n\t\t\t\ttext: \"Editor Types\",\n\t\t\t},\n\t\t\tlayout: \"label-above\",\n\t\t\tcontrol: {\n\t\t\t\tplaceholder: \"\",\n\t\t\t\twidth: \"fit-content;\",\n\t\t\t\tdata: {\n\t\t\t\t\tsrc: textToValue,\n\t\t\t\t\tmap: [\"value\", \"text\"],\n\t\t\t\t},\n\t\t\t\tonChange: onChange,\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"min-width: 100px; background-color: #eaeaea; margin-left: auto;\",\n\t\t\t}\n\t\t};\n\t\t\n\t\tlet collapse = {\n\t\t\ttype: \"button\",\n\t\t\tid: this.id + \"_COLLAPSE_BTN\",\n\t\t\tcontrol: {\n\t\t\t\tlayout: \"icon\",\n\t\t\t\thtml: `<span class=\"\" style=\"\" id=\"${this.id + '_COLLAPSE_ICON'}\"></span>`,\n\t\t\t\ticon: \"svgIcon=#alpha-icon-chevronRight:icon,24\",\n\t\t\t\tonClick: () => {\n\t\t\t\t\tSHOW_HIDE_MAP[this.id + \"_CHILDREN\"] = !SHOW_HIDE_MAP[this.id + \"_CHILDREN\"];\n\t\t\t\t\tthis.obj.setValue(this.formName, this.obj.getValue(this.formName));\n\t\t\t\t\t\n\t\t\t\t\tlet rotation = SHOW_HIDE_MAP[this.id + '_CHILDREN'] ? 'rotate(90deg)' : 'rotate(0deg)';\n\t\t\t\t\tdocument\n\t\t\t\t\t\t.getElementsByClassName(this.id + '_COLLAPSE_ICON')[0]\n\t\t\t\t\t\t.querySelectorAll('svg')[0]\n\t\t\t\t\t\t.style\n\t\t\t\t\t\t.transform = rotation;\n\t\t\t\t},\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"background-color: #eaeaea;\",\n\t\t\t\tclassName: this.id + '_COLLAPSE_ICON'\n\t\t\t},\n\t\t\tlayout: \"{content}\"\n\t\t};\n\t\t\n\t\tlet deleteBtn = {\n\t\t\ttype: 'button',\n\t\t\tid: this.id + \"_DELETE_BTN\",\n\t\t\tcontrol: {\n\t\t\t\tlayout: 'icon',\n\t\t\t\ticon: 'svgIcon=#alpha-icon-trash:icon,24',\n\t\t\t\tonClick: () => {\n\t\t\t\t\tlet parent = this.parent;\n\t\t\t\t\tif(parent) {\n\t\t\t\t\t\tlet selected = parent.selected();\n\t\t\t\t\t\tif (selected.type == 'array') {\n\t\t\t\t\t\t\tdelete selected.allArrayElems[this.id];\n\t\t\t\t\t\t} else if (selected.type == 'object') {\n\t\t\t\t\t\t\tdelete selected.dynamicElems[this.renderOptions.keyName];\n\t\t\t\t\t\t\tcallbacks.deleteTab(this.id, true);\n\t\t\t\t\t\t} else return;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcallbacks.reRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"background-color: #eaeaea;\",\n\t\t\t\tclassName: \"\"\n\t\t\t},\n\t\t\tlayout: \"{content}\"\n\t\t};\n\t\t\n\t\tlet label = {\n\t\t\ttype: 'html',\n\t\t\tcontrol: {\n\t\t\t\thtml: this.label,\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tclassName: '',\n\t\t\t\tstyle: ';background-color: #eaeaea;',\n\t\t\t},\n\t\t\tlayout: '{content}',\n\t\t};\n\t\t\n\t\tlet keyName = {\n\t\t\ttype: 'html',\n\t\t\tcontrol: {\n\t\t\t\thtml: this.renderOptions.keyName,\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tclassName: '',\n\t\t\t\tstyle: ';background-color: #eaeaea;',\n\t\t\t},\n\t\t\tlayout: '{content}',\n\t\t};\n\t\t\n\t\tlet comments = {\n\t\t\ttype: 'html',\n\t\t\tcontrol: {\n\t\t\t\thtml: this.comments,\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\tclassName: '',\n\t\t\t\tstyle: 'width: 100%; background-color: #f5f5f5; margin: 1rem; padding: 1rem; font-style: italic;',\n\t\t\t},\n\t\t\tlayout: '{content}',\n\t\t};\n\t\t\n\t\tlet barItems = [];\n\t\tif (this.renderOptions.collapse) barItems.push(collapse);\n\t\tif (this.renderOptions.delete) barItems.push(deleteBtn);\n\t\tbarItems.push(label);\n\t\tif (this.renderOptions.keyName) barItems.push(keyName);\n\t\tif (Object.values(this.childMap).length > 1) barItems.push(dropdown);\n\t\tif (this.comments != '') barItems.push(comments);\n\t\t\n\t\n\t\t\n\t\treturn {\n\t\t\ttype: \"group\",\n\t\t\tid: this.id,\n\t\t\tcontainer: {\n\t\t\t\tstyle: \"width: 100%;display: flex; flex-direction: column; align-items: center; box-sizing: border-box; margin: 0px; padding: 0px; margin-bottom: 0.5rem; margin-top: 0.5rem\"\n\t\t\t},\n\t\t\t// In addition to the show hide map, we should take into account the function that the user has supplied \n\t\t\t// to show or hide. Both must return true to display the component.\n\t\t\tshow: () => {\n\t\t\t\tlet a = SHOW_HIDE_MAP[this.id] === undefined ? true : SHOW_HIDE_MAP[this.id];\n\t\t\t\tlet b = this.show(this);\n\t\t\t\treturn a && b;\n\t\t\t},\n\t\t\t// Multiple input values => display the dropdown options \n\t\t\t// Singlge input value => do not display the dropdown options\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'group',\n\t\t\t\t\tid: this.id + \"_HEADER\",\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\tstyle: `; \n\t\t\t\t\t\t\twidth: 95%; \n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tflex-direction: row; \n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t\tbackground-color: #eaeaea;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tborder: 1px solid black;\n\t\t\t\t\t\t\tflex-wrap: wrap;\n\t\t\t\t\t\t`\n\t\t\t\t\t},\n\t\t\t\t\titems: barItems,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'group',\n\t\t\t\t\tshow: () => {\n\t\t\t\t\t\treturn SHOW_HIDE_MAP[this.id + \"_CHILDREN\"] === undefined ? true : SHOW_HIDE_MAP[this.id + \"_CHILDREN\"];\n\t\t\t\t\t},\n\t\t\t\t\tid: this.id + \"_CHILDREN\",\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\tstyle: `;\n\t\t\t\t\t\t\twidth: 95%;\n\t\t\t\t\t\t\tborder: 1px solid black;\n\t\t\t\t\t\t\tborder-top: none;\n\t\t\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\t\t`\n\t\t\t\t\t},\n\t\t\t\t\titems: children,\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n\n// Given obj (dialog.object), the form name, and a config object (instance of Input or Value), \n// build and render a JSON Form.\nfunction buildFromConfig(obj, formName, configObj, style, listName) {\n\tconfigObj.preprocess(obj, formName, null);\n\tif (!obj.stateInfo) obj.stateInfo = {};\n\t\n\t\n\t// ID -> Input Object\n\tlet tabPanes = {};\n\t// Navigation Stack (empty means default tab)\n\tlet tabStack = [];\n\t\n\t// Callback to pass into the form so that we can have a button that serializes the form\n\tlet writeToFileCallback = () => {\n\t\ttry {\n\t\t\tlet json = JSON.stringify(configObj.serialize());\n\t\t\tlet file = new Blob([json], {type: 'application/json'});\n\t\t\t\n\t\t\tlet a = document.createElement('a');\n\t\t\tlet url = URL.createObjectURL(file);\n\t\t\ta.href = url;\n\t\t\ta.download = 'ConfigurationJSON';\n\t\t\tdocument.body.appendChild(a);\n\t\t\ta.click();\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.body.removeChild(a);\n\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t}, 0);\n\t\t} catch(e) {\n\t\t\tobj.stateInfo.errorMessages = e.toString();\n\t\t}\n\t\treRender();\n\t};\n\t\n\tlet loadFromFileCallback = (data) => {\n\t\tpopulateFromData(obj, formName, configObj, reRender, data);\n\t};\n\t\n\tlet saveGlobal = () => {\n\t\tlet data = encodeURIComponent(JSON.stringify(configObj.serialize()));\n\t\tobj.ajaxCallback('','','save_config_global', '', `listname=${listName}&config=${data}`)\n\t};\n\t\n\tlet saveUser = () => {\n\t\tlet data = encodeURIComponent(JSON.stringify(configObj.serialize()));\n\t\tobj.ajaxCallback('','','save_config_user', '', `listname=${listName}&config=${data}`)\n\t};\n\t\n\tlet bottomButtons = makeSQLSaveButtons(obj, saveUser, saveGlobal);\n\t\n\t// Callback to re render form. Saves current form data and restores it after re rendering.\n\tlet reRender = () => {\n\t\tconfigObj.setParent(null);\n\t\tlet oldData = configObj.getPopulateData();\n\t\t\n\t\tlet form = undefined;\n\t\ttry {\n\t\t\tform = makeTabGroup(tabPanes, tabStack, obj, style, allFormCallbacks, configObj.id);\n\t\t} catch(e) {\n\t\t\tobj.stateInfo.errorMessages = e.toString();\n\t\t}\n\t\trenderForm(obj, formName, [form, bottomButtons, makeErrorPane(obj)]);\n\t\t\n\t\tobj.setValue(formName, oldData);\n\t};\n\t\n\tfunction addObjAsTab(obj, tabTitle) {\n\t\tif (tabPanes[obj.id]) return;\n\t\t\n\t\ttabPanes[obj.id] = {object: obj, title: tabTitle};\n\t\ttabStack.push(obj.id);\n\t\treRender();\n\t}\n\t\n\t// Pop tabs off until we reach the tab we want\n\t// If 'includeSelf', then the tab with tabId is also deleted\n\tfunction deleteTab(tabId, includeSelf) {\n\t\twhile(tabStack.length > 0) {\n\t\t\tlet last = tabStack[tabStack.length - 1];\n\t\t\t\n\t\t\tif (last == tabId) {\n\t\t\t\tif (includeSelf) {\n\t\t\t\t\ttabStack.pop();\n\t\t\t\t\tdelete tabPanes[last];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\ttabStack.pop();\n\t\t\tdelete tabPanes[last];\n\t\t}\n\t\t\n\t\treRender();\n\t}\n\t\n\tlet allFormCallbacks = {\n\t\treRender: reRender,\n\t\taddObjAsTab: addObjAsTab,\n\t\tdeleteTab: deleteTab,\n\t};\n\t\n\tobj.stateInfo.callbacks = allFormCallbacks;\n\t\n\t// Build, render, populate form\n\ttabPanes[configObj.id] = {object: configObj, title: configObj.label};\n\t\n\tlet form;\n\t\n\ttry {\n\t\t// Don't need the form, but this sets some necessary information regarding dropdowns and child forms\n\t\tconfigObj.buildJSONForm(null);\n\t\tform = makeTabGroup(tabPanes, tabStack, obj, style, allFormCallbacks, configObj.id);\n\t} catch(e) {\n\t\tobj.stateInfo.errorMessages = e.toString();\n\t\tform = undefined;\n\t}\n\t\n\trenderForm(obj, formName, [form, bottomButtons, makeErrorPane(obj)]);\n\treturn reRender;\n}\n// Helper function to populate the form given an existing JSON object representing the data\nfunction populateFromData(obj, formName, input, reRender, data) {\n\ttry {\n\t\tlet d = input.getPopulateDataFromObj(data);\n\t\tobj.setValue(formName, JSON.stringify(d));\n\t} catch(e) {\n\t\tobj.stateInfo.errorMessages = e.toString();\n\t\tconsole.error(e);\n\t}\n\treRender();\n}\n\nfunction makeTabGroup(tabPaneObjs, tabStack, obj, style, callbacks, mainId) {\n\tlet panes = [];\n\tlet defaultId = undefined;\n\tlet navTo = tabStack.length > 0 ? tabStack[tabStack.length - 1] : mainId;\n\t\n\tfor (id in tabPaneObjs) {\n\t\tlet inner = tabPaneObjs[id].object.buildJSONForm(callbacks);\n\t\tlet pane = wrapInTab(inner, tabPaneObjs[id].title, id, mainId, obj);\n\t\t\n\t\tif (!defaultId && navTo == id) defaultId = pane.id;\n\t\t\n\t\tpanes.push(pane);\n\t}\n\t\n\treturn {\n\t\ttype: 'tab',\n\t\tid: 'TAB_' + uuidv4(),\n\t\tcontainer: {\n\t\t\ttheme: style,\n\t\t\ttabband: {\n\t\t\t\ttab: {initial: defaultId}\n\t\t\t}\n\t\t},\n\t\titems: panes,\n\t}\n}\n\nfunction wrapInTab(formJSON, title, id, mainId, obj) {\n\tlet inner;\n\t\n\t// Change in requirement means that we no longer want to x out tabs. But this code may be useful in the future.\n\t/* if (id == mainId) inner = title;\n\telse inner = `\n\t\t<div style=\"display: flex; flex-direction: row; align-items: center; justify-content: center;\">\n\t\t\t<button onclick=\"${obj.dialogId + '_DlgObj'}.stateInfo.callbacks.deleteTab('${id}');\" style = \"padding: 0px; height: 1.5em; width: 1.5em; margin-right: .5rem;\"> X </button>\n\t\t\t<p>${title}</p>\n\t\t</div>\n\t`; */\n\t\n\tinner = `\n\t\t<div onclick=\"${obj.dialogId + '_DlgObj'}.stateInfo.callbacks.deleteTab('${id}');\">\n\t\t\t<p>${title}</p>\n\t\t</div>\n\t`;\n\n\treturn {\n\t\ttype: 'pane',\n\t\tid: 'TAB_PANE_' + uuidv4(),\n\t\tdata: {from: ''},\n\t\tcontainer: {\n\t\t\ttitle: inner,\n\t\t\tstyle: \"display: flex; flex-direction: row; justify-content: center; align-items: center;\",\n\t\t},\n\t\titems: [formJSON],\n\t}\n}\n\nfunction makeErrorPane(obj) {\n\tlet style = 'background-color: red; color: white;';\n\tif (!obj.stateInfo.errorMessages || obj.stateInfo.errorMessages === '') style += 'display: none;';\n\t\n\treturn {\n\t\ttype: 'html',\n\t\tcontrol: {\n\t\t\thtml: \"<h3> Error </h3>\" + obj.stateInfo.errorMessages,\n\t\t},\n\t\tcontainer: {\n\t\t\tclassName: '',\n\t\t\tstyle: style,\n\t\t},\n\t\tlayout: '{content}',\n\t}\n}\n\n// Helper function to make a button to serialize the form data\nfunction makeSerializeButton(obj, writeToFileCallback, loadFromFileCallback) {\n\treturn {\n\t\ttype: \"group\",\n\t\t\"id\": \"SERIALIZE_GROUP_\" + uuidv4(),\n\t\tcontainer: {\n\t\t\tstyle: 'width: 100%; display: flex; flex-direction: row;',\n\t\t},\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: \"button\",\n\t\t\t\tid: \"SERIALIZE_BTN_\" + uuidv4(),\n\t\t\t\tcontrol: {\n\t\t\t\t\tlayout: \"text\",\n\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\">Save</span>\",\n\t\t\t\t\t\"icon\": \"\",\n\t\t\t\t\t\"onClick\": () => {\n\t\t\t\t\t\tobj.stateInfo.errorMessages = '';\n\t\t\t\t\t\twriteToFileCallback();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tstyle: \";\",\n\t\t\t\t\tclassName: \"\"\n\t\t\t\t},\n\t\t\t\tdata: {from: ''},\n\t\t\t\tlayout: \"{content}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"button\",\n\t\t\t\tid: \"LOAD_BTN_\" + uuidv4(),\n\t\t\t\tcontrol: {\n\t\t\t\t\tlayout: \"text\",\n\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\"><label for=\\\"loadFileElem\\\"> Load </label></span>\",\n\t\t\t\t\ticon: \"\",\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tobj.stateInfo.errorMessages = '';\n\t\t\t\t\t\tlet input = document.createElement('input');\n\t\t\t\t\t\tinput.type = 'file';\n\t\t\t\t\t\tinput.accept = 'application/json';\n\t\t\t\t\t\tinput.multiple = false;\n\t\t\t\t\t\tinput.onchange = _ => {\n\t\t\t\t\t\t\tlet files = Array.from(input.files);\n\t\t\t\t\t\t\tif (files.length > 0) {\n\t\t\t\t\t\t\t\tlet reader = new FileReader();\n\t\t\t\t\t\t\t\treader.readAsText(files[0]);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\treader.onloadend = (res) => {\n\t\t\t\t\t\t\t\t\tlet text = reader.result;\n\t\t\t\t\t\t\t\t\tloadFromFileCallback(JSON.parse(text));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinput.click();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tstyle: \";\",\n\t\t\t\t\tclassName: \"\"\n\t\t\t\t},\n\t\t\t\tdata: {from: ''},\n\t\t\t\tlayout: \"{content}\"\n\t\t\t},\n\t\t]\n\t}\n}\n\n\nfunction makeSQLSaveButtons(obj, saveUser, saveGlobal) {\n\treturn {\n\t\ttype: \"group\",\n\t\t\"id\": \"SERIALIZE_GROUP_\" + uuidv4(),\n\t\tcontainer: {\n\t\t\tstyle: 'width: 100%; display: flex; flex-direction: row;',\n\t\t},\n\t\titems: [\n\t\t\t{\n\t\t\t\ttype: \"button\",\n\t\t\t\tid: \"SERIALIZE_BTN_\" + uuidv4(),\n\t\t\t\tcontrol: {\n\t\t\t\t\tlayout: \"text\",\n\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\">Save to Current User</span>\",\n\t\t\t\t\t\"icon\": \"\",\n\t\t\t\t\t\"onClick\": () => {\n\t\t\t\t\t\tobj.stateInfo.errorMessages = '';\n\t\t\t\t\t\tsaveUser();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tstyle: \";\",\n\t\t\t\t\tclassName: \"\"\n\t\t\t\t},\n\t\t\t\tdata: {from: ''},\n\t\t\t\tlayout: \"{content}\"\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: \"button\",\n\t\t\t\tid: \"LOAD_BTN_\" + uuidv4(),\n\t\t\t\tcontrol: {\n\t\t\t\t\tlayout: \"text\",\n\t\t\t\t\thtml: \"<span class=\\\"\\\" style=\\\"\\\"><label for=\\\"loadFileElem\\\"> Save Globally </label></span>\",\n\t\t\t\t\ticon: \"\",\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tobj.stateInfo.errorMessages = '';\n\t\t\t\t\t\tsaveGlobal();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontainer: {\n\t\t\t\t\tstyle: \";\",\n\t\t\t\t\tclassName: \"\"\n\t\t\t\t},\n\t\t\t\tdata: {from: ''},\n\t\t\t\tlayout: \"{content}\"\n\t\t\t},\n\t\t]\n\t}\n}",
        "layoutType": "ContainerWidth",
        "previewMode": "Default",
        "useDragScrolling": "Auto",
        "pageTitle": "UX",
        "waitMsg": {
            "message": {
                "text": "Wait...",
                "waitIcon": "css/A5System/Images/wait.gif"
            },
            "cssAnimation": {
                "size": "32"
            }
        },
        "globalSettings": {
            "labelWidth": "1in"
        },
        "serverSideEvents": {
            "canAjaxCallback": "",
            "afterAjaxCallback": ""
        },
        "XbasicFunctionDeclarations": "function user_list_config_settings as c (e as p)\n\tdim username as c = context.security.currentuser\n\t\n\tif .not. context.security.callresult.success then \n\t\tusername = \"\"\n\tend if\n\t\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"username\", username)\n\targs.add(\"listname\", e.listname)\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\tdim sql as c\n\tsql = \"SELECT CONFIG FROM alpha_anywhere_dynamic_list_settings  WHERE USER_NAME = :username AND LIST_NAME = :listname\"\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\t'execute the SQL - pass in the sql::arguments object\n\tflag = cn.execute(sql,args)\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tuser_list_config_settings = \"console.error('\" + errortext + \"');\"\n\t\tcn.close()\n\t\tend\n\tend if\n\t'DIM a SQL::Resultset object\n\tdim rs as sql::resultset\n\trs = cn.resultset\n\t'get the JSON from the query\n\tdim json as c = rs.tostring()\n\t\n\tif json == \"\" then\n\t\tuser_list_config_settings = \"{dialog.object}.stateInfo.userListSettings = null\";\n\telse\n\t\tuser_list_config_settings = \"{dialog.object}.stateInfo.userListSettings = \" + json + \";\"\n\tend if\n\t\n\t'Clean up by freeing the resultset and then closing the database\n\tcn.freeresult()\n\tcn.close()\n\t\nend function\n\nfunction global_list_config_settings as c (e as p)\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"listname\", e.listname)\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\tdim sql as c\n\tsql = \"SELECT CONFIG FROM alpha_anywhere_dynamic_list_settings  WHERE LIST_NAME = :listname AND GLOBAL = .t.\"\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\t'execute the SQL - pass in the sql::arguments object\n\tflag = cn.execute(sql,args)\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tglobal_list_config_settings = \"console.error('\" + errortext + \"');\"\n\t\tcn.close()\n\t\tend\n\tend if\n\t'DIM a SQL::Resultset object\n\tdim rs as sql::resultset\n\trs = cn.resultset\n\t'get the JSON from the query\n\tdim json as c = rs.tostring()\n\t\n\tif json == \"\" then\n\t\tglobal_list_config_settings = \"{dialog.object}.stateInfo.globalListSettings = null\";\n\telse\n\t\tglobal_list_config_settings = \"{dialog.object}.stateInfo.globalListSettings = \" + json + \";\"\n\tend if\n\t\n\t'Clean up by freeing the resultset and then closing the database\n\tcn.freeresult()\n\tcn.close()\n\t\nend function\n\nfunction save_config_global as c (e as p)\n\tdim username as c = context.security.currentuser\n\t\n\tif .not. context.security.callresult.success then \n\t\tusername = \"\"\n\tend if\n\t\n\tdim has_permissions as L = context.security.isUserInRole(username, \"ADMINISTRATOR\")\n\tif (.not. context.security.callresult.success) .or. (.not. has_permissions) then \n\t\tsave_config_global = \"alert('You do not have the permissions to save the configuration globally');\"\n\t\tend \n\tend if\n\t\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"listname\", e.listname)\n\targs.add(\"config\", e.config)\n\targs.add(\"username\", username)\n\t\n\tdim sql as c\n\tdim config_exists as l = global_config_exists(e)\n\t\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\t\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\tcn.ReportNotFoundAsWarning = .t.\n\t\n\tif config_exists == .f. then\n\t\tflag = cn.execute(\"INSERT INTO alpha_anywhere_dynamic_list_settings (CONFIG, LIST_NAME, GLOBAL, USER_NAME) VALUES (:config, :listname, .t., :username)\", args)\n\telse \n\t\tflag = cn.execute(\"UPDATE alpha_anywhere_dynamic_list_settings SET CONFIG = :config WHERE LIST_NAME = :listname AND GLOBAL = .t.\", args)\n\tend if\n\t\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tsave_config_global = \"console.error('\" + errortext + \"');\"\n\t\tcn.close()\n\t\tend\n\tend if\n\t\n\tsave_config_global = \";\"\n\tcn.close()\nend function\n\nfunction save_config_user as c (e as p)\n\tdim username as c = context.security.currentuser\n\t\n\tif .not. context.security.callresult.success then \n\t\tusername = \"\"\n\tend if\n\t\n\tif username == \"\" then \n\t\tsave_config_user = \"alert('Please sign in to save the configuration');\"\n\t\tend \n\tend if\n\t\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"listname\", e.listname)\n\targs.add(\"config\", e.config)\n\targs.add(\"username\", username)\n\t\n\tdim sql as c\n\tdim config_exists as l = user_config_exists(e, username)\n\t\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\t\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\tcn.ReportNotFoundAsWarning = .t.\n\t\n\tif config_exists == .f. then\n\t\tflag = cn.execute(\"INSERT INTO alpha_anywhere_dynamic_list_settings (CONFIG, LIST_NAME, GLOBAL, USER_NAME) VALUES (:config, :listname, .f., :username)\", args)\n\telse \n\t\tflag = cn.execute(\"UPDATE alpha_anywhere_dynamic_list_settings SET CONFIG = :config WHERE LIST_NAME = :listname AND USER_NAME = :username\", args)\n\tend if\n\t\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tsave_config_user = \"console.error('\" + errortext + \"');\"\n\t\tcn.close()\n\t\tend\n\tend if\n\t\n\tsave_config_user = \";\"\n\tcn.close()\nend function\n\n\n\nfunction global_config_exists as l (e as p)\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"listname\", e.listname)\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\tdim sql as c\n\tsql = \"SELECT CONFIG FROM alpha_anywhere_dynamic_list_settings  WHERE LIST_NAME = :listname AND GLOBAL = .t.\"\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\t'execute the SQL - pass in the sql::arguments object\n\tflag = cn.execute(sql,args)\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tglobal_config_exists = .f.\n\t\tcn.close()\n\t\tend\n\tend if\n\t'DIM a SQL::Resultset object\n\tdim rs as sql::resultset\n\trs = cn.resultset\n\t'get the JSON from the query\n\tdim json as c \n\t\n\tif rs.tostring() == \"\" then\n\t\tglobal_config_exists = .f.\n\telse\n\t\tglobal_config_exists = .t.\n\tend if\n\t\n\t'Clean up by freeing the resultset and then closing the database\n\tcn.freeresult()\n\tcn.close()\t\nend function\n\n\n\nfunction user_config_exists as l (e as p, username as c)\n\t'DIM a SQL arguments object\n\tdim args as sql::arguments\n\targs.add(\"listname\", e.listname)\n\targs.add(\"username\", username)\n\t'DIM an Xbasic AlphaDAO connection object\n\tdim cn as sql::connection\n\tdim flag as l\n\t''open the connection object to connect to the Database\n\tflag = cn_open(cn,\"::Name::conn\")\n\tdim sql as c\n\tsql = \"SELECT CONFIG FROM alpha_anywhere_dynamic_list_settings  WHERE LIST_NAME = :listname AND USER_NAME = :username\"\n\t'turn portable SQL on. (for more information on portable sql search in help (https://www.alphasoftware.com/documentation)\n\tcn.PortableSQLEnabled = .t.\n\t'execute the SQL - pass in the sql::arguments object\n\tflag = cn.execute(sql,args)\n\tif flag = .f. then \n\t\t'an error occurred - get the error message from cn.callresult.text \n\t\t'report the error, close the database and then end the script\n\t\tdim errortext as c \n\t\terrortext = js_escape(cn.callresult.text)\n\t\tuser_config_exists = .f.\n\t\tcn.close()\n\t\tend\n\tend if\n\t'DIM a SQL::Resultset object\n\tdim rs as sql::resultset\n\trs = cn.resultset\n\t'get the JSON from the query\n\tdim json as c \n\t\n\tif rs.tostring() == \"\" then\n\t\tuser_config_exists = .f.\n\telse\n\t\tuser_config_exists = .t.\n\tend if\n\t\n\t'Clean up by freeing the resultset and then closing the database\n\tcn.freeresult()\n\tcn.close()\t\nend function\n",
        "onTimerEventInterval": 60,
        "securityDeniedAction": "Redirect to login page",
        "clientSideEvents": {
            "onAjaxCallbackFailed": "",
            "onAjaxCallbackNotAvailable": "",
            "onAjaxCallbackNotAllowed": "",
            "onBeforeCreate": "",
            "onServerSideEventHandlerError": "",
            "onFieldValidationError": "",
            "onInitializeComplete": "{dialog.object}.getUserSavedListConfig = function(listName) {\n\tlistName = encodeURIComponent(listName);\n\t\n\treturn new Promise((resolve, reject) => {\n\t\t{dialog.Object}.ajaxCallback('','','user_list_config_settings', '', `listname=${listName}`, {onComplete: resolve})\n\t});\n\t\n}\n\n{dialog.object}.getGlobalSavedListConfig = function(listName) {\n\tlistName = encodeURIComponent(listName);\n\t\n\treturn new Promise((resolve, reject) => {\n\t\t{dialog.Object}.ajaxCallback('','','global_list_config_settings', '', `listname=${listName}`, {onComplete: resolve})\n\t});\n\t\n}",
            "beforePrepare": "",
            "afterPrepare": "",
            "afterValidate": "",
            "onTabPaneChanged": "",
            "beforeRptSectionRowPrepare": "",
            "afterRptSectionRowPrepare": "",
            "canRptSectionRowAdd": "",
            "afterRptSectionRowAdd": "",
            "canRptSectionRowDelete": "",
            "afterRptSectionRowDelete": "",
            "onStateChange": "",
            "onDataStateChange": "",
            "afterControlBasedOnClientSideDataCacheRefreshed": "",
            "onControlFocus": "",
            "onRptSectionFocus": "",
            "onRptSectionRowChange": "",
            "canResetForm": "",
            "afterResetForm": "",
            "canRecordNavigate": "",
            "afterRecordNavigate": "",
            "onSynchronizeDialog": "",
            "afterPopulateFromTable": "",
            "afterPopulateNewRecord": "",
            "onRenderComplete": "",
            "onAndroidBackButton": "",
            "onPanelActivate": "",
            "afterSaveToRepository": "",
            "afterLoadFromRepository": "",
            "afterGoogleVisualization": "",
            "canDeleteParentRecord": "",
            "afterDeleteParentRecord": "",
            "onOrientationChange": "",
            "onKeyboard": "",
            "onCordovaReady": "",
            "onPhoneGapReady": "",
            "onImageError": "",
            "onSignatureCaptureToggle": "",
            "onSignatureCaptureAccept": "",
            "onTimer": "",
            "beforeOnTimer": "",
            "canLogin": "",
            "afterLogin": "",
            "afterCordovaLoginWithGoogle": "",
            "afterFailedLogin": "",
            "canLogout": "",
            "afterLogout": "",
            "onSessionTimeoutWarning": "",
            "onServerSideListSummaryCompute": "",
            "beforeHTMLReportExport": "",
            "onConnectionChange": "",
            "appCache_cached": "",
            "appCache_checking": "",
            "appCache_downloading": "",
            "appCache_error": "",
            "appCache_noupdate": "",
            "appCache_obsolete": "",
            "appCache_progress": "",
            "appCache_updateready": "",
            "onOAuthCompleted": "",
            "onControlBlur": "",
            "onControlChange": "",
            "onBeforePersistControlValuesToLocalStorage": "",
            "onPersistControlValuesToLocalStorage": "",
            "onRestoreVariablesFromLocalStorage": "",
            "onRestoreComponentStateFromLocalStorage": "",
            "localStorageEncryption": "",
            "localStorageDecryption": "",
            "securityNotAuthenticated": "",
            "securityPermissionDenied": "",
            "webSocketOnMessage": "",
            "webSocketServerClose": "",
            "webSocketSendMessageFail": "",
            "onOAuthAuthorize": "",
            "afterGoogleAddressSelect": "",
            "onBeforeClientSideDataCacheRead": "",
            "afterClientSideDataCacheAjaxCallback": "",
            "onWatchEvent": "",
            "onWindowResize": "",
            "onPusherMessage": "",
            "onDestroy": ""
        },
        "onlyValidateChangedFields": true,
        "edit": {
            "field_error_style": {
                "type": "Block",
                "showWarning": true,
                "icon": "<Specified by Style>",
                "controlContainer_classname": ""
            },
            "row_errors_window_title": "Error",
            "row_errors_window_style": "color: red; width: 6in; height: 2in;",
            "fieldValidationErrorMessage": "Form has errors."
        },
        "activeLanguage": "<Default>",
        "datePicker": {
            "dayNames": "Sun,Mon,Tue,Wed,Thu,Fri,Sat",
            "monthNames": "January,February,March,April,May,June,July,August,September,October,November,December",
            "firstDayOfWeek": 1,
            "todayButtonText": "Today",
            "closeButtonText": "Close"
        },
        "clientSideDateFormat": "MM/dd/yyyy&&0h:0m AM",
        "fontScalingOption": "All",
        "helpTableType": "DBF",
        "fieldHelpWindowStyle": "modal-resizeable",
        "customization": {
            "resetFormMessage": "Are you sure you want to reset the form?",
            "resetFormTitle": "Warning",
            "resetFormIcon": "<Specified by Style>",
            "resetFormYesButton": "Yes",
            "resetFormNoButton": "No",
            "windowTitleDirection": "ltr",
            "dirtyWarning": "You must first save your changes or cancel changes by clicking the Reset button.",
            "dirtyWarningTitle": "Notice",
            "dirtyWarningIcon": "<Specified by Style>",
            "deleteRecordWarningTitle": "Delete Record",
            "deleteRecordWarningMessage": "Are you sure you want to delete this record?"
        },
        "dataBinding": {
            "computeDataBindingCodeAtDesignTime": true,
            "computeDataBindingCodeAtDesignTimePrompt": "Prompt",
            "autoRefreshSchemaOnLoad": true,
            "autoRefreshPromptFirst": "Prompt",
            "precalc": {
                "flagCodeComputed": false
            },
            "computeDataBindingEveryTimeComponentIsSaved": true,
            "flagBindToJSONForm": false,
            "auto_define_jsonform": false
        },
        "info": {
            "createdBy": "lukes",
            "dateCreated": "2024-6-28",
            "dateLastEdited": "2024-7-6",
            "revisionnumber": 1235
        },
        "CSSSubThemeDefinition": ".json-form-dropdown-hidden {\n\toverflow: hidden;\n\theight: 0px;\n}",
        "flagShowCommentsInTree": true,
        "treeCommentOffset": "6",
        "renderUXLocation": {
            "type": "window",
            "sizeToElement": true
        },
        "checkSessionEvery": 1,
        "warningIntervalBeforeExpiration": 1,
        "sessionTimeOutWarningMessage": "Your session will expire in {secondsToSessionEnd} seconds. Click the button to extend your session.",
        "sessionExtendSessionButtonLabel": "Extend Session",
        "sessionTimeoutWarningDialogTitle": "Warning",
        "sessionHasExpiredMessage": "Your session has expired.",
        "sessionHasExpiredButtonLabel": "OK",
        "sessionHasExpiredAction": "Nothing",
        "sessionHasExpiredRedirectPage": "<self>",
        "sessionHasExpiredDialogTitle": "Notice",
        "sessionHasExpiredOKButtonJavascript": "<ReloadThisPage>",
        "login": {
            "errorMessageStyle": "color: red;",
            "logoutDoesFullPageReload": true,
            "persisent": false,
            "persistentLoginAlwaysAllowed": "",
            "persistentduration": 60000,
            "afterLogin": "RedirectToTargetPage",
            "afterLoginRedirectPage": "<Default>",
            "afterLoginTargetPanel": "",
            "persistentLogin_loginPanel": "",
            "securityOptionsJSON": "",
            "twofactoreventfunctionname": "",
            "hasResetPasswordFeature": false,
            "hasCreateAccountFeature": false,
            "otherFeaturesJSON": "",
            "createAccountSettingsJSON": "",
            "hasLoginWithGoogle": false,
            "googleSettingsJSON": "",
            "cognitoSettingsJSON": "",
            "hasLoginWithCognito": false
        },
        "applyResponsiveDesignSettings": true,
        "responseDesignRulesMode": "FirstTrue",
        "localStorage": {
            "namespace": "<Default>",
            "__version": 1,
            "workingPreviewTestingMode": "Browser",
            "variablesToNotPersist": ""
        },
        "securityAppliedClientSide": true,
        "preRenderUXatDesignTime": true,
        "preRenderComputeWhen": "Every time component is saved",
        "page_fields": [
            {
                "controlType": "layout_directive_ContainerBegin",
                "display": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=1f6db566-bdac-444a-93b6-93a142e117e1}{I:'$$format.border.style.dash'} [Container: FLEXLAYOUT_1]",
                "idInternal": "1f6db566-bdac-444a-93b6-93a142e117e1",
                "lastIndex": 3,
                "crc": "4294932750",
                "v": {
                    "container": {
                        "ID": "FLEXLAYOUT_1",
                        "style": "display: flex; justify-content: center; align-content: center; box-sizing: border-box; margin: 2px; padding: 2px;",
                        "contentAlignment": "Center",
                        "width": "100%;",
                        "nonFloating": true,
                        "buttonGroup": {
                            "orientation": "Horizontal"
                        },
                        "subType": "None",
                        "contentVerticalAlign": "Center",
                        "CSSGridJSON": "",
                        "useFlex": true,
                        "useFlexLeft": false,
                        "alignItems": "",
                        "containersettype": "",
                        "edgeOffset": "",
                        "allowScrolling": false,
                        "scrolling": {
                            "axis": "Both",
                            "stopPropogation": false,
                            "isDefined": false,
                            "indicator": {
                                "v": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "right",
                                    "offset": "0px",
                                    "top": "0px",
                                    "bottom": "0px"
                                },
                                "h": {
                                    "show": true,
                                    "className": "",
                                    "barClassName": "",
                                    "location": "top",
                                    "offset": "0px",
                                    "left": "0px",
                                    "right": "0px"
                                }
                            }
                        },
                        "pull": {
                            "isDefined": false,
                            "javascript": {
                                "onPullRelease": "",
                                "onPullEnd": "",
                                "onPull": ""
                            },
                            "pullpastEnd": {
                                "YSetting": "auto",
                                "XSetting": "auto",
                                "duration": 1000
                            }
                        },
                        "constrainTabKey": "No",
                        "constrainJavascriptFunction": ""
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": ""
                    },
                    "localxbasic": "",
                    "localjavascript": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 0,
                        "isContainerStart": true,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 1,
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "$$format.border.style.dash",
                        "displayText": "[Container: FLEXLAYOUT_1]",
                        "parentPanelCardId": "",
                        "lastID": "f70ecb7f-02b0-41d2-ace8-f2176f161325",
                        "break": false,
                        "display": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=1f6db566-bdac-444a-93b6-93a142e117e1}{I:'$$format.border.style.dash'} [Container: FLEXLAYOUT_1]"
                    },
                    "listview": {
                        "allchildren": ""
                    }
                },
                "precalc": {
                    "ControlHTML": "<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.FLEXLAYOUT_1\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"\"  style=\"padding: 2px; margin: 2px; display: flex; width: 100%; box-sizing: border-box; justify-content: center; align-content: center; align-items: center; \"  ><!--DIV for Container control-->",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "dialog_formcontrol",
                "display": "{B=White,Light Blue}{I:'vertline'}{Data=bb9ffb39-e228-41c8-8fbe-d36c49f528ae}{I:'$$control.form'} [BUILDER]<<break>>",
                "idInternal": "bb9ffb39-e228-41c8-8fbe-d36c49f528ae",
                "parentContainer": 1,
                "displayODtree": "{B=White,Light Blue}{I:'vertline'}{Data=bb9ffb39-e228-41c8-8fbe-d36c49f528ae}{I:'$$control.form'} [BUILDER]<<break>>",
                "crc": "4294901958",
                "v": {
                    "controlType": "formbox",
                    "variableName": "BUILDER",
                    "type": "Character",
                    "maxLength": -1,
                    "watermark": {
                        "text": "<FieldLabel>"
                    },
                    "precalc": {
                        "javascriptAbstractSetupCode": "",
                        "_jsOnChangeFunction": "function onChange_BUILDER_bb9ffb39e22841c88fbed36c49f528ae(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('BUILDER');};"
                    },
                    "lookup": {
                        "flagIsdefined": false,
                        "editCombo": {
                            "openLookupOnFocus": false
                        }
                    },
                    "textboxAutocorrect": true,
                    "textboxAutoCapitalize": true,
                    "label": "Builder",
                    "class": "<Default>",
                    "breakType": "After",
                    "breakHeight": ".1in",
                    "breakHorizontalSpace": ".1in",
                    "labelClass": "<Default>",
                    "labelPosition": "None",
                    "labelWidth": "{Global.LabelWidth}",
                    "labelAlignment": "Center",
                    "repeatingSectionColumnHeading": "<FieldLabel>",
                    "embeddedJavascriptControl": true,
                    "helpIcon": "images/$$generic.help.png.a5image",
                    "showHelpIcon": "None",
                    "helpIconBehavior": "ShowHelpOnClick",
                    "clientSideFormat": {
                        "type": "Mask",
                        "allowMultiple": false,
                        "separatorCharacter": ",",
                        "trimTrailingSeparatorOnBlur": false
                    },
                    "onChange_ValidationOption": "Client-side only",
                    "dataBinding": {
                        "updateable": true,
                        "image": {
                            "type": "JPG",
                            "noImageFoundImage": "<None>",
                            "newRecordImage": "<None>"
                        },
                        "ink": {
                            "hasbackgroundimage": false,
                            "backgroundimage": "",
                            "inkunits": 1
                        },
                        "encrypted": false,
                        "encryptionkey": ""
                    },
                    "textboxSubTheme": "",
                    "getFunction": "",
                    "setFunction": "",
                    "datePicker": {
                        "displayTimePicker": false,
                        "openMethod": "ClickIcon",
                        "dateFormat": "<Default>",
                        "iconNumber": 2,
                        "OKButtonLabel": "OK",
                        "CancelButtonLabel": "Cancel",
                        "userMustSelectFromDatePicker": false,
                        "multiple": {
                            "allow": false,
                            "separators": ".."
                        },
                        "hasMask": false,
                        "format": {
                            "mask": ""
                        },
                        "timePickerOptionsDefined": false,
                        "display": false,
                        "useComboBoxes": true,
                        "lowYear": 1950,
                        "highYear": 2050,
                        "switchYear": 30,
                        "lowDate": "",
                        "highDate": "",
                        "disabledDays": "",
                        "disabledDates": ""
                    },
                    "displayAsSlider": false,
                    "flags": {
                        "clientSideDefinition": false
                    },
                    "localXbasic": "",
                    "localJavascript": "",
                    "controlContainerStyle": "",
                    "cssGridItemPropertiesJSON": "",
                    "info": {
                        "level": 1,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": false,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": true,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "1f6db566-bdac-444a-93b6-93a142e117e1",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 2,
                        "color": "",
                        "icon": "$$control.form",
                        "displayText": "[BUILDER]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{B=White,Light Blue}{I:'vertline'}{Data=bb9ffb39-e228-41c8-8fbe-d36c49f528ae}{I:'$$control.form'} [BUILDER]<<break>>"
                    },
                    "formbox": {
                        "height": "98%",
                        "width": "98%",
                        "fillPanelContainer": false,
                        "definitionJSON": "{\n\t\"_state\": {\n\t\t\"showPane\": {\n\t\t\t\"css\": false,\n\t\t\t\"javascript\": false,\n\t\t\t\"items\": true,\n\t\t\t\"preview\": true\n\t\t},\n\t\t\"tabPage\": \"FormLayout\",\n\t\t\"flagShowLineNumbers\": false,\n\t\t\"LayoutSelected_n\": 1,\n\t\t\"fieldSelected_n\": 0,\n\t\t\"layoutGenieFieldSelected_c\": \"\",\n\t\t\"fieldselected_c\": \"\",\n\t\t\"itemSelected_c\": \"\",\n\t\t\"groupSelected_c\": \"\",\n\t\t\"cssMode\": 1,\n\t\t\"jsmode\": 1,\n\t\t\"selected_javascriptLocal_c\": \"\",\n\t\t\"flagPreviewOpen\": false\n\t},\n\t\"formview\": {\n\t\t\"datasource\": {\n\t\t},\n\t\t\"formProperties\": {\n\t\t\t\"hasMultipleLayouts\": false,\n\t\t\t\"theme\": \"{dialog.style}\",\n\t\t\t\"item\": {\n\t\t\t\t\"className\": \"listItem\",\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t},\n\t\t\t\t\"description\": {\n\t\t\t\t\t\"style\": \"\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"javascript\": {\n\t\t\t\t\"onChange\": \"\",\n\t\t\t\t\"onInitialize\": \"\"\n\t\t\t},\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"namedLayoutsJSON\": \"[]\"\n\t\t},\n\t\t\"fields\": [],\n\t\t\"items\": [],\n\t\t\"groups\": [],\n\t\t\"layouts\": [\n\t\t{\n\t\t\t\"layoutName\": \"default\",\n\t\t\t\"defaultLayout\": false,\n\t\t\t\"layoutDataType\": \"Data\",\n\t\t\t\"layoutDefinition\": \"\",\n\t\t\t\"responsiveRulesJSON\": \"\",\n\t\t\t\"defaultTemplate\": \"\",\n\t\t\t\"postProcessJavascript\": \"\",\n\t\t\t\"layoutType\": \"Genie\",\n\t\t\t\"last_layoutGenieFieldSelected_c\": \"\",\n\t\t\t\"itemsArray\": [],\n\t\t\t\"precalc\": \"*gzip:H4sIAAAAAAAAC4VTYWvbMBD9Pth/EBojGzgsGf1kt4Wl3cbYiEtpt0EbhmKdYzFZEpIcNxj/9+mUeEkobb+Y80nv3bt3p7uO+o0BmhK6sroxNKGC49+XT98/f73Ob69CptDKM6HAhoOOOr+REcCFM5Jt0lLCQ0bwO+bCQuGFVqnVbZa9eGObK6Vu09YykxHaJzQgdOOxAqrxULsQ3+2FLhvvtfqvdHZ7c5PP/0x3Qq2WUeaeRRTxduVrPKGnzjBFCsmcO7un95TEhmJ4zhwvTz/ghXPkR2BAuPXqWwjP3jBpKjbG9NhCrddwIWwhYaYtB5tiPvl4EoBaXUhR/A3YslGx23fvSUemWd8/6WaG+lHUnNUxcWxFhzBQvg/pgNp6+GM47sLdwR4TKgfywZ7L6/zqMv81n+W/o0eu0u3OWw6usMIgU9Ti4WGw/XlZnHkWEaXVNSaDb5GvZI30P5lsYMcDyjUWf7xtIKFrJkUAw6EzhvkqWSMGPcpev+pj40uQR6K2JYaRvChx71ykGi+h1EHI8Y6E5Syg0pLHYSBpK7ivMJ5OJm8Pi9CDrp0tcCMXCa2ZwWgU5Y+SEYodLZ6bMi58Og2r8Fg0DnYYYlzWJ1kqEKvKp2Rihme1ZE64lKDqjITFtPFNVYJzUI9KhVfWL/rFP9NQtxT8AwAA\"\n\t\t}],\n\t\t\"javascriptLocal\": [],\n\t\t\"css\": \"\",\n\t\t\"Javascript\": \"\"\n\t}\n}"
                    }
                },
                "precalc": {
                    "ControlHTML": "<div class=\"A5CWLayout\" style=\"width: 98%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.BUILDER\" class=\"{dialog.componentName}_BUILDER\"></div>\n\t\t<!--FldE-->\n</div><!--breakbegin--><br  style=\"clear:both; \" /><!--breakend-->",
                    "DesignViewHTML": "",
                    "columnInfo": "'BUILDER': {info: {controlType: 'formbox'}, hiddenVal: false, type: 'input,label', isCalc: false, hlp: '', isArray: false, dataType: 'C'  }\n"
                },
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 0
            },
            {
                "controlType": "layout_directive_ContainerEnd",
                "display": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=f70ecb7f-02b0-41d2-ace8-f2176f161325}{I:'vertLineCap'} [Container End: FLEXLAYOUT_1]<<break>>",
                "idInternal": "f70ecb7f-02b0-41d2-ace8-f2176f161325",
                "displayODtree": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=f70ecb7f-02b0-41d2-ace8-f2176f161325}{I:'vertLineCap'} [Container End: FLEXLAYOUT_1]<<break>>",
                "crc": "4294915105",
                "precalc": {
                    "ControlHTML": "</div><div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n",
                    "DesignViewHTML": ""
                },
                "isCollapsed": false,
                "parentIsCollapsed": false,
                "containerStartIndex": 1,
                "__flagwrapcontentsindiv": true,
                "v": {
                    "container": {
                        "BreakType": "After",
                        "BreakHeight": ".1in",
                        "breakHorizontalSpace": ".1in",
                        "parentIsNonFloating": true
                    },
                    "info": {
                        "level": 0,
                        "isContainerStart": false,
                        "isTabControlStart": false,
                        "isContainerEnd": true,
                        "isTabControlEnd": false,
                        "isTabPaneEnd": false,
                        "lastItemInTabPane": false,
                        "inContainer": false,
                        "inCSSGridContainer": false,
                        "inRepeatingSection": false,
                        "inTabPane": false,
                        "parentContainerID": "",
                        "repeatingSectionParentId": "",
                        "parentTabID": "",
                        "parentTabPaneID": "",
                        "index": 3,
                        "containerStartID": "1f6db566-bdac-444a-93b6-93a142e117e1",
                        "color": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}",
                        "icon": "vertLineCap",
                        "displayText": "[Container End: FLEXLAYOUT_1]",
                        "parentPanelCardId": "",
                        "break": true,
                        "display": "{C=#0+0+127,White}{B=White,Light Blue}{F=+B}{Data=f70ecb7f-02b0-41d2-ace8-f2176f161325}{I:'vertLineCap'} [Container End: FLEXLAYOUT_1]<<break>>"
                    }
                }
            }
        ],
        "builderType": "Dialog2",
        "guid": "f00755f6-dbc7-4e2b-80ea-69180db172ab",
        "componentName": "LIST_CONFIGURE_UX",
        "componentFilename": "C:\\Users\\lukes\\Documents\\AlphaAnywhere\\Phase 1 Project\\Phase 1 Project.WebProjects\\Default.WebProject\\list_configure_ux.a5wcmp",
        "_style_versionNumber": 4,
        "_style_hasSassOverrides": false,
        "_style_hasCSSTweaks": false,
        "_style_hasCSS_or_subtheme_tweaks": false,
        "useCompactTheme": false,
        "styleTweaksCSS": "",
        "styleTweaksSubthemes": "",
        "controlflowdirection": "ltr",
        "SVGLinkedFiles": "",
        "localsvg": "",
        "createAppCacheVersion": false,
        "createAppCacheVersionC": "No",
        "appcache": {
            "pageName": "<Default>",
            "pageTitle": "",
            "hasHomeScreenIcons": false,
            "homeScreenIconName": "",
            "icons": {
                "precomposed": false
            },
            "pageHeadSection": ""
        },
        "clientsideNumberFormatDecimal": "period",
        "clientsideNumberFormatThousands": "comma",
        "dataSeriesPublishToClientSide": false,
        "showLineNumbersInControlsList": false,
        "saveFileType": "Formatted JSON",
        "keyboardShortcutsJSON": "",
        "preRenderWarningMessageShow": false,
        "autoSetPreRenderOnForAllUX": true,
        "selected": "f70ecb7f-02b0-41d2-ace8-f2176f161325\n",
        "designPaneIndex": 1,
        "masterPaneC": "JavascriptFunctions",
        "serverSideEventIndex": 1,
        "clientSideEventIndex": 10,
        "clientSideEventIndexC": "10",
        "lastControlSelected": "insert_layout_directive_button",
        "__WPhostName": "Chrome",
        "embeddedMode": false,
        "_style_hassubthemeTweaks": false,
        "repeatingSectionsAreDirty": true,
        "containerSubTypeNew": "",
        "containerSubTypeOld": "",
        "flagDropdownCascadingChanged": false,
        "toolBox_value": "",
        "addinBuildNumber": "5691",
        "addinBuildNumberHighestUsed": "5696",
        "alphaFiveBuildNumber": "12",
        "openedFromTemplate": false,
        "builtWithVersionNumer": 1,
        "_buildCount": "1234",
        "securityEnabled": false,
        "showHideIsUsed": false,
        "precalc": {
            "js_editorSetInitialization": ";\n",
            "customControl": {
                "js_beforePrepare": "\n__replaceAtRuntime_CustomControlsSystemBeforePrepare",
                "js_afterRender": "\n__replaceAtRuntime_CustomControlsSystemAfterRender",
                "customControl_xbasicFunctions": ""
            },
            "jschart": {
                "js_beforePrepare": "",
                "js_afterRender": "",
                "jschart_xbasicFunctions": "",
                "divstyle": ""
            },
            "rgraph": {
                "libraries": "RGraph.svg.common.ajax.js\nRGraph.svg.common.core.js\nRGraph.svg.common.csv.js\nRGraph.svg.common.fx.js\nRGraph.svg.common.key.js\nRGraph.svg.common.sheets.js\nRGraph.svg.common.tooltips.js\n"
            },
            "getSetFunctions": {
                "js_beforePrepare": ""
            },
            "injectibleHTML": "",
            "containerWindowHTML": "",
            "repeatingsectionInfoJs": "",
            "framesInfoJS": "{dialog.object}.framesInfo = {\n\n};\n",
            "jsActionJavascriptGlobalFunctions": "",
            "xbActionJavascriptGlobalFunctions": "",
            "javascriptSetupForGridLookups": "{\n}",
            "javascript": {
                "showWaitMessage": "",
                "hideWaitMessage": "",
                "embeddedUXComponents": ""
            },
            "fileUpload_controlInfo": "",
            "javascript_cascadingDropdowns": "{dialog.object}._cascadingControls = [];\n{dialog.object}._cascadingControlsChildren = [];",
            "template_html": "<!--div GLOBALERRORS-->\n<div class=\"errorTip\" style=\"margin-bottom: 2px; display: none; width: 8in; \" id=\"{dialog.componentname}.GLOBALERRORS\"></div>\n<!--End div GLOBALERRORS-->\n\n<div id=\"{dialog.componentname}.R1\">\n<div \tid=\"{dialog.componentName}.V.R{dialog.rownumber}.FLEXLAYOUT_1\"   \n\t\t\tA5-containerType=\"none\"\n\t\t\tclass=\"\"  style=\"padding: 2px; margin: 2px; display: flex; width: 100%; box-sizing: border-box; justify-content: center; align-content: center; align-items: center; \"  ><!--DIV for Container control-->\n<div class=\"A5CWLayout\" style=\"width: 98%\" >\n\t<!--FldS-->\t\t<div id=\"{grid.componentname}.V.R{grid.rownumber}.BUILDER\" class=\"{dialog.componentName}_BUILDER\"></div>\n\t\t<!--FldE-->\n</div>\n</div><div style=\"display:none;font: 0pt arial;clear:both;\"></div>\n\t</div>\n\n\n\n</div>\n<!--div DEBUGUPDATECOMMANDS-->\n<div class=\"\" style=\"display: none; \" id=\"{dialog.componentname}.DEBUGUPDATECOMMANDS\"></div>\n<!--End div DEBUGUPDATECOMMANDS-->\n",
            "panelDisplayNames": "",
            "controlJavascript": "",
            "controlJavascriptRepeatingSections": "",
            "template_js": "",
            "sessionVarsInShowHideExpns": "",
            "flagHasShowTimer": false,
            "themeSearchReplaceString": "[theme:edit.base.className|class.dialogInput]=*if_error(p.edit.base.className,\"[class.dialogInput]\")\n",
            "flagHasHTML5ImageCapture": false,
            "flagUsesCordova": false,
            "flagUseAmazonS3FileUpload": false,
            "flagUseStripe": false,
            "usesSystemSVG": true,
            "flagUseAudioPlayer": false,
            "flagUseInk": false,
            "flagUsesAudioLibrary": false,
            "flagUsesPhoneGapFileSystemFunctions": false,
            "flagUsesGetAccurateLocation": false,
            "editorSet_for_editor": "{dialog.object}._EDITOR_EDITORSET = {};",
            "otherJS": "",
            "javascript_layoutRules": "",
            "javascript_controlNesting": "{\nFLEXLAYOUT_1: ['BUILDER']\n}",
            "appcacheEvents": "",
            "IconMap": "{images.RowExpander.Open}=\"<Specified by Style>\"\n{images.RowExpander.Close}=\"<Specified by Style>\"\n{images.EmbeddedSearch.Search}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ClearSearch}=\"<Specified by Style>\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.NoFocus}=\"<Specified by Style>\"\n{images.GridRow.NewRecordRow.HasFocus}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord}=\"<Specified by Style>\"\n{images.GridRow.SaveRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges}=\"<Specified by Style>\"\n{images.GridRow.UndoChanges.Disabled}=\"<Specified by Style>\"\n{images.GridRow.EditRecord}=\"<Specified by Style>\"\n{images.GridRow.EditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord}=\"<Specified by Style>\"\n{images.GridRow.DeleteRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord}=\"<Specified by Style>\"\n{images.GridRow.CancelEditRecord.Disabled}=\"<Specified by Style>\"\n{images.GridRow.HasError}=\"<Specified by Style>\"\n{images.QBE.OperatorIsSelected}=\"<Specified by Style>\"\n{images.QBE.OpenQBEMenu}=\"<Specified by Style>\"\n{images.QBE.ShowHideQBERow}=\"<Specified by Style>\"\n{images.PopUpWindow.Lookup.Close}=\"<Specified by Style>\"\n{images.PopUpWindow.DetailView.Close}=\"<Specified by Style>\"\n{images.CollapseContainer.Open}=\"<Specified by Style>\"\n{images.CollapseContainer.Close}=\"<Specified by Style>\"\n{images.FieldHelpIcon}=\"<Specified by Style>\"\n{images.SearchPart.SaveSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.LoadSearchCriteria}=\"<Specified by Style>\"\n{images.SearchPart.RunSearch}=\"<Specified by Style>\"\n{images.SearchPart.ClearSearch}=\"<Specified by Style>\"\n{images.GridRow.SelectionPointer}=\"<Specified by Style>\"\n{images.Grid.SortAsc}=\"<Specified by Style>\"\n{images.Grid.SortAscDisabled}=\"<Specified by Style>\"\n{images.Grid.sortDesc}=\"<Specified by Style>\"\n{images.grid.sortDescDisabled}=\"<Specified by Style>\"\n{images.grid.firstPage}=\"<Specified by Style>\"\n{images.grid.firstPageDisabled}=\"<Specified by Style>\"\n{images.grid.prevPage}=\"<Specified by Style>\"\n{images.grid.prevPageDisabled}=\"<Specified by Style>\"\n{images.grid.nextPage}=\"<Specified by Style>\"\n{images.grid.nextPageDisabled}=\"<Specified by Style>\"\n{images.grid.lastPage}=\"<Specified by Style>\"\n{images.grid.lastPageDisabled}=\"<Specified by Style>\"\n{images.edit.dropdownArrow}=\"<Specified by Style>\"\n{images.edit.datePicker}=\"<Specified by Style>\"\n{images.edit.dateTimePicker}=\"<Specified by Style>\"\n{images.edit.timePicker}=\"<Specified by Style>\"\n{images.edit.calculator}=\"<Specified by Style>\"\n{images.edit.lookup}=\"<Specified by Style>\"\n{images.javascript.deleteRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.cancelEditRowConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.UndoAllEditsConfirmation}=\"<Specified by Style>\"\n{images.javascript.dirtyRecordWarning}=\"<Specified by Style>\"\n{images.dv.close}=\"<Specified by Style>\"\n{images.dv.firstRecord}=\"<Specified by Style>\"\n{images.dv.prevRecord}=\"<Specified by Style>\"\n{images.dv.nextRecord}=\"<Specified by Style>\"\n{images.dv.lastRecord}=\"<Specified by Style>\"\n{images.dv.newRecord}=\"<Specified by Style>\"\n{images.dv.cancelEdits}=\"<Specified by Style>\"\n{images.dv.deleteRecord}=\"<Specified by Style>\"\n{images.dv.saveRecord}=\"<Specified by Style>\"\n{images.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.switchToEdit}=\"<Specified by Style>\"\n{images.dv.switchToView}=\"<Specified by Style>\"\n{images.disabled.dv.newRecord}=\"<Specified by Style>\"\n{images.disabled.dv.cancelEdits}=\"<Specified by Style>\"\n{images.disabled.dv.deleteRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveRecord}=\"<Specified by Style>\"\n{images.disabled.dv.saveAndEnter}=\"<Specified by Style>\"\n{images.dv.cancelNewRecord}=\"<Specified by Style>\"\n{images.grid.editError}=\"<Specified by Style>\"\n{images.dialog.editError}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseLeft}=\"<Specified by Style>\"\n{images.tabbedUI.menuExpandRight}=\"<Specified by Style>\"\n{images.tabbedUI.menuCollapseRight}=\"<Specified by Style>\"",
            "absoluteLayoutSetButtonSizes": "",
            "viewBoxesToRefresh": "",
            "AdditionalGridStyles": "",
            "viewbox": {
                "includeJSONPath": false
            },
            "hasListNavigator": true,
            "vb_based_on_lists": "",
            "vb_based_on_javascritFunctions": "",
            "constrainContainerJS": "",
            "hasFormViewControls": false,
            "hasPDFViewer": false,
            "setScreenHeightJS": "",
            "hasListColumnSelector": false,
            "hasPDFViewerForReports": false,
            "hasIndexedDBJS": false,
            "hasCalendarJS": false,
            "hasCharts": false,
            "hasformbox": true,
            "hasExpandingmenus": false,
            "actionsheet": {
                "has": false
            },
            "kanban": {
                "has": false
            },
            "transformdataviewer": {
                "has": false,
                "controlnames": "",
                "controlnamesListDataSource": "{dialog.object}._listsWithDependentTFControls = {}"
            },
            "requiredPlugins": "",
            "formbox": {
                "has": false
            },
            "_PDFViewerIds": "",
            "__panelButtons": "",
            "flagLoadFirestore": false,
            "__freeformLayoutsJS": "",
            "_jsOnChangeFunctions": "function onChange_BUILDER_bb9ffb39e22841c88fbed36c49f528ae(_dlgObj){if(_dlgObj.executeWatchEventForControl) _dlgObj.executeWatchEventForControl('BUILDER');};",
            "_jsOnClickFunctions": ""
        },
        "FieldsInRepeatingSectionsDeletedBySecurity": "",
        "repeatingSectionsToRecalc": "",
        "dialogObject": "if(typeof {dialog.componentName}_DlgObj == 'object') {dialog.componentName}_DlgObj._destroy();\nvar {dialog.componentName}_DlgObj = new A5.DialogComponentHelper('{dialog.componentName}',{\n\tajaxURL: '{dialog.ajaxUrl}',\n\t_embeddedMode: {dialog.embeddedMode},\n\t_livePreviewInBuilder: {livePreviewInBuilder},\n\tcomponentGUID: 'f00755f6-dbc7-4e2b-80ea-69180db172ab',\n\tcolumnInfo: {columninfo},\n\toriginalValues: {dialog.jsOriginalValues},\n\tdefaultValues: {dialog.jsDefaultValues},\n\tdatePickerMonthNames: [{datePickerMonthNames}],\n\tdatePickerDayNames: [{datePickerDayNames}],\n\tdatePickerTodayButton: '{datePickerTodayButton}',\n\tdatePickerCloseButton: '{datePickerCloseButton}',\n\tdatePickerFirstDayOfWeek: {datePickerFirstDayOfWeek},\n\tresetFormMessage: '{resetFormMessage}',\n\tresetFormTitle: '{resetFormTitle}',\n\tresetFormIcon: '{resetFormIcon}',\n\tdirtyFormMessage: '{dirtyFormMessage}',\n\tdirtyFormTitle: '{dirtyFormTitle}',\n\tdirtyFormIcon: '{dirtyFormIcon}',\n\tdeleteRecordDialogTitle: '{deleteRecordTitle}',\n\tdeleteRecordDialogMessage: '{deleteRecordMessage}',\t\n\tssDateFormat: '{serverSideDateFormat}',\n\tstyleName: '{dialog.style}',\n\t_fieldHelpers_DIALOG2: [],\n\tparentComponentAlias: '{parentComponentAlias}',\n\tsubmitIfHasClientSideErrors: false, \n\trowErrors: {\n\t\t\t\tshowMessageBox: false,\n\t\t\t\tmessageBoxTitle: 'Error',\n\t\t\t\tstyle: 'color: red; width: 6in; height: 2in;'\n\t\t},\n\tfieldErrors: {\n\t\ttype: 'block', \n\t\tclassName: 'errorText',\n\t\tinputClassName: '[class.gridInputError]',\n\t\tedit: { \n\t\t\tcontainer: { className: '[class.gridInputContainerError]'}\n\t\t},\n\t\ticon: '{images.dialog.editError}',\n\t\tglobal: {\n\t\t\tcontId: '{dialog.componentname}.GLOBALERRORS',\n\t\t\thoverClassName: 'errorTextHighlight',\n\t\t\thoverInputClassName: 'errorInputHighlight'\n\t\t}\n\t},\n\t\tonInitializeComplete: function(e) {\n{dialog.object}.getUserSavedListConfig = function(listName) {\n\tlistName = encodeURIComponent(listName);\n\t\n\treturn new Promise((resolve, reject) => {\n\t\t{dialog.Object}.ajaxCallback('','','user_list_config_settings', '', `listname=${listName}`, {onComplete: resolve})\n\t});\n\t\n}\n\n{dialog.object}.getGlobalSavedListConfig = function(listName) {\n\tlistName = encodeURIComponent(listName);\n\t\n\treturn new Promise((resolve, reject) => {\n\t\t{dialog.Object}.ajaxCallback('','','global_list_config_settings', '', `listname=${listName}`, {onComplete: resolve})\n\t});\n\t\n}\n\t\t},\n\t\tonOrientationChange: function(e) {\nvar pObj = {dialog.object}.getPanelObject();\nif(pObj && pObj.resize && typeof pObj.resize == 'function') pObj.resize();\n\t\t},\n\t\t_onWindowResize: function(e) {\nvar arr = {dialog.object}._listControls;\nif(arr) {\n\tvar obj;\n\tfor(var i = 0; i < arr.length; i++) { \n\t\t\n\t\tobj = {dialog.object}.getControl(arr[i]);\n\t\tif(obj && obj.resize && typeof obj.resize == 'function') obj.resize()\n\t}\n}\n\t\t},\n_onInitializeBegin: function(e) { /*systemOnInitializeBegin*/ ;\n   },\n\n\n\t});\n\n",
        "xbasiccode": {
            "blankInitialValueIfVarNotFound": "",
            "setValueProperties": "value.BUILDER=\"\"",
            "setValueProperties2": "value.BUILDER=\"\"",
            "setValueUnformattedProperties": "value.BUILDER=convert_type(\"\",\"C\")\n"
        },
        "componentType": "Dialog2",
        "version": 1,
        "recNav": {
            "slider": {
                "showSlider": false
            }
        },
        "_flagStaticHTMLMode": false,
        "__flagUseFakeRequestVariables": false,
        "__specialMode": false,
        "alias": "{UXPRERENDEREDALIAS}",
        "systemXbasicFunctionDeclarations": "",
        "localPreviewFlag": false,
        "flagStaticHTMLMode": false,
        "flagInitialLoadIsAjax": false,
        "_forceInitialLoadIsAjax": false,
        "override_settings": "",
        "flagForcerecalc": false,
        "flagSaveDialogCache": true,
        "__argumentsFromGrid": "",
        "flagExecuteOnDialogInitializeEvent": true,
        "flagExecuteOnDialogExecuteEvent": true,
        "__livePreviewMode": false,
        "iconMapOverrides": "",
        "resolveAbstractIconNamesAtDesignTime": true,
        "customizationString": {
            "javascriptDialogs": "",
            "DetailView": {
                "toolbar": ""
            }
        },
        "linkedResources": "",
        "flagReloadComponent": false,
        "__flagstatichtmlorphonegap": false,
        "temp": {
            "_onRenderComplete": ""
        },
        "disableAbstractEvents": false,
        "jsRunAtBeginning": "",
        "flagLoadDetailViewImageCaptureJS": false,
        "forceLoadPhoneGapFileSystemFunctions": false,
        "_flagUsesAudioLibrary": false,
        "_flagUsesInk": false,
        "_flagUsesControlBar": true,
        "__staticHTML_setStaticHTMLFlag": false,
        "sassProcessor": true,
        "debugMode": false,
        "__jsLibraries": "<script type=\"text/javascript\" src=\"javascript/a5.js\"></script>\n<script type=\"text/javascript\" src=\"javascript/a5_url.js\"></script>\n",
        "A5SaveTimeStamp": "20240706145212854",
        "forceChromeControl": true,
        "flagOptimizedUXTree": true,
        "flagReanalyzeContainers": false,
        "minimumBuildNumber": "",
        "_display": "",
        "serversidelanguage": "Xbasic",
        "style_color_palette": "",
        "customTabOrder": "",
        "showPulseEffect": true,
        "flagShowDeleteConfirmation": true,
        "floatingLabelSettingsJSON": "",
        "onConnectionLostBehavior": "Stop",
        "onConnectionLostExecutionDuration": "0",
        "AllowSelectionOfText": false,
        "debugOnTemplateError": false,
        "_conversiontoOptimizeUXTreeHasRun": true,
        "componentImagesJSON": "",
        "friendlydatesCustomizationJSON": "",
        "simulatedculture": "",
        "allowusertoswitchstylesatruntime": false,
        "listofstyles": "",
        "styleselectorplaceholder": "",
        "baseURLForStyles": "",
        "templateforstyleselector": "",
        "captureJSErrorStackTrace": false,
        "optionalSystemLibraries": "",
        "watcheventsjson": "",
        "svgiconsdefaultsize": "15,15",
        "PreRenderUXInSections": false,
        "refreshPanelObject": true,
        "compressUX": false,
        "optimizedPreRender": false,
        "useIphoneXStyling": false,
        "iPhoneXStylingJSON": "",
        "wrapPasswordFieldsInForms": true,
        "useCSSFlexForContainerAlignment": true,
        "pusherConfigJSON": "",
        "pusherApp": false,
        "lockEventHandlers": true,
        "lockEventHandlersDuration": 300,
        "capturesqltracelog": false,
        "addCorsHeaders": false,
        "corsAllowOrigins": "*",
        "corsAllowPrivateNetwork": false,
        "convertImagesToBase64": false,
        "htmlencodejavascript": true,
        "__LPhostName": "Chrome",
        "_style_isInherited": false,
        "_analyzecontainersjs": true,
        "_repeatingSectionPendingRecalc": "\n",
        "cachecomponent": false,
        "_crcXbEvents": 4294903431,
        "_crcJSFunctions": 4294965178,
        "_crcJSEvents": 4294928392,
        "_treeErrors": "",
        "__flagHasMacro": false,
        "__staticMode": "",
        "__componentnotfound": false,
        "_fakeServersideCanAjaxCallback": true,
        "_style_name_beforeResolve": "Alpha",
        "__changeAJAXURL": "",
        "_afterLogin": {
            "panelName": ""
        },
        "__phoneGapInstantUpdate": false,
        "suppressLoadingHTML5JSLibrary": false,
        "loadJavascript": {
            "detailViewImageCapture": true,
            "controlbars": true,
            "charts": true,
            "formbox": true,
            "pickers": true
        },
        "includeIndexedDB": false,
        "_flagUsesCharts": false,
        "_passwordReset": false,
        "_isPartial": false,
        "__flagCreateAppCache": false,
        "__embedLinkedFiles": false,
        "__embedLinkedJSFiles": false,
        "showJavascriptActions": false,
        "showResponsiveLayoutHelp": false,
        "suppressJavascriptCodeWarning": false,
        "restorePanelSizes": true,
        "populateArgumentsFromQueryString": false,
        "livePreview_permissions_friendly": "",
        "a_UnboundActionJavascript": [
            {
                "idInternal": "",
                "name": ""
            }
        ],
        "simulatedcultureNumber": "",
        "_alphasoftwareBucketName": "",
        "staticHTMLFileJSON": "",
        "__flagRecursive": false,
        "_flagDoTreeview": true,
        "_move": {
            "index": 2,
            "targetIndex": 1,
            "count": 1
        },
        "__allowCascadingRecalc": true,
        "_flagForceRecalcChildren": true,
        "__idinternalCurrentControl": "bb9ffb39-e228-41c8-8fbe-d36c49f528ae",
        "__nameCurrentControl": "BUILDER",
        "_choices": "base\nconfirm\ndeny\nleft\nright\nprimary\nsecondary\nraised\nsubtle\nicon\niconText\niconRaised\ncapsule\ncapsuleRaised\ncapsuleSubtle\ncapsuleSubtleRaised\ncircle\ncircleRaised\ncircleSubtle\ncircleSubtleRaised\n",
        "versionNumber": 1,
        "prerendered": {
            "_styledataVersion": 4,
            "output": {
                "Head": {
                    "JavaScript": "*gzip:H4sIAAAAAAAAC5WMsQ6CQBAFexP/Aa/Hq+gOOjsqf2Cznq84PPGyuyD8vSQUFlaWM5NM0CipWGVrQesMi/mBZ96tq1Ri677Cc3Me1HXB79wdD+HfAU2Sfyanun/x/bIYZOTcp5uwJGi9NSJByRzBdp1GS08QRVW1NcPe4IcSfQAk7ywxxgAAAA==",
                    "CSS_Link": "*gzip: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",
                    "title": "*gzip:H4sIAAAAAAAAC7MpySzJSbULjbDRh7AAiMez8hEAAAA="
                },
                "body": {
                    "body_tag": "*gzip:H4sIAAAAAAAAC7NJyk+pVEjOSSwutlUqSExPVVAoKM0pTlWyAwC29a3YGgAAAA==",
                    "dialog2_html": "*gzip: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"
                },
                "ajaxResponse": "*gzip:"
            },
            "iconMap": "{images.RowExpander.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.RowExpander.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.EmbeddedSearch.Search}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.EmbeddedSearch.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.EmbeddedSearch.ShowHideEmbeddedSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.GridRow.NewRecordRow.NoFocus}=\"svgIcon=#alpha-icon-doc:icon iconButton\"\n{images.GridRow.NewRecordRow.HasFocus}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.GridRow.SaveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.GridRow.SaveRecord.Disabled}=\"svgIcon=#alpha-icon-save:icon iconDisabled iconButton\"\n{images.GridRow.UndoChanges}=\"svgIcon=#alpha-icon-undo:icon iconButton\"\n{images.GridRow.UndoChanges.Disabled}=\"svgIcon=#alpha-icon-undo:icon iconDisabled iconButton\"\n{images.GridRow.EditRecord}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.GridRow.EditRecord.Disabled}=\"svgIcon=#alpha-icon-edit:icon iconDisabled iconButton\"\n{images.GridRow.DeleteRecord}=\"svgIcon=#alpha-icon-removeCircle:icon iconButton\"\n{images.GridRow.DeleteRecord.Disabled}=\"svgIcon=#alpha-icon-removeCircle:icon iconDisabled iconButton\"\n{images.GridRow.CancelEditRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.GridRow.CancelEditRecord.Disabled}=\"svgIcon=#alpha-icon-editCancel:icon iconDisabled iconButton\"\n{images.GridRow.HasError}=\"svgIcon=#alpha-icon-exclamationCircle:icon iconButton\"\n{images.QBE.OperatorIsSelected}=\"svgIcon=#alpha-icon-check:icon iconButton\"\n{images.QBE.OpenQBEMenu}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.QBE.ShowHideQBERow}=\"svgIcon=#alpha-icon-filter:icon iconButton\"\n{images.PopUpWindow.Lookup.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.PopUpWindow.DetailView.Close}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.CollapseContainer.Open}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.CollapseContainer.Close}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.FieldHelpIcon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.SearchPart.SaveSearchCriteria}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.SearchPart.LoadSearchCriteria}=\"svgIcon=#alpha-icon-load:icon iconButton\"\n{images.SearchPart.RunSearch}=\"svgIcon=#alpha-icon-magGlass:icon iconButton\"\n{images.SearchPart.ClearSearch}=\"svgIcon=#alpha-icon-magGlassX:icon iconButton\"\n{images.GridRow.SelectionPointer}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.Grid.SortAsc}=\"svgIcon=#alpha-icon-chevronUp:icon iconButton\"\n{images.Grid.SortAscDisabled}=\"svgIcon=#alpha-icon-chevronUp:icon iconDisabled iconButton\"\n{images.Grid.sortDesc}=\"svgIcon=#alpha-icon-chevronDown:icon iconButton\"\n{images.grid.sortDescDisabled}=\"svgIcon=#alpha-icon-chevronDown:icon iconDisabled iconButton\"\n{images.grid.firstPage}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.grid.firstPageDisabled}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconDisabled iconButton\"\n{images.grid.prevPage}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.grid.prevPageDisabled}=\"svgIcon=#alpha-icon-chevronLeft:icon iconDisabled iconButton\"\n{images.grid.nextPage}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.grid.nextPageDisabled}=\"svgIcon=#alpha-icon-chevronRight:icon iconDisabled iconButton\"\n{images.grid.lastPage}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.grid.lastPageDisabled}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconDisabled iconButton\"\n{images.edit.dropdownArrow}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.datePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.dateTimePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.timePicker}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.edit.calculator}=\n{images.edit.lookup}=\"svgIcon=#alpha-icon-chevronDown:icon\"\n{images.javascript.deleteRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.cancelEditRowConfirmation}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.javascript.UndoEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.UndoAllEditsConfirmation}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.javascript.dirtyRecordWarning}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dv.close}=\"svgIcon=#alpha-icon-xCircle:icon iconButton\"\n{images.dv.firstRecord}=\"svgIcon=#alpha-icon-chevronDblLeft:icon iconButton\"\n{images.dv.prevRecord}=\"svgIcon=#alpha-icon-chevronLeft:icon iconButton\"\n{images.dv.nextRecord}=\"svgIcon=#alpha-icon-chevronRight:icon iconButton\"\n{images.dv.lastRecord}=\"svgIcon=#alpha-icon-chevronDblRight:icon iconButton\"\n{images.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.switchToEdit}=\"svgIcon=#alpha-icon-edit:icon iconButton\"\n{images.dv.switchToView}=\"svgIcon=#alpha-icon-x:icon iconButton\"\n{images.disabled.dv.newRecord}=\"svgIcon=#alpha-icon-docAdd:icon iconButton\"\n{images.disabled.dv.cancelEdits}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.disabled.dv.deleteRecord}=\"svgIcon=#alpha-icon-docX:icon iconButton\"\n{images.disabled.dv.saveRecord}=\"svgIcon=#alpha-icon-save:icon iconButton\"\n{images.disabled.dv.saveAndEnter}=\"svgIcon=#alpha-icon-saveAndEnter:icon iconButton\"\n{images.dv.cancelNewRecord}=\"svgIcon=#alpha-icon-editCancel:icon iconButton\"\n{images.grid.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.tabbedUI.menuExpandLeft}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.tabbedUI.menuCollapseLeft}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuExpandRight}=\"svgIcon=#alpha-icon-chevronDblLeft:icon\"\n{images.tabbedUI.menuCollapseRight}=\"svgIcon=#alpha-icon-chevronDblRight:icon\"\n{images.dialog.repeatingSectionActiveRowIcon}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.repeatingSectionAddRowIcon}=\"svgIcon=#alpha-icon-add:icon iconButton\"\n{images.dialog.repeatingSectionDeleteRowIcon}=\"svgIcon=#alpha-icon-remove:icon iconButton\"\n{images.dialog.repeatingSectionErrorRowIcon}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.deleteRowMessage.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.resetForm.icon}=\"svgIcon=#alpha-icon-questionCircle:icon\"\n{images.dialog.dirtyForm.icon}=\"svgIcon=#alpha-icon-infoCircle:icon\"\n{images.dialog.editError}=\"svgIcon=#alpha-icon-exclamationCircle:icon\"\n{images.dialog.listNav}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.listNavSubtle}=\"svgIcon=#alpha-icon-chevronRight:icon\"\n{images.dialog.menu}=\"svgIcon=#alpha-icon-bars:icon\"\n{images.dialog.refresh}=\"svgIcon=#alpha-icon-refresh:icon\"\n{images.dialog.refreshDisabled}=\"svgIcon=#alpha-icon-refresh:icon iconDisabled\""
        }
    }
}